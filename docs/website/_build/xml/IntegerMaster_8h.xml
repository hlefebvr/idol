<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="IntegerMaster_8h" kind="file" language="C++">
    <compoundname>IntegerMaster.h</compoundname>
    <includes refid="DefaultNodeInfo_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h</includes>
    <includes refid="BranchAndBoundCallbackFactory_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h</includes>
    <includes refid="BranchAndBoundCallback_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h</includes>
    <includes refid="Optimizers__DantzigWolfeDecomposition_8h" local="yes">idol/mixed-integer/optimizers/dantzig-wolfe/Optimizers_DantzigWolfeDecomposition.h</includes>
    <incdepgraph>
      <node id="25">
        <label>list</label>
      </node>
      <node id="45">
        <label>idol/general/optimizers/Optimizer.h</label>
        <link refid="Optimizer_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>idol/mixed-integer/modeling/models/Model.h</label>
        <link refid="Model_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h</label>
        <link refid="BranchAndBoundCallbackFactory_8h_source"/>
      </node>
      <node id="78">
        <label>idol/mixed-integer/modeling/expressions/operations/operators.h</label>
        <link refid="operators_8h_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="11">
        <label>idol/mixed-integer/modeling/expressions/LinExpr.h</label>
        <link refid="LinExpr_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>idol/mixed-integer/optimizers/dantzig-wolfe/Optimizers_DantzigWolfeDecomposition.h</label>
        <link refid="Optimizers__DantzigWolfeDecomposition_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>idol/general/utils/Point.h</label>
        <link refid="Point_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>idol/general/utils/Pair.h</label>
        <link refid="Pair_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h</label>
        <link refid="IntegerMaster_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/BranchingRuleFactory.h</label>
        <link refid="BranchingRuleFactory_8h_source"/>
      </node>
      <node id="83">
        <label>idol/mixed-integer/optimizers/dantzig-wolfe/logs/Factory.h</label>
        <link refid="dantzig-wolfe_2logs_2Factory_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>Formulation.h</label>
        <link refid="mixed-integer_2optimizers_2dantzig-wolfe_2Formulation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cmath</label>
      </node>
      <node id="48">
        <label>idol/general/optimizers/OptimizerFactory.h</label>
        <link refid="OptimizerFactory_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>cassert</label>
      </node>
      <node id="54">
        <label>DefaultNodeUpdator.h</label>
        <link refid="DefaultNodeUpdator_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>stdexcept</label>
      </node>
      <node id="19">
        <label>numeric</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="28">
        <label>impl_Annotation.h</label>
        <link refid="impl__Annotation_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>BranchingDecision.h</label>
        <link refid="BranchingDecision_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>NodeUpdator.h</label>
        <link refid="NodeUpdator_8h_source"/>
      </node>
      <node id="32">
        <label>map</label>
      </node>
      <node id="56">
        <label>Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>idol/general/numericals.h</label>
        <link refid="numericals_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>AffExpr.h</label>
        <link refid="AffExpr_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>fstream</label>
      </node>
      <node id="39">
        <label>ostream</label>
      </node>
      <node id="40">
        <label>idol/mixed-integer/modeling/expressions/QuadExpr.h</label>
        <link refid="QuadExpr_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>idol/mixed-integer/modeling/variables/VarVersion.h</label>
        <link refid="VarVersion_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>idol/mixed-integer/optimizers/callbacks/CallbackFactory.h</label>
        <link refid="CallbackFactory_8h_source"/>
      </node>
      <node id="29">
        <label>any</label>
      </node>
      <node id="66">
        <label>idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/BranchingRule.h</label>
        <link refid="BranchingRule_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>idol/mixed-integer/modeling/objects/Object.h</label>
        <link refid="Object_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h</label>
        <link refid="DefaultNodeInfo_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h</label>
        <link refid="NodeSelectionRuleFactory_8h_source"/>
      </node>
      <node id="35">
        <label>optional</label>
      </node>
      <node id="68">
        <label>idol/mixed-integer/optimizers/branch-and-bound/callbacks/AbstractBranchAndBoundCallbackI.h</label>
        <link refid="AbstractBranchAndBoundCallbackI_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h</label>
        <link refid="NodeSelectionRule_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="59">
        <label>idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h</label>
        <link refid="BranchAndBoundCallback_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>streambuf</label>
      </node>
      <node id="61">
        <label>idol/mixed-integer/optimizers/branch-and-bound/Optimizers_BranchAndBound.h</label>
        <link refid="Optimizers__BranchAndBound_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>idol/mixed-integer/modeling/constraints/TempCtr.h</label>
        <link refid="TempCtr_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="12">
        <label>idol/general/utils/SparseVector.h</label>
        <link refid="SparseVector_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sstream</label>
      </node>
      <node id="81">
        <label>idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h</label>
        <link refid="DantzigWolfeInfeasibilityStrategy_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>idol/general/utils/IteratorForward.h</label>
        <link refid="IteratorForward_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>idol/mixed-integer/modeling/Types.h</label>
        <link refid="Types_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>idol/mixed-integer/modeling/annotations/Annotation.h</label>
        <link refid="Annotation_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>idol/mixed-integer/optimizers/branch-and-bound/logs/Factory.h</label>
        <link refid="branch-and-bound_2logs_2Factory_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="37">
        <label>idol/mixed-integer/modeling/constraints/Ctr.h</label>
        <link refid="Ctr_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>SubProblem.h</label>
        <link refid="dantzig-wolfe_2SubProblem_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h</label>
        <link refid="DualPriceSmoothingStabilization_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>unordered_map</label>
      </node>
      <node id="10">
        <label>idol/mixed-integer/modeling/objects/Version.h</label>
        <link refid="Version_8h_source"/>
      </node>
      <node id="47">
        <label>chrono</label>
      </node>
      <node id="46">
        <label>Timer.h</label>
        <link refid="Timer_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>idol/general/utils/GeneratorPool.h</label>
        <link refid="GeneratorPool_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>idol/mixed-integer/modeling/constraints/CtrVersion.h</label>
        <link refid="CtrVersion_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>idol/general/optimizers/Algorithm.h</label>
        <link refid="Algorithm_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>idol/general/utils/exceptions/Exception.h</label>
        <link refid="Exception_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>idol/mixed-integer/optimizers/branch-and-bound/nodes/NodeSet.h</label>
        <link refid="NodeSet_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>idol/general/utils/Vector.h</label>
        <link refid="Vector_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>idol/mixed-integer/modeling/constraints/SOSCtr.h</label>
        <link refid="SOSCtr_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>CallbackAsBranchAndBoundCallback.h</label>
        <link refid="CallbackAsBranchAndBoundCallback_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ObjectId.h</label>
        <link refid="ObjectId_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>idol/mixed-integer/modeling/constraints/QCtr.h</label>
        <link refid="QCtr_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>idol/mixed-integer/optimizers/callbacks/Callback.h</label>
        <link refid="Callback_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>idol/mixed-integer/modeling/variables/Var.h</label>
        <link refid="Var_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>idol/general/utils/GenerationPattern.h</label>
        <link refid="GenerationPattern_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>operators_utils.h</label>
        <link refid="operators__utils_8h_source"/>
      </node>
      <node id="23">
        <label>memory</label>
      </node>
      <node id="49">
        <label>idol/general/utils/LimitedWidthStream.h</label>
        <link refid="LimitedWidthStream_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>idol/general/utils/Map.h</label>
        <link refid="Map_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classidol_1_1Heuristics_1_1IntegerMaster" prot="public">idol::Heuristics::IntegerMaster</innerclass>
    <innerclass refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy" prot="public">idol::Heuristics::IntegerMaster::Strategy</innerclass>
    <innernamespace refid="namespaceidol">idol</innernamespace>
    <innernamespace refid="namespaceidol_1_1Heuristics">idol::Heuristics</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>henri<sp/>on<sp/>30/03/23.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IDOL_INTEGERMASTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDOL_INTEGERMASTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/dantzig-wolfe/Optimizers_DantzigWolfeDecomposition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">idol::Heuristics<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;<sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IntegerMaster;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">ol::DefaultNodeInfo&gt;</highlight></codeline>
<codeline lineno="18" refid="classidol_1_1Heuristics_1_1IntegerMaster" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">BranchAndBoundCallbackFactory</ref>&lt;NodeInfoT&gt;<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;OptimizerFactory&gt;<sp/>m_optimizer_factory;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>m_integer_columns;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>m_time_limit;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_iteration_limit;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_max_depth;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_frequency;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>t_src);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>(<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>operator=(<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy" kindref="compound">Strategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback</ref>&lt;NodeInfoT&gt;<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;OptimizerFactory&gt;<sp/>m_optimizer_factory;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_integer_columns<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_time_limit<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_iteration_limit<sp/>=<sp/>std::numeric_limits&lt;unsigned<sp/>int&gt;::max();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_max_depth<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_frequency<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_n_relevant_calls<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Counts<sp/>the<sp/>number<sp/>of<sp/>calls<sp/>to<sp/>the<sp/>callback<sp/>which<sp/>can<sp/>trigger<sp/>the<sp/>heuristic,<sp/>except<sp/>for<sp/>frequency<sp/>reasons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a7f6e5b141cccd4511946ebea8937fefc" kindref="member">operator()</ref>(CallbackEvent<sp/>t_event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy" kindref="compound">Strategy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_optimizer);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_integer_columns()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_integer_columns;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_integer_columns(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value)<sp/>{<sp/>m_integer_columns<sp/>=<sp/>t_value;<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_time_limit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_time_limit)<sp/>{<sp/>m_time_limit<sp/>=<sp/>std::max(0.,<sp/>t_time_limit);<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_iteration_limit(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_iteration_limit)<sp/>{<sp/>m_iteration_limit<sp/>=<sp/>t_iteration_limit;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_max_depth(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_max_depth)<sp/>{<sp/>m_max_depth<sp/>=<sp/>t_max_depth;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_frequency(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_frequency)<sp/>{<sp/>m_frequency<sp/>=<sp/>t_frequency;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback&lt;NodeInfoT&gt;</ref><sp/>*operator()()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">BranchAndBoundCallbackFactory&lt;NodeInfoT&gt;</ref><sp/>*clone()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>with_optimizer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_optimizer);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>with_integer_columns(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>with_time_limit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_time_limit);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>with_iteration_limit(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_iteration_limit);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>with_max_depth(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_max_depth);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>with_frequency(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_frequency);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::IntegerMaster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">IntegerMaster</ref>&amp;<sp/>t_src)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_optimizer_factory(t_src.m_optimizer_factory<sp/>?<sp/>t_src.m_optimizer_factory-&gt;clone()<sp/>:<sp/>nullptr),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_integer_columns(t_src.m_integer_columns),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_time_limit(t_src.m_time_limit),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_iteration_limit(t_src.m_time_limit),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_max_depth(t_src.m_max_depth),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_frequency(t_src.m_frequency)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">idol::BranchAndBoundCallback&lt;NodeInfoT&gt;</ref><sp/>*<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_optimizer_factory)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>solver<sp/>was<sp/>given<sp/>to<sp/>solve<sp/>the<sp/>integer<sp/>master<sp/>problem,<sp/>please<sp/>call<sp/>IntegerMaster.rst::with_osi_interface<sp/>to<sp/>configure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Strategy(*m_optimizer_factory);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_integer_columns.has_value())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;set_integer_columns(m_integer_columns.value());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_time_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;set_time_limit(m_time_limit.value());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iteration_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;set_iteration_limit(m_iteration_limit.value());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_max_depth.has_value()){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;set_max_depth(m_max_depth.value());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_frequency.has_value())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;set_frequency(m_frequency.value());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::with_optimizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OptimizerFactory<sp/>&amp;t_optimizer)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_optimizer_factory)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;A<sp/>solver<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_optimizer_factory.reset(t_optimizer.clone());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">idol::BranchAndBoundCallbackFactory&lt;NodeInfoT&gt;</ref><sp/>*<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntegerMaster(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::with_integer_columns</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_integer_columns<sp/>=<sp/>t_value;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::with_time_limit</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_time_limit)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>m_time_limit<sp/>=<sp/>t_time_limit;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::with_iteration_limit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_iteration_limit)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iteration_limit<sp/>=<sp/>t_iteration_limit;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::with_max_depth</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_max_depth)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_max_depth<sp/>=<sp/>t_max_depth;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::with_frequency</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_frequency)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frequency<sp/>=<sp/>t_frequency;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="classidol_1_1Heuristics_1_1IntegerMaster" kindref="compound">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::Strategy::Strategy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OptimizerFactory<sp/>&amp;t_optimizer)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_optimizer_factory(t_optimizer.clone())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="176" refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a7f6e5b141cccd4511946ebea8937fefc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a7f6e5b141cccd4511946ebea8937fefc" kindref="member">idol::Heuristics::IntegerMaster&lt;NodeInfoT&gt;::Strategy::operator()</ref>(CallbackEvent<sp/>t_event)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_event<sp/>!=<sp/>InvalidSolution)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_max_depth<sp/>&lt;<sp/>this-&gt;node().level())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_relevant_calls<sp/>=<sp/>m_n_relevant_calls++;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n_relevant_calls<sp/>%<sp/>m_frequency<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>relaxation<sp/>=<sp/>this-&gt;relaxation();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dantzig_wolfe_optimizer<sp/>=<sp/>relaxation.optimizer().template<sp/>as&lt;Optimizers::DantzigWolfeDecomposition&gt;();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>original_model<sp/>=<sp/>this-&gt;original_model();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>formulation<sp/>=<sp/>dantzig_wolfe_optimizer.formulation();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sub_problems<sp/>=<sp/>formulation.n_sub_problems();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Model&gt;<sp/>integer_master(formulation.master().clone());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>integer_master-&gt;unuse();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>:<sp/>original_model.vars())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VarType<sp/>type<sp/>=<sp/>original_model.get_var_type(var);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(integer_master-&gt;has(var))<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer_master-&gt;set_var_type(var,<sp/>type);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_integer_columns)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>n_sub_problems<sp/>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[alpha,<sp/>generator]:<sp/>formulation.present_generators(i))<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer_master-&gt;set_var_type(alpha,<sp/>Binary);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>integer_master-&gt;use(*m_optimizer_factory);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>integer_master-&gt;optimizer().set_param_time_limit(std::min(m_time_limit,<sp/>relaxation.optimizer().get_remaining_time()));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>set<sp/>bound<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>integer_master-&gt;optimizer().set_param_iteration_limit(m_iteration_limit);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>integer_master-&gt;optimize();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>integer_master-&gt;get_status();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>Optimal<sp/>&amp;&amp;<sp/>status<sp/>!=<sp/>Feasible)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solution<sp/>=<sp/>save_primal(*integer_master);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>alpha<sp/>=<sp/>1,<sp/>add<sp/>generator<sp/>to<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>n_sub_problems<sp/>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[alpha,<sp/>generator]:<sp/>formulation.present_generators(i))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solution.get(alpha)<sp/>&gt;<sp/>.5)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution.merge_without_conflict(generator);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution.set(alpha,<sp/>0.);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NodeInfoT();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;set_primal_solution(std::move(solution));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;submit_heuristic_solution(info);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//IDOL_INTEGERMASTER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h"/>
  </compounddef>
</doxygen>
