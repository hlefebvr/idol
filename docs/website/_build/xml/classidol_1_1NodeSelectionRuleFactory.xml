<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1NodeSelectionRuleFactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::NodeSelectionRuleFactory</compoundname>
    <derivedcompoundref refid="classidol_1_1BestBound_1_1Strategy" prot="public" virt="non-virtual">idol::BestBound::Strategy&lt; NodeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1BestEstimate_1_1Strategy" prot="public" virt="non-virtual">idol::BestEstimate::Strategy&lt; NodeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1BreadthFirst_1_1Strategy" prot="public" virt="non-virtual">idol::BreadthFirst::Strategy&lt; NodeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1DepthFirst_1_1Strategy" prot="public" virt="non-virtual">idol::DepthFirst::Strategy&lt; NodeT &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1WorstBound_1_1Strategy" prot="public" virt="non-virtual">idol::WorstBound::Strategy&lt; NodeT &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class NodeT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1NodeSelectionRuleFactory_1ab414283daaab0949d39a2b15a8ab16c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::NodeSelectionRuleFactory&lt; NodeT &gt;::~NodeSelectionRuleFactory</definition>
        <argsstring>()=default</argsstring>
        <name>~NodeSelectionRuleFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h" line="24" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeSelectionRuleFactory_1ab592dfbca453a3edd06cb07112c8155a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1NodeSelectionRule" kindref="compound">NodeSelectionRule</ref>&lt; NodeT &gt; *</type>
        <definition>virtual NodeSelectionRule&lt;NodeT&gt;* idol::NodeSelectionRuleFactory&lt; NodeT &gt;::operator()</definition>
        <argsstring>(Optimizers::BranchAndBound&lt; NodeT &gt; &amp;t_parent) const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1BestBound_1_1Strategy_1ad4f42672d8940fbb8bad2eda3cfa3584">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1BestEstimate_1_1Strategy_1a9bf6ad38f68d22c9b1d1b6da886dca39">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1BreadthFirst_1_1Strategy_1ac03805a2fa798cd31e90362a718cb4bb">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1DepthFirst_1_1Strategy_1a6cb90c52ef4e4a7541c7362f2071b4dd">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1WorstBound_1_1Strategy_1a7660aebdf0cbaeacb8d85b82f0edf79b">operator()</reimplementedby>
        <param>
          <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeT &gt; &amp;</type>
          <declname>t_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h" line="26" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeSelectionRuleFactory_1a9bc3ef2003c48949e16107c57648a216" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1NodeSelectionRuleFactory" kindref="compound">NodeSelectionRuleFactory</ref> *</type>
        <definition>virtual NodeSelectionRuleFactory* idol::NodeSelectionRuleFactory&lt; NodeT &gt;::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1BestBound_1_1Strategy_1a28dcf38139a55839afb5948bacae4db0">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1BestEstimate_1_1Strategy_1ad3b9f8e42f0edc6fc1ba65443ac7fb54">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1BreadthFirst_1_1Strategy_1a431e745b236308d5ddb345650dac09e0">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1DepthFirst_1_1Strategy_1a9935f8d94283a8f5f47d3188eab82054">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1WorstBound_1_1Strategy_1afe2c10c2e676e6efd6a2fbf9047aefe7">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h" line="28" column="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>idol::BestEstimate::Strategy&lt; NodeT &gt;</label>
        <link refid="classidol_1_1BestEstimate_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>idol::BreadthFirst::Strategy&lt; NodeT &gt;</label>
        <link refid="classidol_1_1BreadthFirst_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::BestBound::Strategy&lt; NodeT &gt;</label>
        <link refid="classidol_1_1BestBound_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::DepthFirst::Strategy&lt; NodeT &gt;</label>
        <link refid="classidol_1_1DepthFirst_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::NodeSelectionRuleFactory&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRuleFactory"/>
      </node>
      <node id="6">
        <label>idol::WorstBound::Strategy&lt; NodeT &gt;</label>
        <link refid="classidol_1_1WorstBound_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::NodeSelectionRuleFactory&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRuleFactory"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h" line="22" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h" bodystart="22" bodyend="29"/>
    <listofallmembers>
      <member refid="classidol_1_1NodeSelectionRuleFactory_1a9bc3ef2003c48949e16107c57648a216" prot="public" virt="pure-virtual"><scope>idol::NodeSelectionRuleFactory</scope><name>clone</name></member>
      <member refid="classidol_1_1NodeSelectionRuleFactory_1ab592dfbca453a3edd06cb07112c8155a" prot="public" virt="pure-virtual"><scope>idol::NodeSelectionRuleFactory</scope><name>operator()</name></member>
      <member refid="classidol_1_1NodeSelectionRuleFactory_1ab414283daaab0949d39a2b15a8ab16c9" prot="public" virt="virtual"><scope>idol::NodeSelectionRuleFactory</scope><name>~NodeSelectionRuleFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
