name: CMake

on:
  push:
    branches: [ "*", "!gh-pages" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download Eigen
      run: wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.bz2

    - name: Install Eigen
      run: tar -xvf eigen*.tar.bz2 && rm eigen*.tar.bz2 && find . -depth -type d -name eigen-* -execdir mv {} ${{github.workspace}}/Eigen \;

    - name: Download Mosek
      run: wget https://download.mosek.com/stable/10.0.40/mosektoolslinux64x86.tar.bz2

    - name: Install Mosek
      run: tar -xvf mosektoolslinux64x86.tar.bz2 -C ${{github.workspace}} && (cd ${{github.workspace}}/mosek/10.0/tools/platform/linux64x86/src/fusion_cxx && make install)

    - name: Update apt-get
      run: sudo apt-get update

    - name: Install GLPK
      run: sudo apt-get install glpk-utils libglpk-dev
      
    - name: Install lcov
      run: sudo apt-get install lcov
  
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DBUILD_TESTS=YES -DWITH_TEST_COVERAGE=YES -DUSE_GLPK=YES -DUSE_MOSEK=YES -DUSE_EIGEN=YES -DMOSEK_DIR=${{github.workspace}}/mosek/10.0/tools/platform/linux64x86 -DEIGEN_DIR=${{github.workspace}}/Eigen

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Install Mosek license
      run: 'echo "${MOSEK_LICENSE}" | base64 --decode > ${{github.workspace}}/mosek/mosek.lic'
      env:
        MOSEK_LICENSE: ${{secrets.MOSEK_LICENSE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./tests
      env:
        MOSEKLM_LICENSE_FILE: ${{github.workspace}}/mosek/mosek.lic
      
    - name: Build coverage report
      run: lcov --directory . --capture --output-file coverage.info
      
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: coverage.info
        flags: default
