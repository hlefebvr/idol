<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="BilevelOptimizerInterface_8h" kind="file" language="C++">
    <compoundname>BilevelOptimizerInterface.h</compoundname>
    <includedby refid="BranchAndCut_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/BranchAndCut.h</includedby>
    <includedby refid="bilevel_2optimizers_2KKT_2KKT_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/KKT/KKT.h</includedby>
    <includedby refid="MinMax__Dualize_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/MinMaxDualize/MinMax_Dualize.h</includedby>
    <includedby refid="PessimisticAsOptimistic_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/PessimisticAsOptimistic/PessimisticAsOptimistic.h</includedby>
    <includedby refid="StrongDuality_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/StrongDuality/StrongDuality.h</includedby>
    <includedby refid="MibS_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/wrappers/MibS/MibS.h</includedby>
    <invincdepgraph>
      <node id="3">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/KKT/KKT.h</label>
        <link refid="bilevel_2optimizers_2KKT_2KKT_8h_source"/>
      </node>
      <node id="6">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/StrongDuality/StrongDuality.h</label>
        <link refid="StrongDuality_8h_source"/>
      </node>
      <node id="5">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/PessimisticAsOptimistic/PessimisticAsOptimistic.h</label>
        <link refid="PessimisticAsOptimistic_8h_source"/>
      </node>
      <node id="4">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/MinMaxDualize/MinMax_Dualize.h</label>
        <link refid="MinMax__Dualize_8h_source"/>
      </node>
      <node id="7">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/wrappers/MibS/MibS.h</label>
        <link refid="MibS_8h_source"/>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BilevelOptimizerInterface.h</label>
        <link refid="BilevelOptimizerInterface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/BranchAndCut.h</label>
        <link refid="BranchAndCut_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classidol_1_1Bilevel_1_1OptimizerInterface" prot="public">idol::Bilevel::OptimizerInterface</innerclass>
    <innernamespace refid="namespaceidol">idol</innernamespace>
    <innernamespace refid="namespaceidol_1_1Bilevel">idol::Bilevel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>henri<sp/>on<sp/>05.02.25.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IDOL_BILEVELOPTIMIZERINTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDOL_BILEVELOPTIMIZERINTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">idol::Bilevel<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Description;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OptimizerInterface;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classidol_1_1Bilevel_1_1OptimizerInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1Bilevel_1_1OptimizerInterface" kindref="compound">idol::Bilevel::OptimizerInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classidol_1_1Bilevel_1_1OptimizerInterface" kindref="compound">OptimizerInterface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_bilevel_description(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Bilevel::Description</ref>&amp;<sp/>t_bilevel_description)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//IDOL_BILEVELOPTIMIZERINTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BilevelOptimizerInterface.h"/>
  </compounddef>
</doxygen>
