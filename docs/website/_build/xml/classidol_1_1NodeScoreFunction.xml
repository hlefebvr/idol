<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1NodeScoreFunction" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::NodeScoreFunction</compoundname>
    <derivedcompoundref refid="classidol_1_1NodeScoreFunctions_1_1Linear" prot="public" virt="non-virtual">idol::NodeScoreFunctions::Linear</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1NodeScoreFunctions_1_1Product" prot="public" virt="non-virtual">idol::NodeScoreFunctions::Product</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1NodeScoreFunction_1ac923999bbd2e28a239e03fdc794034bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::NodeScoreFunction::~NodeScoreFunction</definition>
        <argsstring>()=default</argsstring>
        <name>~NodeScoreFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="22" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunction_1a169fb5cc354bff5eb41cb682286f0e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::NodeScoreFunction::operator()</definition>
        <argsstring>(double t_left, double t_right)=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1NodeScoreFunctions_1_1Linear_1aec94c6e73c3bbb917d4a29209194f35e">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1NodeScoreFunctions_1_1Product_1afeeaead977c5a17cae280d20c74a4cd3">operator()</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_left</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="24" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunction_1a0a9f40bd880703f8a4787e55f9b825fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1NodeScoreFunction" kindref="compound">NodeScoreFunction</ref> *</type>
        <definition>virtual NodeScoreFunction* idol::NodeScoreFunction::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1NodeScoreFunctions_1_1Linear_1ab0aa057f30f00310d8fad0d11af91e08">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1NodeScoreFunctions_1_1Product_1a02325fb8162c317ecf2ca6983fd46072">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="26" column="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::NodeScoreFunctions::Linear</label>
        <link refid="classidol_1_1NodeScoreFunctions_1_1Linear"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::NodeScoreFunction</label>
        <link refid="classidol_1_1NodeScoreFunction"/>
      </node>
      <node id="3">
        <label>idol::NodeScoreFunctions::Product</label>
        <link refid="classidol_1_1NodeScoreFunctions_1_1Product"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::NodeScoreFunction</label>
        <link refid="classidol_1_1NodeScoreFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="20" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" bodystart="20" bodyend="27"/>
    <listofallmembers>
      <member refid="classidol_1_1NodeScoreFunction_1a0a9f40bd880703f8a4787e55f9b825fa" prot="public" virt="pure-virtual"><scope>idol::NodeScoreFunction</scope><name>clone</name></member>
      <member refid="classidol_1_1NodeScoreFunction_1a169fb5cc354bff5eb41cb682286f0e05" prot="public" virt="pure-virtual"><scope>idol::NodeScoreFunction</scope><name>operator()</name></member>
      <member refid="classidol_1_1NodeScoreFunction_1ac923999bbd2e28a239e03fdc794034bc" prot="public" virt="virtual"><scope>idol::NodeScoreFunction</scope><name>~NodeScoreFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
