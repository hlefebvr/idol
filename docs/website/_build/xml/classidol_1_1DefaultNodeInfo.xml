<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DefaultNodeInfo" kind="class" language="C++" prot="public">
    <compoundname>idol::DefaultNodeInfo</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1DefaultNodeInfo_1a83b50fb2526eace47b0146465e1fb948" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref></type>
        <definition>PrimalPoint idol::DefaultNodeInfo::m_primal_solution</definition>
        <argsstring></argsstring>
        <name>m_primal_solution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="55" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeInfo_1af44dbe7e35ac8f7f1d4699d02db3014f" prot="private" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; idol::DefaultNodeInfo::m_sum_of_infeasibilities</definition>
        <argsstring></argsstring>
        <name>m_sum_of_infeasibilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="56" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeInfo_1afec4b216449d4b7700482595f8ee59fb" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="structidol_1_1VarBranchingDecision" kindref="compound">VarBranchingDecision</ref> &gt;</type>
        <definition>std::list&lt;VarBranchingDecision&gt; idol::DefaultNodeInfo::m_variable_branching_decisions</definition>
        <argsstring></argsstring>
        <name>m_variable_branching_decisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="57" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeInfo_1af8d885ed49550516f00c9475b9cd5b39" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="structidol_1_1CtrBranchingDecision" kindref="compound">CtrBranchingDecision</ref> &gt;</type>
        <definition>std::list&lt;CtrBranchingDecision&gt; idol::DefaultNodeInfo::m_constraint_branching_decisions</definition>
        <argsstring></argsstring>
        <name>m_constraint_branching_decisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="58" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a8feda61c791b448faf76c2c943cb81b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::DefaultNodeInfo::DefaultNodeInfo</definition>
        <argsstring>()=default</argsstring>
        <name>DefaultNodeInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="22" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1afd18d7f14791c215224f2dd4ca0e0de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::DefaultNodeInfo::~DefaultNodeInfo</definition>
        <argsstring>()=default</argsstring>
        <name>~DefaultNodeInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="24" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a247cf53561cadc0c3f11fdbfda31c2a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SolutionStatus</type>
        <definition>SolutionStatus idol::DefaultNodeInfo::status</definition>
        <argsstring>() const</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="26" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a618846b161b747714bc5c0692f83d5e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SolutionReason</type>
        <definition>SolutionReason idol::DefaultNodeInfo::reason</definition>
        <argsstring>() const</argsstring>
        <name>reason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="28" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a509ec75ef8220a06b463fbee091eda25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::DefaultNodeInfo::has_objective_value</definition>
        <argsstring>() const</argsstring>
        <name>has_objective_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="30" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a184ca8369a59032351c23cfd1d3eff46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::DefaultNodeInfo::objective_value</definition>
        <argsstring>() const</argsstring>
        <name>objective_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="32" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a318eb8806e56490d20d5133254f47e5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::DefaultNodeInfo::sum_of_infeasibilities</definition>
        <argsstring>() const</argsstring>
        <name>sum_of_infeasibilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="34" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a17de8d319f7b230244debd3f3b5113fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::DefaultNodeInfo::primal_solution</definition>
        <argsstring>() const</argsstring>
        <name>primal_solution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="36" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a8b32b874d182f2fead664d376aa97bc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeInfo::set_primal_solution</definition>
        <argsstring>(PrimalPoint t_primal_solution)</argsstring>
        <name>set_primal_solution</name>
        <param>
          <type><ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref></type>
          <declname>t_primal_solution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="38" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a8a0c9dc3d9a84c4716e9e59ed6c5229f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::DefaultNodeInfo::save</definition>
        <argsstring>(const Model &amp;t_original_formulation, const Model &amp;t_model)</argsstring>
        <name>save</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="40" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1afb43568e908b8f7e89e59b15d1a62fc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classidol_1_1DefaultNodeInfo" kindref="compound">DefaultNodeInfo</ref> *</type>
        <definition>virtual DefaultNodeInfo* idol::DefaultNodeInfo::create_child</definition>
        <argsstring>() const</argsstring>
        <name>create_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="42" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a7576d7dfc3a5e27ae55102338d5c5d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeInfo::add_branching_variable</definition>
        <argsstring>(const Var &amp;t_var, CtrType t_type, double t_bound)</argsstring>
        <name>add_branching_variable</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a080702a3e4f19d67037dbe16e930e0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeInfo::add_branching_constraint</definition>
        <argsstring>(const Ctr &amp;t_ctr, TempCtr t_temporary_constraint)</argsstring>
        <name>add_branching_constraint</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type><ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref></type>
          <declname>t_temporary_constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a7422ad6e9dc90070bd02da978c3bf446" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto idol::DefaultNodeInfo::variable_branching_decisions</definition>
        <argsstring>() const</argsstring>
        <name>variable_branching_decisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="48" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a698f322f4691f8b6f6e71d0526103894" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto idol::DefaultNodeInfo::constraint_branching_decisions</definition>
        <argsstring>() const</argsstring>
        <name>constraint_branching_decisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="50" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="50" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classidol_1_1DefaultNodeInfo_1a3d00ab7ae398c09530ab57f19cba1680" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1DefaultNodeUpdator" kindref="compound">DefaultNodeUpdator</ref>&lt; <ref refid="classidol_1_1DefaultNodeInfo" kindref="compound">DefaultNodeInfo</ref> &gt; *</type>
        <definition>static DefaultNodeUpdator&lt;DefaultNodeInfo&gt;* idol::DefaultNodeInfo::create_updator</definition>
        <argsstring>(const Model &amp;t_src_model, Model &amp;t_relaxation)</argsstring>
        <name>create_updator</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_src_model</declname>
        </param>
        <param>
          <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_relaxation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="52" column="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>idol::DefaultNodeInfo</label>
        <link refid="classidol_1_1DefaultNodeInfo"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" line="20" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h" bodystart="20" bodyend="59"/>
    <listofallmembers>
      <member refid="classidol_1_1DefaultNodeInfo_1a080702a3e4f19d67037dbe16e930e0d8" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>add_branching_constraint</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a7576d7dfc3a5e27ae55102338d5c5d3b" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>add_branching_variable</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a698f322f4691f8b6f6e71d0526103894" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>constraint_branching_decisions</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1afb43568e908b8f7e89e59b15d1a62fc8" prot="public" virt="virtual"><scope>idol::DefaultNodeInfo</scope><name>create_child</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a3d00ab7ae398c09530ab57f19cba1680" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>create_updator</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a8feda61c791b448faf76c2c943cb81b7" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>DefaultNodeInfo</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a509ec75ef8220a06b463fbee091eda25" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>has_objective_value</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1af8d885ed49550516f00c9475b9cd5b39" prot="private" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>m_constraint_branching_decisions</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a83b50fb2526eace47b0146465e1fb948" prot="private" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>m_primal_solution</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1af44dbe7e35ac8f7f1d4699d02db3014f" prot="private" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>m_sum_of_infeasibilities</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1afec4b216449d4b7700482595f8ee59fb" prot="private" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>m_variable_branching_decisions</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a184ca8369a59032351c23cfd1d3eff46" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>objective_value</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a17de8d319f7b230244debd3f3b5113fe" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>primal_solution</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a618846b161b747714bc5c0692f83d5e9" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>reason</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a8a0c9dc3d9a84c4716e9e59ed6c5229f" prot="public" virt="virtual"><scope>idol::DefaultNodeInfo</scope><name>save</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a8b32b874d182f2fead664d376aa97bc2" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>set_primal_solution</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a247cf53561cadc0c3f11fdbfda31c2a8" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>status</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a318eb8806e56490d20d5133254f47e5e" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>sum_of_infeasibilities</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1a7422ad6e9dc90070bd02da978c3bf446" prot="public" virt="non-virtual"><scope>idol::DefaultNodeInfo</scope><name>variable_branching_decisions</name></member>
      <member refid="classidol_1_1DefaultNodeInfo_1afd18d7f14791c215224f2dd4ca0e0de7" prot="public" virt="virtual"><scope>idol::DefaultNodeInfo</scope><name>~DefaultNodeInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
