<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceidol_1_1Bilevel" kind="namespace" language="C++">
    <compoundname>idol::Bilevel</compoundname>
    <innerclass refid="classidol_1_1Bilevel_1_1Description" prot="public">idol::Bilevel::Description</innerclass>
    <innerclass refid="classidol_1_1Bilevel_1_1OptimizerInterface" prot="public">idol::Bilevel::OptimizerInterface</innerclass>
    <innerclass refid="classidol_1_1Bilevel_1_1BranchAndCut" prot="public">idol::Bilevel::BranchAndCut</innerclass>
    <innerclass refid="classidol_1_1Bilevel_1_1KKT" prot="public">idol::Bilevel::KKT</innerclass>
    <innerclass refid="classidol_1_1Bilevel_1_1PessimisticAsOptimistic" prot="public">idol::Bilevel::PessimisticAsOptimistic</innerclass>
    <innerclass refid="classidol_1_1Bilevel_1_1StrongDuality" prot="public">idol::Bilevel::StrongDuality</innerclass>
    <innerclass refid="classidol_1_1Bilevel_1_1MibS" prot="public">idol::Bilevel::MibS</innerclass>
    <innernamespace refid="namespaceidol_1_1Bilevel_1_1impl">idol::Bilevel::impl</innernamespace>
    <innernamespace refid="namespaceidol_1_1Bilevel_1_1MinMax">idol::Bilevel::MinMax</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="bilevel_2modeling_2Description_8h_1a9ce023a3fe3e986246c4d10e310cabf0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool idol::Bilevel::is_coupling</definition>
        <argsstring>(const Model &amp;t_model, const Description &amp;t_description, const Ctr &amp;t_ctr)</argsstring>
        <name>is_coupling</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Description</ref> &amp;</type>
          <declname>t_description</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/Description.h" line="82" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/Description.h" bodystart="82" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="read__from__file_8h_1a52e95462ed1c8adcac3a232577287854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class BackendT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>Model idol::Bilevel::read_from_file</definition>
        <argsstring>(Env &amp;t_env, const std::string &amp;t_path_to_aux, Bilevel::Description &amp;t_lower_level_description)</argsstring>
        <name>read_from_file</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_path_to_aux</declname>
        </param>
        <param>
          <type><ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Bilevel::Description</ref> &amp;</type>
          <declname>t_lower_level_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/read_from_file.h" line="22" column="22" declfile="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/read_from_file.h" declline="22" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="read__from__file_8h_1aebb4b538bab126012b36a886c8ea0aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class BackendT</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; <ref refid="classidol_1_1Model" kindref="compound">Model</ref>, <ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Bilevel::Description</ref> &gt;</type>
        <definition>std::pair&lt;Model, Bilevel::Description&gt; idol::Bilevel::read_from_file</definition>
        <argsstring>(Env &amp;t_env, const std::string &amp;t_path_to_aux)</argsstring>
        <name>read_from_file</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_path_to_aux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/read_from_file.h" line="24" column="26" declfile="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/read_from_file.h" declline="24" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="write__to__file_8h_1acf8f69d51f0a308e2c9fc6aeeff971d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Bilevel::write_to_file</definition>
        <argsstring>(const Model &amp;t_model, const Bilevel::Description &amp;t_description, const std::string &amp;t_filename)</argsstring>
        <name>write_to_file</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Bilevel::Description</ref> &amp;</type>
          <declname>t_description</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/write_to_file.h" line="13" column="10" declfile="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/write_to_file.h" declline="13" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/henri/Research/idol/lib/include/idol/bilevel/modeling/Description.h" line="15" column="1"/>
  </compounddef>
</doxygen>
