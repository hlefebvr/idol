<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy" kind="class" language="C++" prot="public">
    <compoundname>idol::DantzigWolfe::ArtificialCosts::Strategy</compoundname>
    <basecompoundref refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy" prot="public" virt="non-virtual">idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a87c25d82945c053aaeb0dc669f1694ab" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double idol::DantzigWolfe::ArtificialCosts::Strategy::m_initial_costs</definition>
        <argsstring></argsstring>
        <name>m_initial_costs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="22" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a0a347f31fc447bc99b56103571bbdc06" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double idol::DantzigWolfe::ArtificialCosts::Strategy::m_update_factor</definition>
        <argsstring></argsstring>
        <name>m_update_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="23" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ae5523c98b53b1beffcc93d02a6dbee8e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::DantzigWolfe::ArtificialCosts::Strategy::m_max_updates_before_phase_I</definition>
        <argsstring></argsstring>
        <name>m_max_updates_before_phase_I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="24" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a04690caf136ddbab8661f610c502ed04" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1QuadExpr" kindref="compound">QuadExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>QuadExpr&lt;Var&gt; idol::DantzigWolfe::ArtificialCosts::Strategy::m_objective_function</definition>
        <argsstring></argsstring>
        <name>m_objective_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="26" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a66bddb47edef5c358ac1777500ad69eb" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>std::list&lt;Var&gt; idol::DantzigWolfe::ArtificialCosts::Strategy::m_artificial_variables</definition>
        <argsstring></argsstring>
        <name>m_artificial_variables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="27" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1aec5c38329bed0fca806a7bcc8d764dbb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::save_objective_function</definition>
        <argsstring>(const Model &amp;t_original_formulation)</argsstring>
        <name>save_objective_function</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="29" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a32742ec3a0e2a1f83d28d8ba664a3d7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::create_artificial_variables</definition>
        <argsstring>(DantzigWolfe::Formulation &amp;t_formulation)</argsstring>
        <name>create_artificial_variables</name>
        <param>
          <type><ref refid="classidol_1_1DantzigWolfe_1_1Formulation" kindref="compound">DantzigWolfe::Formulation</ref> &amp;</type>
          <declname>t_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ada5534f1e51e5078be39a02ff9c5c950" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::find_initial_columns</definition>
        <argsstring>(idol::Optimizers::DantzigWolfeDecomposition::ColumnGeneration &amp;t_column_generation)</argsstring>
        <name>find_initial_columns</name>
        <param>
          <type><ref refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1_1ColumnGeneration" kindref="compound">idol::Optimizers::DantzigWolfeDecomposition::ColumnGeneration</ref> &amp;</type>
          <declname>t_column_generation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="31" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ae59ede0db2038a82f38f024cf7f067bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::delete_artificial_variables</definition>
        <argsstring>(DantzigWolfe::Formulation &amp;t_formulation)</argsstring>
        <name>delete_artificial_variables</name>
        <param>
          <type><ref refid="classidol_1_1DantzigWolfe_1_1Formulation" kindref="compound">DantzigWolfe::Formulation</ref> &amp;</type>
          <declname>t_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="32" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1add1cd89427582e8c4938f30821649a62" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::DantzigWolfe::ArtificialCosts::Strategy::all_artificial_variables_are_non_basic</definition>
        <argsstring>(const PrimalPoint &amp;t_primal_values) const</argsstring>
        <name>all_artificial_variables_are_non_basic</name>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
          <declname>t_primal_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ac38fa8da50de2b6bde80633fc56a499e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::update_objective_function</definition>
        <argsstring>(DantzigWolfe::Formulation &amp;t_formulation, const PrimalPoint &amp;t_primal_values, bool t_include_original_objective_function)</argsstring>
        <name>update_objective_function</name>
        <param>
          <type><ref refid="classidol_1_1DantzigWolfe_1_1Formulation" kindref="compound">DantzigWolfe::Formulation</ref> &amp;</type>
          <declname>t_formulation</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
          <declname>t_primal_values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_include_original_objective_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="34" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a9fdbc737e0182922c0f1202c0cf9c51d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::restore_objective_function</definition>
        <argsstring>(DantzigWolfe::Formulation &amp;t_formulation)</argsstring>
        <name>restore_objective_function</name>
        <param>
          <type><ref refid="classidol_1_1DantzigWolfe_1_1Formulation" kindref="compound">DantzigWolfe::Formulation</ref> &amp;</type>
          <declname>t_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="35" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a368f0eeb01c18493a8144dd37af2e261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::DantzigWolfe::ArtificialCosts::Strategy::Strategy</definition>
        <argsstring>(double t_initial_costs, double t_update_factor, unsigned int t_max_updates_before_phase_I)</argsstring>
        <name>Strategy</name>
        <param>
          <type>double</type>
          <declname>t_initial_costs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_update_factor</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>t_max_updates_before_phase_I</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1abd72a42410ea5c654519990a7a0ce748" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::ArtificialCosts::Strategy::execute</definition>
        <argsstring>(Optimizers::DantzigWolfeDecomposition &amp;t_parent) override</argsstring>
        <name>execute</name>
        <reimplements refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1abadc57db4b5ab2183826461ad3df8f95">execute</reimplements>
        <param>
          <type><ref refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition" kindref="compound">Optimizers::DantzigWolfeDecomposition</ref> &amp;</type>
          <declname>t_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="39" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a7129fe65f7c0951bf750a85ebd06c394" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SolutionStatus</type>
        <definition>SolutionStatus idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::status</definition>
        <argsstring>() const</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="34" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a5478ac3e714259fe04451359be2b2d09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SolutionReason</type>
        <definition>SolutionReason idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::reason</definition>
        <argsstring>() const</argsstring>
        <name>reason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="36" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1afcad60a8812f48a904077bd0a40bd894" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::best_obj</definition>
        <argsstring>() const</argsstring>
        <name>best_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="38" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a11e8dd51e09af0f7356c906f0dede711" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::best_bound</definition>
        <argsstring>() const</argsstring>
        <name>best_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="40" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a61cb87a78d2e160c42fe8b2ea9c16b80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
        <definition>const PrimalPoint&amp; idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::primal_solution</definition>
        <argsstring>() const</argsstring>
        <name>primal_solution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="42" column="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a7e92486b91d764b9695b2399120d5e57" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::set_status</definition>
        <argsstring>(SolutionStatus t_status)</argsstring>
        <name>set_status</name>
        <param>
          <type>SolutionStatus</type>
          <declname>t_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="44" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a05cb75fdb319a59dc94a905d54791eb4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::set_reason</definition>
        <argsstring>(SolutionReason t_reason)</argsstring>
        <name>set_reason</name>
        <param>
          <type>SolutionReason</type>
          <declname>t_reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="46" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1aec2640bd446a55cbba57910482ac70be" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::set_primal_solution</definition>
        <argsstring>(PrimalPoint t_solution)</argsstring>
        <name>set_primal_solution</name>
        <param>
          <type><ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref></type>
          <declname>t_solution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="48" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a0066a1caa678e2492970f80e394d35e7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::set_best_obj</definition>
        <argsstring>(double t_best_obj)</argsstring>
        <name>set_best_obj</name>
        <param>
          <type>double</type>
          <declname>t_best_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="50" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a9ce02a8bf7ba7b6e18aadbd08dde6917" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy::set_best_bound</definition>
        <argsstring>(double t_best_bound)</argsstring>
        <name>set_best_bound</name>
        <param>
          <type>double</type>
          <declname>t_best_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="52" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy"/>
      </node>
      <node id="1">
        <label>idol::DantzigWolfe::ArtificialCosts::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy"/>
      </node>
      <node id="1">
        <label>idol::DantzigWolfe::ArtificialCosts::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" line="21" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h" bodystart="21" bodyend="40"/>
    <listofallmembers>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1add1cd89427582e8c4938f30821649a62" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>all_artificial_variables_are_non_basic</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a11e8dd51e09af0f7356c906f0dede711" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>best_bound</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1afcad60a8812f48a904077bd0a40bd894" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>best_obj</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a32742ec3a0e2a1f83d28d8ba664a3d7b" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>create_artificial_variables</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ae59ede0db2038a82f38f024cf7f067bc" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>delete_artificial_variables</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1abd72a42410ea5c654519990a7a0ce748" prot="public" virt="virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>execute</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ada5534f1e51e5078be39a02ff9c5c950" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>find_initial_columns</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a66bddb47edef5c358ac1777500ad69eb" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>m_artificial_variables</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a87c25d82945c053aaeb0dc669f1694ab" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>m_initial_costs</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ae5523c98b53b1beffcc93d02a6dbee8e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>m_max_updates_before_phase_I</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a04690caf136ddbab8661f610c502ed04" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>m_objective_function</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a0a347f31fc447bc99b56103571bbdc06" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>m_update_factor</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a61cb87a78d2e160c42fe8b2ea9c16b80" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>primal_solution</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a5478ac3e714259fe04451359be2b2d09" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>reason</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a9fdbc737e0182922c0f1202c0cf9c51d" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>restore_objective_function</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1aec5c38329bed0fca806a7bcc8d764dbb" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>save_objective_function</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a9ce02a8bf7ba7b6e18aadbd08dde6917" prot="protected" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>set_best_bound</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a0066a1caa678e2492970f80e394d35e7" prot="protected" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>set_best_obj</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1aec2640bd446a55cbba57910482ac70be" prot="protected" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>set_primal_solution</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a05cb75fdb319a59dc94a905d54791eb4" prot="protected" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>set_reason</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a7e92486b91d764b9695b2399120d5e57" prot="protected" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>set_status</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a7129fe65f7c0951bf750a85ebd06c394" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>status</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1a368f0eeb01c18493a8144dd37af2e261" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>Strategy</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1_1Strategy_1ac38fa8da50de2b6bde80633fc56a499e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>update_objective_function</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy_1a913a10230e235594d5e15c04c38874d7" prot="public" virt="virtual"><scope>idol::DantzigWolfe::ArtificialCosts::Strategy</scope><name>~Strategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
