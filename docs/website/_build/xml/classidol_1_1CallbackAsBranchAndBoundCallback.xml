<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1CallbackAsBranchAndBoundCallback" kind="class" language="C++" prot="public">
    <compoundname>idol::CallbackAsBranchAndBoundCallback</compoundname>
    <basecompoundref refid="classidol_1_1BranchAndBoundCallbackFactory" prot="public" virt="non-virtual">idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;</basecompoundref>
    <innerclass refid="classidol_1_1CallbackAsBranchAndBoundCallback_1_1Strategy" prot="public">idol::CallbackAsBranchAndBoundCallback::Strategy</innerclass>
    <templateparamlist>
      <param>
        <type>class NodeInfoT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1CallbackAsBranchAndBoundCallback_1a91bd72291604bf796da75787fc62ca4c" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classidol_1_1CallbackFactory" kindref="compound">CallbackFactory</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CallbackFactory&gt; idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;::m_callback_factory</definition>
        <argsstring></argsstring>
        <name>m_callback_factory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" line="20" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1CallbackAsBranchAndBoundCallback_1ae2babc9e2095052972349e8fcb8543eb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;::CallbackAsBranchAndBoundCallback</definition>
        <argsstring>(const CallbackAsBranchAndBoundCallback &amp;t_src)</argsstring>
        <name>CallbackAsBranchAndBoundCallback</name>
        <param>
          <type>const <ref refid="classidol_1_1CallbackAsBranchAndBoundCallback" kindref="compound">CallbackAsBranchAndBoundCallback</ref> &amp;</type>
          <declname>t_src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" line="22" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" bodystart="22" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1CallbackAsBranchAndBoundCallback_1a64e9f3ddca962ee919f94f2cf451e546" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;::CallbackAsBranchAndBoundCallback</definition>
        <argsstring>(const CallbackFactory &amp;t_factory)</argsstring>
        <name>CallbackAsBranchAndBoundCallback</name>
        <param>
          <type>const <ref refid="classidol_1_1CallbackFactory" kindref="compound">CallbackFactory</ref> &amp;</type>
          <declname>t_factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" line="87" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1CallbackAsBranchAndBoundCallback_1ae8906e95b09f115f8c8570df67a9caa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback</ref>&lt; NodeInfoT &gt; *</type>
        <definition>BranchAndBoundCallback&lt;NodeInfoT&gt;* idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;::operator()</definition>
        <argsstring>() override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1BranchAndBoundCallbackFactory_1a621c12413465f0d279df195f515382d9">operator()</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" line="90" column="28" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1CallbackAsBranchAndBoundCallback_1a0b2c2de71a9f761512ba743e22069104" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">BranchAndBoundCallbackFactory</ref>&lt; NodeInfoT &gt; *</type>
        <definition>BranchAndBoundCallbackFactory&lt;NodeInfoT&gt;* idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classidol_1_1BranchAndBoundCallbackFactory_1a068043d97a3a7cf36016eb2e373854ba">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" line="95" column="35" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" bodystart="95" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackFactory"/>
      </node>
      <node id="1">
        <label>idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1CallbackAsBranchAndBoundCallback"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackFactory"/>
      </node>
      <node id="1">
        <label>idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1CallbackAsBranchAndBoundCallback"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" line="19" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h" bodystart="19" bodyend="98"/>
    <listofallmembers>
      <member refid="classidol_1_1CallbackAsBranchAndBoundCallback_1ae2babc9e2095052972349e8fcb8543eb" prot="private" virt="non-virtual"><scope>idol::CallbackAsBranchAndBoundCallback</scope><name>CallbackAsBranchAndBoundCallback</name></member>
      <member refid="classidol_1_1CallbackAsBranchAndBoundCallback_1a64e9f3ddca962ee919f94f2cf451e546" prot="public" virt="non-virtual"><scope>idol::CallbackAsBranchAndBoundCallback</scope><name>CallbackAsBranchAndBoundCallback</name></member>
      <member refid="classidol_1_1CallbackAsBranchAndBoundCallback_1a0b2c2de71a9f761512ba743e22069104" prot="public" virt="virtual"><scope>idol::CallbackAsBranchAndBoundCallback</scope><name>clone</name></member>
      <member refid="classidol_1_1CallbackAsBranchAndBoundCallback_1a91bd72291604bf796da75787fc62ca4c" prot="private" virt="non-virtual"><scope>idol::CallbackAsBranchAndBoundCallback</scope><name>m_callback_factory</name></member>
      <member refid="classidol_1_1CallbackAsBranchAndBoundCallback_1ae8906e95b09f115f8c8570df67a9caa1" prot="public" virt="virtual"><scope>idol::CallbackAsBranchAndBoundCallback</scope><name>operator()</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackFactory_1a3975f35ac10323fad20a2fde3a0cecc2" prot="public" virt="virtual"><scope>idol::CallbackAsBranchAndBoundCallback</scope><name>~BranchAndBoundCallbackFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
