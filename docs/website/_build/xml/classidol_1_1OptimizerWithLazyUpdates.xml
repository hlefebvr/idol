<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1OptimizerWithLazyUpdates" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::OptimizerWithLazyUpdates</compoundname>
    <basecompoundref refid="classidol_1_1Optimizer" prot="public" virt="non-virtual">idol::Optimizer</basecompoundref>
    <templateparamlist>
      <param>
        <type>class VarImplT</type>
      </param>
      <param>
        <type>class CtrImplT</type>
      </param>
      <param>
        <type>class QCtrImplT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a55f6624a2b5ef34a93d05cf8de19e2bc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1Lazy" kindref="compound">Lazy</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, VarImplT &gt; &gt;</type>
        <definition>std::vector&lt;Lazy&lt;Var, VarImplT&gt; &gt; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_variables</definition>
        <argsstring></argsstring>
        <name>m_variables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="54" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a1aa131e9bda9fcb877580610ea56574b" prot="private" static="no" mutable="no">
        <type>std::list&lt; unsigned int &gt;</type>
        <definition>std::list&lt;unsigned int&gt; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_variables_to_update</definition>
        <argsstring></argsstring>
        <name>m_variables_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="55" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a2b4f1ffdb09a6c0ae746cc53dd6d5154" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1Lazy" kindref="compound">Lazy</ref>&lt; <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref>, CtrImplT &gt; &gt;</type>
        <definition>std::vector&lt;Lazy&lt;Ctr, CtrImplT&gt; &gt; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_constraints</definition>
        <argsstring></argsstring>
        <name>m_constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="57" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a45aa1f05927075464d785456b3254f90" prot="private" static="no" mutable="no">
        <type>std::list&lt; unsigned int &gt;</type>
        <definition>std::list&lt;unsigned int&gt; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_constraints_to_update</definition>
        <argsstring></argsstring>
        <name>m_constraints_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="58" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1abb333b7e5224eec14b10b69d300087fe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1Lazy" kindref="compound">Lazy</ref>&lt; <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref>, QCtrImplT &gt; &gt;</type>
        <definition>std::vector&lt;Lazy&lt;QCtr, QCtrImplT&gt; &gt; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_qconstraints</definition>
        <argsstring></argsstring>
        <name>m_qconstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="60" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a972269fe47bc512f72a9a9047b7d31aa" prot="private" static="no" mutable="no">
        <type>std::list&lt; unsigned int &gt;</type>
        <definition>std::list&lt;unsigned int&gt; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_qconstraints_to_update</definition>
        <argsstring></argsstring>
        <name>m_qconstraints_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="61" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1af307a0b9e88f2c4759c8b79888bff7b5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_is_initialized</definition>
        <argsstring></argsstring>
        <name>m_is_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="63" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a6555554f28010ef4bb736a1b6cfd430a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_is_objective_to_be_updated</definition>
        <argsstring></argsstring>
        <name>m_is_objective_to_be_updated</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="64" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1OptimizerWithLazyUpdates_1a0e9ef0b0252107a634e45ae42c2d6e65" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::m_is_rhs_to_be_updated</definition>
        <argsstring></argsstring>
        <name>m_is_rhs_to_be_updated</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="65" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a7223d3c35c5b28d99d4691f3e0646e56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_vars</definition>
        <argsstring>()</argsstring>
        <name>update_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="67" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="294" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af99983647ec65b657c887e620e8f6fdd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_ctrs</definition>
        <argsstring>()</argsstring>
        <name>update_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="68" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="313" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a50314118587ada052d931e2750691924" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_qctrs</definition>
        <argsstring>()</argsstring>
        <name>update_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="69" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="333" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aede7194687e9a2ac657bd8d868db9781" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_update_objective_sense</definition>
        <argsstring>()</argsstring>
        <name>lazy_update_objective_sense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="71" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="364" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a641f8c61c3b10bea9ce762d297628fca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_update_matrix</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var, double t_constant)</argsstring>
        <name>lazy_update_matrix</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="72" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a0f196866dad566a50a1cda05d702b2ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_update</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>lazy_update</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="73" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="369" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a86a04657486feeedab03a7aab8a894c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_update</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>lazy_update</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="74" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a17deb507efd368c48219054980964610" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_update_objective</definition>
        <argsstring>()</argsstring>
        <name>lazy_update_objective</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="75" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a94f965a051abd6215a8c5642a799455c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_update_rhs</definition>
        <argsstring>()</argsstring>
        <name>lazy_update_rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="76" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="354" bodyend="356"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a7bf7b4a5701c3ecb8dd24900b83511fc" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::OptimizerWithLazyUpdates</definition>
        <argsstring>(const Model &amp;t_parent)</argsstring>
        <name>OptimizerWithLazyUpdates</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="78" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a630789e6aa5c4360b9d90f09365f446b" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::build</definition>
        <argsstring>() final</argsstring>
        <name>build</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8b1cfad93e3eb77c214aa2ff343fcb64">build</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="80" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="238" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a40b9647adcbc37aa89e3fc6cd9854db5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_build</definition>
        <argsstring>()=0</argsstring>
        <name>hook_build</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a0984882a35f2e94c46187a8ec86f4f23">hook_build</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a0954c7caf588504cf44c17ed4498084c">hook_build</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="81" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afe001d934289f73d5027667a2ad724d3" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::write</definition>
        <argsstring>(const std::string &amp;t_name) final</argsstring>
        <name>write</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a799b0b5d874b3558c48e4d1cef6013a8">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="83" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ab8123dad08942d7d95feca7ac2302287" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_write</definition>
        <argsstring>(const std::string &amp;t_name)=0</argsstring>
        <name>hook_write</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a471d623050020b088eeee69455910968">hook_write</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a4718ec1b6b73186f7e77b030d8a10ea1">hook_write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="84" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae68fe72079e1eba2ec7d464a1f7148bb" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::add</definition>
        <argsstring>(const Var &amp;t_var) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ac5e35eec35d2dea0b90fcabd30485179">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="86" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="413" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a10edbb4a7e700c6fe0d6fd791b2071b4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>VarImplT</type>
        <definition>virtual VarImplT idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_add</definition>
        <argsstring>(const Var &amp;t_var, bool t_add_column)=0</argsstring>
        <name>hook_add</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1af0edd4d24f67ca1a6472b92847357e7c">hook_add</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a65d8ca81e524fdd096333bc19228501b">hook_add</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_add_column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="87" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a39c8f0f97dd71dbb94bd2c98f3bf0de5" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::add</definition>
        <argsstring>(const Ctr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae1266859ae2679d14d22bb7449dbbe8b">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="89" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="388" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5a47e058e2c5dd5165f538eccf2034f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>CtrImplT</type>
        <definition>virtual CtrImplT idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_add</definition>
        <argsstring>(const Ctr &amp;t_ctr)=0</argsstring>
        <name>hook_add</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1aed5e2909e5c91f5494e9be7120a5cda6">hook_add</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1acbef957eccacad32464a290e41d2f131">hook_add</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="90" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a007f09ad057ab0298292a2c39b97e505" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::add</definition>
        <argsstring>(const QCtr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afa9e27c1db69ebe4688fd4ba37ba3121">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="92" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="400" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a98ab1a9f02d27dafadf2bac8111aec1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QCtrImplT</type>
        <definition>virtual QCtrImplT idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_add</definition>
        <argsstring>(const QCtr &amp;t_ctr)=0</argsstring>
        <name>hook_add</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1afbc5854b26fcc7359b087bf47fe0c7e6">hook_add</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1adf74841ce391db447a2e5272431514c6">hook_add</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="93" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a8b6d15ef45557f777aa58a912ba64192" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update_objective_sense</definition>
        <argsstring>()=0</argsstring>
        <name>hook_update_objective_sense</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a234a2bc04cc682b9025ddef23f49a0c1">hook_update_objective_sense</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a03a84aaae1820b518fd97747f00ec7f4">hook_update_objective_sense</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="95" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9503367e669f6a17fe421965ecd81e23" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update_matrix</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var, double t_constant)=0</argsstring>
        <name>hook_update_matrix</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a8094d944273e17ac9d92f92789b49470">hook_update_matrix</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a0c967f1127a5cdf49310e24af561ac08">hook_update_matrix</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="96" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a036d978c29e99ab33b64f6dcbdd23969" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update</definition>
        <argsstring>() final</argsstring>
        <name>update</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a96d15823685c0e6d2966ef35b26a9503">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="98" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="270" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aec4be0622ff1fb52b1c3118aabed23a7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update</definition>
        <argsstring>()=0</argsstring>
        <name>hook_update</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a5545818b6149b11b4c03e32547350ec6">hook_update</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a156584f1c2c41220971861e5b79938d1">hook_update</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="99" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1adcc8a03ea17752d297717d6725458e93" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update</definition>
        <argsstring>(const Var &amp;t_var)=0</argsstring>
        <name>hook_update</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a52a013b5eaff8d0550113247b8bb0ec7">hook_update</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a2390530125df42cd7b5dab8bb4091661">hook_update</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="100" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a469a2d9ad5dbc7ebfa4d800e53e6e0b3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update</definition>
        <argsstring>(const Ctr &amp;t_ctr)=0</argsstring>
        <name>hook_update</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a7ede4e7195acea6c465afe4f7d3972d3">hook_update</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a05dbbba1e01b08df9e73e2385a4b8936">hook_update</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="101" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af979ef76f7d71931d71c5652a7361b01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update_objective</definition>
        <argsstring>()=0</argsstring>
        <name>hook_update_objective</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1ae7a9751168e004b653a0891a31f4be16">hook_update_objective</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a47d4fb72e99ed188a1ec3ee756505c05">hook_update_objective</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="103" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a15f76bf6affd6e5771c515fd77c920a2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_update_rhs</definition>
        <argsstring>()=0</argsstring>
        <name>hook_update_rhs</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a3de68b9952212175d451c4d38a002bfa">hook_update_rhs</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a394a68a71799f21e77e047c6d83ce78c">hook_update_rhs</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="105" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a1a7cb07f04700f1201e8e5582c77896c" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::remove</definition>
        <argsstring>(const Var &amp;t_var) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a922c443d01523ee75f16f8cba99ee159">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="107" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="425" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae6623f7aa702ec644df2edeb6889e3ce" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_remove</definition>
        <argsstring>(const Var &amp;t_var)=0</argsstring>
        <name>hook_remove</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1aee8daced67727c2eb764b2c7e7303711">hook_remove</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ad4df7941816357f1bfff4d9bf4a1d88c">hook_remove</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="108" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a722b4d13c44fc48634e5455f6b5e8334" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::remove</definition>
        <argsstring>(const Ctr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5c021fd9b686acbb6d3b8ee38c7eff9c">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="110" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="440" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ad8713994e3d0891e64ee9a18fb578713" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_remove</definition>
        <argsstring>(const Ctr &amp;t_ctr)=0</argsstring>
        <name>hook_remove</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a34a0e35392164d40172876d1ee4cc905">hook_remove</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a5ebd9540e01f37ce9d8ffd5cbd3bc049">hook_remove</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="111" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a85690c369dd198e9aa2ba265a980c18a" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::remove</definition>
        <argsstring>(const QCtr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8f30740f64bd1bac13b7de206e781c7b">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="113" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="455" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a1749dec29dfb9c213681e0d3c31400d4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::hook_remove</definition>
        <argsstring>(const QCtr &amp;t_ctr)=0</argsstring>
        <name>hook_remove</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1aa109e1c6250d5dd12c6fded8faf07f32">hook_remove</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1af2ba0e31d4defff1b672f6e92f4f8eb2">hook_remove</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="114" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a65635482c5ff4e2fc8f99082241ec0a0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::has_lazy</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="116" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a7f2b5aad53e2210b47c353aded11c79f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::has_lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="121" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a7d5b40d340a6fce3ba3e1b73a5a08714" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::has_lazy</definition>
        <argsstring>(const QCtr &amp;t_qctr) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_qctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="126" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6c1afcf23f38a2737fdf11061389f67c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="131" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af58b3e24778f08afcc38333c5f8b65ec" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="132" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a309d86fe0936e5568fbaab2935df2c34" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="134" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af642c3171a81d4c882f3faae64436845" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="135" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a0cae683a08a13fa7011ef18d0adfc941" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy</definition>
        <argsstring>(const QCtr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="137" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ace3668185e49027f7947da1f54e5c810" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy</definition>
        <argsstring>(const QCtr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="138" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aef94789320776a4f70825168435a012f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_vars</definition>
        <argsstring>()</argsstring>
        <name>lazy_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="140" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afc506aff3d625dcdd97c938e81110f18" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_vars</definition>
        <argsstring>() const</argsstring>
        <name>lazy_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="141" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6bf8afd70409d3200aa082570eaf4bbe" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_ctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="143" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a006b54d15a15e1e63fe0c8f8d31f53ac" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_ctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="144" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6677b0b0edce78a13a445b4f6c18b730" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_qctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="146" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae52fea4d7bf677519cea43e60817201b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::lazy_qctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="147" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a327b4587f09989707669fbdd9cb6c3a4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::set_objective_to_be_updated</definition>
        <argsstring>()</argsstring>
        <name>set_objective_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="149" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a8b1dc43b7891e877e7a6e7dd34929ce4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::is_objective_to_be_updated</definition>
        <argsstring>() const</argsstring>
        <name>is_objective_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="150" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a11ca673abf5ddf1144f1739f5bacee06" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::set_objective_as_updated</definition>
        <argsstring>()</argsstring>
        <name>set_objective_as_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="151" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a704351d769bd3464f55eecef9997b50c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::set_rhs_to_be_updated</definition>
        <argsstring>()</argsstring>
        <name>set_rhs_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="153" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9f69bb47e6dd5ac615a8a51fe4544b80" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::is_rhs_to_be_updated</definition>
        <argsstring>() const</argsstring>
        <name>is_rhs_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="154" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1acd9d0bbe49db1c4545a2d69d5b2b8109" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::set_rhs_as_updated</definition>
        <argsstring>()</argsstring>
        <name>set_rhs_as_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="155" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6f9883562fa7ef834bcdfb661141f490" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_obj_sense</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_sense</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a25a53345053496a7fadd9648df49d254">update_obj_sense</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="157" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aecbceed05a1697acb2de727182e55656" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_obj</definition>
        <argsstring>() override</argsstring>
        <name>update_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab0f43a11a4c92dbd420df4083f074fd5">update_obj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="158" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ac5083ad9bce94d8d0fc398e65e05ecb7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_rhs</definition>
        <argsstring>() override</argsstring>
        <name>update_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1cbf5571c1dec27a41a6e9f0e19db124">update_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="159" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae4facf4fab6fdfa8f7723d0e4f0c4d76" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_obj_constant</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_constant</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a649970fd70f822ff3565118b23503a18">update_obj_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="160" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9e779d8f2bd1c01ff5bbaa42a03c757f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_mat_coeff</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var) override</argsstring>
        <name>update_mat_coeff</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbbeaecd791d91037912dbea1cc3abe4">update_mat_coeff</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="161" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afb8ad7be7c76b615c208dd3350b64c99" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_ctr_type</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a052484a0897b8994517805c284b12cb6">update_ctr_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="162" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a8b1ec93b5e4882c819d46b41fd557b54" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_ctr_rhs</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbdd8996efcaf9e25066f38ceb6d1a94">update_ctr_rhs</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="163" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aee58ad2e9eb81b9bed6257316e1d133c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_var_type</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a06c4c149d5a16be2a7bf436e3c94cdc2">update_var_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="164" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aaabad07bfd172794f320fc25340ca8dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_var_lb</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_lb</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aef3dabf3018202b60d9ae6254c481700">update_var_lb</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="165" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae8c96a36adda78e467de03f50017b1c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_var_ub</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_ub</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aa6384ec94a6006df19907e140b8e3f67">update_var_ub</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="166" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aa2d573d4de095236ecf3bf23ad994386" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::update_var_obj</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae226b270b4aafede630156e30f41fea7">update_var_obj</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="167" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_before_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_before_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a6011ffe600f70985dbb808dda523ac73">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a4956a2c6102aebf3a9484d0ff7f96e46">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a4a855c27efcffefc8f78fd16dc9fe7ad">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a4850843cd6b61588860a559650aac54d">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1aab8be367942c63dc38b8d9b1a8d62fac">hook_before_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="68" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1aac4fef8007f641e8226be51f92075fde" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_optimize</definition>
        <argsstring>()=0</argsstring>
        <name>hook_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a940dce952c6cd8607929a43c3b7d6f98">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1aeffd2f5c048f82de0e104dae6dc0369d">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a3b3685c88aeda36eb917ed702b8be10c">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1aa02b2244d1f78ee9fb8460ab272899ae">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1ae9dbab65f83174e747d5589fcb7e896f">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a846174ffe4e54148dbe5f7471ee3f3af">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1af2bff026eb7b83ff7940e8c5a2a9d252">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a14d425fc69a704408076b51891823280">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a0b709dbfe03390262f6901724de757f5">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a07585dbc92012254389a3ea6a80a338d">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a5819ca11be47b5925cb01babce8c3e6b">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a4ff797fd3379f5ec71d5344c5589855c">hook_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a58da088099c6d2b6f1872d9e4efbac80">hook_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="70" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_after_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_after_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1ab5e0516fa7a86d515d196c48f62d4444">hook_after_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a8678db892a87725f66c114c19443e07e">hook_after_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="72" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a9ad3e14177821752eb86c58195f1df46" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_solution_index</definition>
        <argsstring>(unsigned int t_index)=0</argsstring>
        <name>set_solution_index</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a51936f18e61f6dedb355e78ef2801ad8">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a4695667bc7ab2f0716d1fee3aa6ad026">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a40e77ca7f816b9a5736b6108f2a5b9f6">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1ae02bba8adee893f9c8aee033c631ba42">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a5bd6ade2b68ec8768bae2eefdccbb3eb">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a1f192bb349f0edd5b2a9a3b8dd238be9">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a9072245fc367ff1baf9cc08d0600db62">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1ae8ad6a3d9b98b623473acd8137e03e4a">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a1afb4f54cf2507f8c2024e28141a2e7b">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1aeea41865934b423478cb5f67def930c6">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a134ea219a1257738e5adff2c241f8213">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1aa59d1abfeea220eb6bc60a90c4c34d18">set_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a5a00ae7d056c9c3c3d6aeffa80d51c95">set_solution_index</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>t_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="74" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a4834d37d53abf84d3d9fc5e82021fc17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VarImplT &amp;</type>
        <definition>VarImplT&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::operator[]</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="169" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5c42f414626cecc01a239cd33e821c67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const VarImplT &amp;</type>
        <definition>const VarImplT&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::operator[]</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="170" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5ae6a5791fa6aedef8387dc3cf50ee65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CtrImplT &amp;</type>
        <definition>CtrImplT&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::operator[]</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="172" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1adddb50b20a799ab42a66b5aa033fd731" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CtrImplT &amp;</type>
        <definition>const CtrImplT&amp; idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;::operator[]</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="173" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a1f208d4de2375b957812c36009a9a900" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string idol::impl::Optimizer::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ab4574c2498943eede93aacb63eb551cd">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a9d499ac404e8a58be8103cbe7459c1fb">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1aa5a3fa269d32621f633cba20777da233">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1a686f4b87a904fc43ced52e763e045efb">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a8748ceb07cfbfb02085b70e32b86d3c5">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a3922458a3fe39b365e75b020c575aecb">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a7cc84c21920aaaed497337b42648087e">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1afae0cbe96d1e7b74c39e4900cc07ef0b">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1adf06668fcc3794891267a55e6496f67b">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a0277c5e56fce9e8e4c00e3275bc5eb31">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1ab9915cdc917507b234639e201e4a08e8">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1ad2d1a0e3bcd2db5deb83eb3b388da522">name</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a13093ef6b327f508700899afcfad8209">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="102" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const ::<ref refid="classidol_1_1Model" kindref="compound">idol::Model</ref> &amp;</type>
        <definition>virtual const ::idol::Model&amp; idol::impl::Optimizer::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="104" column="34" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1aba3f84c3dcd1f69e91c85606ef893b16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>SolutionStatus</type>
        <definition>virtual SolutionStatus idol::impl::Optimizer::get_status</definition>
        <argsstring>() const =0</argsstring>
        <name>get_status</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1ae682ec26fce8eb4bde30dc8fb1a4fa55">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a73c4d08f1df908e0f6012f5b0b1942a7">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1a39101da27e7e2a85d5e7d21aeba1ddfd">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Algorithm_1aca1da2a76fe7439c2e5d990860ef4e0d">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1aeaade1737d050ec049ce4ef9757475f7">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a3948fcad9247660ab3732d2841602100">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a04c88c2a639c94b2414f05ddf3d2b0f5">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1ad969dfe9ec5de34e8ba8ffdda7dcb389">get_status</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="106" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1afceabfe55118b54e898d766914186e77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>SolutionReason</type>
        <definition>virtual SolutionReason idol::impl::Optimizer::get_reason</definition>
        <argsstring>() const =0</argsstring>
        <name>get_reason</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a32c47d66ef609ad0f8c58b3f8fd61340">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1af3c22e4537249bc7fad67bcc4ce1cf0d">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1aa0ffd7cc94b414731d248db975bba7d3">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Algorithm_1ae7e31752554b7d0ec5f77aed4e0bc46c">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1ab537c2436e707a076017e228a541be6d">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aca44ba846eb366376ed953a52b670b5f">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a1440a2af083785e62ccf349c7ba7a423">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1afd1e761c1b12d90c6ff8a64d4c076a39">get_reason</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="108" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a3ddcd68d96101c4df494693cf883337c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_best_obj</definition>
        <argsstring>() const =0</argsstring>
        <name>get_best_obj</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a96698f55e79e70e2d551b2c05a5a6dce">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a004e89c69a9b13df091e129b106e29a3">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1aba3eb3609096b8d4c362aa4556fa42a3">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Algorithm_1a0f622ce8c74e2207050de31504c34ada">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1af4a9c9d694ea8dc3207a5a62fd7220e2">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a5de604aba68bb4b590555cb8ad3a49ee">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a0cfecf2430a2446ecbbac554cb8f9aba">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a2c3b5d6558ad1177087354484c093cf4">get_best_obj</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="110" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5eec9cc5da973fc5db74b4b6fb5ecd61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_best_bound</definition>
        <argsstring>() const =0</argsstring>
        <name>get_best_bound</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1aa1bcfc88251f882062498191e04cab3e">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a1f067c92311f083942d54b79bb0188f9">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1a5c0dea85bfb4744c7bef3c10db27e197">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Algorithm_1a4e6c0365b139516387e991f8e798e65e">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a0f52311a3e35d6f790b84ac5a91c68f1">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a77a3ef31644aa84ded7f790fe5c32d86">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a86c0533a9433708ab0ddda1ce1f34bb3">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1aabad8904383ae9f91221c2f374150afb">get_best_bound</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="112" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a4067491b572c01dbd56944809c2ee26f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_var_primal</definition>
        <argsstring>(const Var &amp;t_var) const =0</argsstring>
        <name>get_var_primal</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad2ec2a4b74c0ef6dd1439e268b986f7a">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a4e9c5d9452875a44f22155ca3595aec7">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1aed579e54f2dfcaf598a62ac35a740f52">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1ad7188b37a6783f9467d5871825625ce4">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a20053f799baabfa99c162dab24198108">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a4d0cff8a0d5cca85d0fbe776761c39d8">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1adc6d4a522be854182cd25df3b8604391">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a903ae8eab93a3107554417ea2ddeb1d9">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1adda90015392c068ae871e0bc65e0bfd9">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a906be451977e0eed71609c5f4fdc79df">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a6fa35346fada420bcd8ab614699a0d6a">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a2c31ed1c67ee99ce9e214b9a54c1eef3">get_var_primal</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a7302175c638e0a3dd6c6bc948bd497c5">get_var_primal</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="114" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a251f4d7d32c83135d3997d72d1ed719c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_var_reduced_cost</definition>
        <argsstring>(const Var &amp;t_var) const =0</argsstring>
        <name>get_var_reduced_cost</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7bdd659258201f91071024802c16e934">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1abd7971f3737a591eb263980e4376e69e">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a05be81913dbc244d75bedb2c4fc25b57">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1a70b8cb4a5c68b79d1e5e1043e74ed33d">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1aea3edaeb10dec423f7e2f55c6ba6097d">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1abcb586e3e209cba1e0261782b2b9a3fb">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1aa23a861f333054f81b852f4415152866">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a18d4476d07a78d82315f60eec49e7cd6">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1abb34f8c8e89718d4034d07f5ff75c906">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a010fc6dfd9916f91f5b9990a0651d905">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a7ca9d55e1768efbca42c7029440a0b8c">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a1fe8eda3de94f0a508432686aa2356db">get_var_reduced_cost</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a9d193acc738edb65b88dc505d943b8bb">get_var_reduced_cost</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="116" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad21a943630920c4e618b7f7450d2668b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_var_ray</definition>
        <argsstring>(const Var &amp;t_var) const =0</argsstring>
        <name>get_var_ray</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad499ebece37668988519f08c09ecf63c">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a773a8a310880be23e713089bd1eeb553">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1aee9fd356fae21cda7a516df2baa182b7">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1aad62f34f3dd4dfd869a878f174eefb56">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a292bd3bfa4745858f9b7f2b92cbebd6c">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a21ff2bbc901a953d66c2d84232dd2cea">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a0fe0530fbd33ae683ebb92f4cc7030bf">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a33828ee342e273526c8b99fc7d641505">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a146fb31702dbad4b090f8dbbe603ab0f">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a998b649079986fdca4f25f1a26366891">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a3ef5861d607c5855fd64c3167e6f870f">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1abac60449e9ad5b695d9846a937004261">get_var_ray</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1ab7e6da0e8a101b98e1d0eb836dd14cd2">get_var_ray</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="118" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a146aa552ab6c5442d7ca49d29d806427" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_ctr_dual</definition>
        <argsstring>(const Ctr &amp;t_ctr) const =0</argsstring>
        <name>get_ctr_dual</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a66e165a36e292e1f5692b0a659945243">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1af5de9f0ed7d885348dd4181d097cea74">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1af25352d3a2c717ecb5bbbf4d9c1d955f">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1abf5534c935671c3a2ffb582241845b4b">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1abeca80a9af8be162eb87afb627b6b666">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a44b29c7c62743521352532fc16525140">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a230ea05f65e92eaf1397af87972683b2">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a72ab9fa0e6f4a481bda466b68a8b4feb">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a77c718102a84a3c1131bb5c63eec285e">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a8a73b6ac2c74aef8f41da37a429d900e">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1ac96c4d8098ddfc99365b82d5c244824c">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a8e1d343848eb3cd32d9bc15840a0e894">get_ctr_dual</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1adb74e0d7ff5477eec334f9612fb798d9">get_ctr_dual</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="120" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ae0cf7244a71914ddbb08ba8e0baba9ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_ctr_farkas</definition>
        <argsstring>(const Ctr &amp;t_ctr) const =0</argsstring>
        <name>get_ctr_farkas</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a6597dd773b2b80c820d83a5c7c05d912">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a77f908213159a279bb3b701fc2c51a9f">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a35558df112af1acc2c3bee72ceb0cd87">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1ade4ee4c073330016e9fa9670ea95589b">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1afb8a0013775c0dbc5179f7df11c228e0">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1adff3735415bc70408dfa473473dd1581">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1ab1064448766a742442bebcea0fb771e3">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a48987d4edf871767d810fc3c6bfda8e8">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a6e3ade84ebaee5d56bc6072170fdf91b">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a9ac6e5389e9d87584af9deeb31308f6e">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1abfdbd8bcd4c978dbb19ff88157296af1">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a969c7edc0fe5f65d32be8c10cffbf9ed">get_ctr_farkas</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1af4af8d0a94641e8562b05c3540f8a029">get_ctr_farkas</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="122" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a17d096d345b47194e85cc210351f45d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_relative_gap</definition>
        <argsstring>() const =0</argsstring>
        <name>get_relative_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a9824bd72cfde75242191a92f94a58871">get_relative_gap</reimplementedby>
        <reimplementedby refid="classidol_1_1Algorithm_1a424a643bf34fdc305e5e14c32c60ebde">get_relative_gap</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a076055a4571b43b007ffadd98f763340">get_relative_gap</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a125fdb884d065d7a47fde9f7e845040e">get_relative_gap</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="124" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a266eddfc1b3aa4ee9a9231ecdf568337" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idol::impl::Optimizer::get_absolute_gap</definition>
        <argsstring>() const =0</argsstring>
        <name>get_absolute_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1ab70afdd0a22af722dbfe26a916cc623f">get_absolute_gap</reimplementedby>
        <reimplementedby refid="classidol_1_1Algorithm_1ad65545801432ff973e15a47da2cb230e">get_absolute_gap</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a148a2c7ea03bf2e3353c72f95a918cb8">get_absolute_gap</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ac0bc995deaa8e3ee3deef82ff040e7d9">get_absolute_gap</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="126" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0e98fd1255617e98e988ee41ca896e71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int idol::impl::Optimizer::get_n_solutions</definition>
        <argsstring>() const =0</argsstring>
        <name>get_n_solutions</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ac263a7107f75c682fcc50c14656b69cf">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a762affbcfe467b5c77f469f95cb6707a">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1ae066077ab68b37ee0e77647e60660a66">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1ab1c2a2b2207c8926f37c5cb22c76e598">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a252d0043f3260f5e1fa6e3e1c7e47082">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a41297245c7936e445137aaaed6e80858">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a3ee0077449f5955d0cdca7b11c4de99d">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a407b4e8684bfc81bc0b3186dc8dbc225">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1acdde6954305c2b37c9df7806bdc461cd">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1afadc2c1d69e82e82c66e68d58abf75d0">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1abec9f10fa89152ffb64fb89619fa665d">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1afb3487ce4f74cd6e4be38c562c068290">get_n_solutions</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a7c9f96bb6acdf9156a24419f759d2390">get_n_solutions</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="128" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a4d4eb6b7c7885ecdfbae4c87da8d0661" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int idol::impl::Optimizer::get_solution_index</definition>
        <argsstring>() const =0</argsstring>
        <name>get_solution_index</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9d43646d9ea70ca068eae26104e69ce5">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1KKT_1a02b0288fcb5fdd10a42a946d78b17931">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1PessimisticAsOptimistic_1a0b5480c528a5e3d004db2d30e847d168">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Bilevel_1_1StrongDuality_1ac0b0fbc67a6767f2a4ff5e05074ac684">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1ac10fe7297bb4a07e5235619feb88d520">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1afad6d78f108ac913ce687e5644ded865">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a7a57e9ba995cf75c07d6488ce8624c5d">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a660e19b0aaa5b7efd7319fc14386d87a">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aabd8912b14f52d53825041178e63bfd8">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1aa2916ae2fdaf7c3afbef101f8c421cc5">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a5b728b1c1996444e9299c5797fa4d0f7">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a5da5c1ddab355ea9b8015bce4cbc0c23">get_solution_index</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1abe692f13875a2780c55fe9a3ddbcb2a9">get_solution_index</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="130" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_logs</definition>
        <argsstring>() const</argsstring>
        <name>get_param_logs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="132" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a990981b38cd7f9338ab12ab383061861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_logs</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_logs</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1af2ba152cf0597c5a727fd8679ede40c5">set_param_logs</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a529ca155adff98d7422a8ce24d752ff1">set_param_logs</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="134" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_time_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_time_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="136" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab21a570955c865a255914bb1627053bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_time_limit</definition>
        <argsstring>(double t_time_limit)</argsstring>
        <name>set_param_time_limit</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a264054fd0e97f9c83eef48e430cdc8b3">set_param_time_limit</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ab9dae3fb489153a964c3b9e5c493cd44">set_param_time_limit</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_time_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="138" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_thread_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_thread_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="140" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_threads</definition>
        <argsstring>(unsigned int t_threads)</argsstring>
        <name>set_param_threads</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aab93f37ed1935bb910e960f8f154a624">set_param_threads</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>t_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="142" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_obj_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_obj_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="144" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5babaec019d640cd7828b5ef213ec335" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_best_obj_stop</definition>
        <argsstring>(double t_best_obj_stop)</argsstring>
        <name>set_param_best_obj_stop</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1ad3e1a184a67679e3dd031661b693f2b0">set_param_best_obj_stop</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a4b56aa363f7563f0ca8a56c4e53374b9">set_param_best_obj_stop</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_best_obj_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="146" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_bound_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_bound_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="148" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab60bc3d2dd159d5f061b997771c91887" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_best_bound_stop</definition>
        <argsstring>(double t_best_bound_stop)</argsstring>
        <name>set_param_best_bound_stop</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a8e12c71d452ae482bfafb4e5939b5d0f">set_param_best_bound_stop</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a06cec1a335cecefa10d91365eccfc012">set_param_best_bound_stop</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_best_bound_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="150" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_relative_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_relative_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="152" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_mip_relative_gap</definition>
        <argsstring>(double t_tol_mip_relative_gap)</argsstring>
        <name>set_tol_mip_relative_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a88280645ce1379a569f5c4ab9647c6cd">set_tol_mip_relative_gap</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_mip_relative_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="154" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_absolute_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_absolute_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="156" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_mip_absolute_gap</definition>
        <argsstring>(double t_mip_tol_absolute_gap)</argsstring>
        <name>set_tol_mip_absolute_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a4abc0ef54ea1a7e181b776b996ed0257">set_tol_mip_absolute_gap</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_mip_tol_absolute_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="158" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_feasibility</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_feasibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="160" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_feasibility</definition>
        <argsstring>(double t_tol_feasibility)</argsstring>
        <name>set_tol_feasibility</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a3b03101cf613f63f222e9c6abe5402c6">set_tol_feasibility</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_feasibility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="162" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_optimality</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_optimality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="164" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_optimality</definition>
        <argsstring>(double t_tol_optimality)</argsstring>
        <name>set_tol_optimality</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a1403ed7cb1cc90e9539227ae38f9e1d9">set_tol_optimality</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_optimality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="166" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_integer</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="168" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_integer</definition>
        <argsstring>(double t_tol_integer)</argsstring>
        <name>set_tol_integer</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aee69b69800ee55fa4d11a3a8c4ce1e19">set_tol_integer</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="170" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_iteration_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_iteration_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="172" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::set_param_iteration_limit</definition>
        <argsstring>(unsigned int t_iteration_limit)</argsstring>
        <name>set_param_iteration_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>t_iteration_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="174" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_presolve</definition>
        <argsstring>() const</argsstring>
        <name>get_param_presolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="176" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ac673045c5d062878f2b75f3b09711f00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_presolve</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_presolve</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a68257d803dcde8606946909894eab118">set_param_presolve</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aeee8716b23e81312cb98f3592b16a686">set_param_presolve</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="178" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_infeasible_or_unbounded_info</definition>
        <argsstring>() const</argsstring>
        <name>get_param_infeasible_or_unbounded_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="180" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_infeasible_or_unbounded_info</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_infeasible_or_unbounded_info</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ad74b099bb65667a81d117cef470058e1">set_param_infeasible_or_unbounded_info</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="182" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const Timer&amp; idol::impl::Optimizer::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="184" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_remaining_time</definition>
        <argsstring>() const</argsstring>
        <name>get_remaining_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="186" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is_terminated</definition>
        <argsstring>() const</argsstring>
        <name>is_terminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="188" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a4468720781d9278f1e2d6628a3a00e7b">terminate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="190" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>()</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="192" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="200" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="208" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="208" bodyend="210"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="4">
        <label>idol::OptimizerWithLazyUpdates&lt; GRBVar, GRBConstr, GRBQConstr &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; GRBVar, GRBConstr, GRBQConstr &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>idol::OptimizerWithLazyUpdates&lt; int, int, int &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; int, int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>idol::Optimizers::GLPK</label>
        <link refid="classidol_1_1Optimizers_1_1GLPK"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::Optimizers::Gurobi</label>
        <link refid="classidol_1_1Optimizers_1_1Gurobi"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="1">
        <label>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="53" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="53" bodyend="174"/>
    <listofallmembers>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae68fe72079e1eba2ec7d464a1f7148bb" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a39c8f0f97dd71dbb94bd2c98f3bf0de5" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a007f09ad057ab0298292a2c39b97e505" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>add</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>as</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>as</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a630789e6aa5c4360b9d90f09365f446b" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>build</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a266eddfc1b3aa4ee9a9231ecdf568337" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5eec9cc5da973fc5db74b4b6fb5ecd61" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_best_bound</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a3ddcd68d96101c4df494693cf883337c" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_best_obj</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a146aa552ab6c5442d7ca49d29d806427" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_ctr_dual</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ae0cf7244a71914ddbb08ba8e0baba9ca" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_ctr_farkas</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0e98fd1255617e98e988ee41ca896e71" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_n_solutions</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_best_bound_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_iteration_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_logs</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_thread_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_param_time_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1afceabfe55118b54e898d766914186e77" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_reason</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a17d096d345b47194e85cc210351f45d5" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_remaining_time</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a4d4eb6b7c7885ecdfbae4c87da8d0661" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_solution_index</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1aba3f84c3dcd1f69e91c85606ef893b16" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_status</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_tol_optimality</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a4067491b572c01dbd56944809c2ee26f" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_var_primal</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad21a943630920c4e618b7f7450d2668b" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_var_ray</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a251f4d7d32c83135d3997d72d1ed719c" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>get_var_reduced_cost</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a65635482c5ff4e2fc8f99082241ec0a0" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7f2b5aad53e2210b47c353aded11c79f" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7d5b40d340a6fce3ba3e1b73a5a08714" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a10edbb4a7e700c6fe0d6fd791b2071b4" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5a47e058e2c5dd5165f538eccf2034f4" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a98ab1a9f02d27dafadf2bac8111aec1d" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_add</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_after_optimize</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_before_optimize</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a40b9647adcbc37aa89e3fc6cd9854db5" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_build</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1aac4fef8007f641e8226be51f92075fde" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_optimize</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae6623f7aa702ec644df2edeb6889e3ce" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ad8713994e3d0891e64ee9a18fb578713" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a1749dec29dfb9c213681e0d3c31400d4" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aec4be0622ff1fb52b1c3118aabed23a7" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1adcc8a03ea17752d297717d6725458e93" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a469a2d9ad5dbc7ebfa4d800e53e6e0b3" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9503367e669f6a17fe421965ecd81e23" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update_matrix</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af979ef76f7d71931d71c5652a7361b01" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update_objective</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a8b6d15ef45557f777aa58a912ba64192" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update_objective_sense</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a15f76bf6affd6e5771c515fd77c920a2" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_update_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ab8123dad08942d7d95feca7ac2302287" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>hook_write</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>is</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a8b1dc43b7891e877e7a6e7dd34929ce4" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>is_objective_to_be_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9f69bb47e6dd5ac615a8a51fe4544b80" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>is_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>is_terminated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6c1afcf23f38a2737fdf11061389f67c" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af58b3e24778f08afcc38333c5f8b65ec" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a309d86fe0936e5568fbaab2935df2c34" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af642c3171a81d4c882f3faae64436845" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a0cae683a08a13fa7011ef18d0adfc941" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ace3668185e49027f7947da1f54e5c810" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6bf8afd70409d3200aa082570eaf4bbe" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a006b54d15a15e1e63fe0c8f8d31f53ac" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6677b0b0edce78a13a445b4f6c18b730" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae52fea4d7bf677519cea43e60817201b" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a0f196866dad566a50a1cda05d702b2ad" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a86a04657486feeedab03a7aab8a894c3" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a641f8c61c3b10bea9ce762d297628fca" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_update_matrix</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a17deb507efd368c48219054980964610" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_update_objective</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aede7194687e9a2ac657bd8d868db9781" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_update_objective_sense</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a94f965a051abd6215a8c5642a799455c" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_update_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aef94789320776a4f70825168435a012f" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_vars</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afc506aff3d625dcdd97c938e81110f18" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>lazy_vars</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a2b4f1ffdb09a6c0ae746cc53dd6d5154" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_constraints</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a45aa1f05927075464d785456b3254f90" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_constraints_to_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af307a0b9e88f2c4759c8b79888bff7b5" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_is_initialized</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6555554f28010ef4bb736a1b6cfd430a" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_is_objective_to_be_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a0e9ef0b0252107a634e45ae42c2d6e65" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_is_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1abb333b7e5224eec14b10b69d300087fe" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_qconstraints</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a972269fe47bc512f72a9a9047b7d31aa" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_qconstraints_to_update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a55f6624a2b5ef34a93d05cf8de19e2bc" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_variables</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a1aa131e9bda9fcb877580610ea56574b" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>m_variables_to_update</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a1f208d4de2375b957812c36009a9a900" prot="public" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>name</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a4834d37d53abf84d3d9fc5e82021fc17" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5c42f414626cecc01a239cd33e821c67" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5ae6a5791fa6aedef8387dc3cf50ee65" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1adddb50b20a799ab42a66b5aa033fd731" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>operator[]</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>optimize</name></member>
      <member refid="classidol_1_1Optimizer_1a8793c25aaba434c6b7e9a85bcca48e16" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>Optimizer</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7bf7b4a5701c3ecb8dd24900b83511fc" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>OptimizerWithLazyUpdates</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>parent</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a1a7cb07f04700f1201e8e5582c77896c" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a722b4d13c44fc48634e5455f6b5e8334" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a85690c369dd198e9aa2ba265a980c18a" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a11ca673abf5ddf1144f1739f5bacee06" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_objective_as_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a327b4587f09989707669fbdd9cb6c3a4" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_objective_to_be_updated</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab60bc3d2dd159d5f061b997771c91887" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_best_bound_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5babaec019d640cd7828b5ef213ec335" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_iteration_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a990981b38cd7f9338ab12ab383061861" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_logs</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ac673045c5d062878f2b75f3b09711f00" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_threads</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab21a570955c865a255914bb1627053bb" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_param_time_limit</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1acd9d0bbe49db1c4545a2d69d5b2b8109" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_rhs_as_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a704351d769bd3464f55eecef9997b50c" prot="protected" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a9ad3e14177821752eb86c58195f1df46" prot="protected" virt="pure-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_solution_index</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>set_tol_optimality</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>terminate</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>time</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a036d978c29e99ab33b64f6dcbdd23969" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a8b1ec93b5e4882c819d46b41fd557b54" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_ctr_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afb8ad7be7c76b615c208dd3350b64c99" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_ctr_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af99983647ec65b657c887e620e8f6fdd" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9e779d8f2bd1c01ff5bbaa42a03c757f" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_mat_coeff</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aecbceed05a1697acb2de727182e55656" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_obj</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae4facf4fab6fdfa8f7723d0e4f0c4d76" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_obj_constant</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6f9883562fa7ef834bcdfb661141f490" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_obj_sense</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a50314118587ada052d931e2750691924" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ac5083ad9bce94d8d0fc398e65e05ecb7" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aaabad07bfd172794f320fc25340ca8dd" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_var_lb</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aa2d573d4de095236ecf3bf23ad994386" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_var_obj</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aee58ad2e9eb81b9bed6257316e1d133c" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_var_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae8c96a36adda78e467de03f50017b1c3" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_var_ub</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7223d3c35c5b28d99d4691f3e0646e56" prot="private" virt="non-virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>update_vars</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afe001d934289f73d5027667a2ad724d3" prot="protected" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>write</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a87f1a4dcd75963657f0577387bfa3dea" prot="public" virt="virtual"><scope>idol::OptimizerWithLazyUpdates</scope><name>~Optimizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
