<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Callback" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::Callback</compoundname>
    <derivedcompoundref refid="classidol_1_1Heuristics_1_1LocalBranching_1_1Strategy" prot="public" virt="non-virtual">idol::Heuristics::LocalBranching::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1Heuristics_1_1RENS_1_1Strategy" prot="public" virt="non-virtual">idol::Heuristics::RENS::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1Heuristics_1_1SimpleRounding_1_1Strategy" prot="public" virt="non-virtual">idol::Heuristics::SimpleRounding::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1Optimizers_1_1Robust_1_1Benders_1_1BendersCallback_1_1Strategy" prot="public" virt="non-virtual">idol::Optimizers::Robust::Benders::BendersCallback::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1Plots_1_1OptimalityGap_1_1Strategy" prot="public" virt="non-virtual">idol::Plots::OptimalityGap::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1impl_1_1CutSeparation" prot="public" virt="non-virtual">idol::impl::CutSeparation</derivedcompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classidol_1_1Callback_1a957f8dff9922095786f05eec14f9f1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ::idol::CallbackI</definition>
        <argsstring></argsstring>
        <name>::idol::CallbackI</name>
        <param>
          <type>::<ref refid="classidol_1_1CallbackI" kindref="compound">idol::CallbackI</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="70" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Callback_1a491f90eb70a35e4749666b22a2ce0a08" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1CallbackI" kindref="compound">CallbackI</ref> *</type>
        <definition>CallbackI* idol::Callback::m_interface</definition>
        <argsstring></argsstring>
        <name>m_interface</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="132" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Callback_1a930a6ad9d6049b1eab88e78dfdd88cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::Callback::~Callback</definition>
        <argsstring>()=default</argsstring>
        <name>~Callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="72" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1Callback_1af0714777151e092685aa600690c5d139" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>virtual const Model&amp; idol::Callback::original_model</definition>
        <argsstring>() const</argsstring>
        <name>original_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accesses the original model given to the solver </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="77" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1aba8b5815a8701fadc611bea822bca68b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Callback::submit_heuristic_solution</definition>
        <argsstring>(const PrimalPoint &amp;t_solution)</argsstring>
        <name>submit_heuristic_solution</name>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
          <declname>t_solution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a new heuristic solution </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="82" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1acb1781b217b4d14b307ff8b74a535bdf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Callback::add_user_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_user_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a user cut to the relaxation <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>the cut to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1a551ffb69f6115fad4f91974e2da45ed4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Callback::add_lazy_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_lazy_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a lazy cut to the relaxation <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>the cut to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="94" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1ac1a19a08051cc57531e9c14422a026c0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref></type>
        <definition>virtual PrimalPoint idol::Callback::primal_solution</definition>
        <argsstring>() const</argsstring>
        <name>primal_solution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the solution of the node which is currently being explored (when available) <simplesect kind="return"><para>the solution of the current node </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="100" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1a0c868172f324fcd7838bd8027ed983c7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const Timer&amp; idol::Callback::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current time <simplesect kind="return"><para>the optimizer&apos;s time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="106" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1ab45dfb3e9f7155de67fceb474a0dd827" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::Callback::best_obj</definition>
        <argsstring>() const</argsstring>
        <name>best_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the best objective value found so far <simplesect kind="return"><para>the best objective value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="112" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1aec34a610d1edb398e806774b2ead856e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::Callback::best_bound</definition>
        <argsstring>() const</argsstring>
        <name>best_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the best bound found so far <simplesect kind="return"><para>the best bound </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="118" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1a7677b6fbabe697ffb24f43e68d23cadb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Callback::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Asks the optimizer to terminate the optimization process as soon as possible </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="123" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Callback_1a99638ea9268591c53e844518e68f35e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::Callback::operator()</definition>
        <argsstring>(CallbackEvent t_event)=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1impl_1_1CutSeparation_1a1fafd4e415ea956473c4e41b9cfe5cf2">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Heuristics_1_1LocalBranching_1_1Strategy_1a6ad6e18fdb48f74436a70f44d272b632">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Heuristics_1_1RENS_1_1Strategy_1a2d3ea485dff71db98d20cc0f62c2095c">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Heuristics_1_1SimpleRounding_1_1Strategy_1a0cb878c9a9784dca3bcd8d98cfaa5100">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Plots_1_1OptimalityGap_1_1Strategy_1a925a61da6b5b0063e6bc8e341cf201c0">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Benders_1_1BendersCallback_1_1Strategy_1a0be9a037de5a17ae15189b74378fc0af">operator()</reimplementedby>
        <param>
          <type>CallbackEvent</type>
          <declname>t_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is left for the user to write and consists in the main execution block of the callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event which triggered the call </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="130" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1Callback_1ae034eb4118a50942e0ef5d2d666acbd6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Callback::throw_if_no_interface</definition>
        <argsstring>() const</argsstring>
        <name>throw_if_no_interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="134" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::Heuristics::LocalBranching::Strategy</label>
        <link refid="classidol_1_1Heuristics_1_1LocalBranching_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>idol::Heuristics::SimpleRounding::Strategy</label>
        <link refid="classidol_1_1Heuristics_1_1SimpleRounding_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>idol::LazyCutCallback::Strategy</label>
        <link refid="classidol_1_1LazyCutCallback_1_1Strategy"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>idol::Plots::OptimalityGap::Strategy</label>
        <link refid="classidol_1_1Plots_1_1OptimalityGap_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>idol::impl::CutSeparation</label>
        <link refid="classidol_1_1impl_1_1CutSeparation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::Optimizers::Robust::Benders::BendersCallback::Strategy</label>
        <link refid="classidol_1_1Optimizers_1_1Robust_1_1Benders_1_1BendersCallback_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Heuristics::RENS::Strategy</label>
        <link refid="classidol_1_1Heuristics_1_1RENS_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>idol::UserCutCallback::Strategy</label>
        <link refid="classidol_1_1UserCutCallback_1_1Strategy"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::Callback</label>
        <link refid="classidol_1_1Callback"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::Callback</label>
        <link refid="classidol_1_1Callback"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" line="69" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/Callback.h" bodystart="69" bodyend="135"/>
    <listofallmembers>
      <member refid="classidol_1_1Callback_1a957f8dff9922095786f05eec14f9f1b9" prot="public" virt="non-virtual"><scope>idol::Callback</scope><name>::idol::CallbackI</name></member>
      <member refid="classidol_1_1Callback_1a551ffb69f6115fad4f91974e2da45ed4" prot="protected" virt="virtual"><scope>idol::Callback</scope><name>add_lazy_cut</name></member>
      <member refid="classidol_1_1Callback_1acb1781b217b4d14b307ff8b74a535bdf" prot="protected" virt="virtual"><scope>idol::Callback</scope><name>add_user_cut</name></member>
      <member refid="classidol_1_1Callback_1aec34a610d1edb398e806774b2ead856e" prot="protected" virt="non-virtual"><scope>idol::Callback</scope><name>best_bound</name></member>
      <member refid="classidol_1_1Callback_1ab45dfb3e9f7155de67fceb474a0dd827" prot="protected" virt="non-virtual"><scope>idol::Callback</scope><name>best_obj</name></member>
      <member refid="classidol_1_1Callback_1a491f90eb70a35e4749666b22a2ce0a08" prot="private" virt="non-virtual"><scope>idol::Callback</scope><name>m_interface</name></member>
      <member refid="classidol_1_1Callback_1a99638ea9268591c53e844518e68f35e5" prot="protected" virt="pure-virtual"><scope>idol::Callback</scope><name>operator()</name></member>
      <member refid="classidol_1_1Callback_1af0714777151e092685aa600690c5d139" prot="protected" virt="virtual"><scope>idol::Callback</scope><name>original_model</name></member>
      <member refid="classidol_1_1Callback_1ac1a19a08051cc57531e9c14422a026c0" prot="protected" virt="virtual"><scope>idol::Callback</scope><name>primal_solution</name></member>
      <member refid="classidol_1_1Callback_1aba8b5815a8701fadc611bea822bca68b" prot="protected" virt="virtual"><scope>idol::Callback</scope><name>submit_heuristic_solution</name></member>
      <member refid="classidol_1_1Callback_1a7677b6fbabe697ffb24f43e68d23cadb" prot="protected" virt="non-virtual"><scope>idol::Callback</scope><name>terminate</name></member>
      <member refid="classidol_1_1Callback_1ae034eb4118a50942e0ef5d2d666acbd6" prot="private" virt="non-virtual"><scope>idol::Callback</scope><name>throw_if_no_interface</name></member>
      <member refid="classidol_1_1Callback_1a0c868172f324fcd7838bd8027ed983c7" prot="protected" virt="non-virtual"><scope>idol::Callback</scope><name>time</name></member>
      <member refid="classidol_1_1Callback_1a930a6ad9d6049b1eab88e78dfdd88cdc" prot="public" virt="virtual"><scope>idol::Callback</scope><name>~Callback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
