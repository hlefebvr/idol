<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1PenaltyUpdates_1_1Multiplicative" kind="class" language="C++" prot="public">
    <compoundname>idol::PenaltyUpdates::Multiplicative</compoundname>
    <basecompoundref refid="classidol_1_1PenaltyUpdate" prot="public" virt="non-virtual">idol::PenaltyUpdate</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1af746b1f95d8b73b329eec91a078e96d9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; idol::PenaltyUpdates::Multiplicative::m_factor</definition>
        <argsstring></argsstring>
        <name>m_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="59" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1abf42433901115fd62f213683cba556ad" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::PenaltyUpdates::Multiplicative::m_current_factor_index</definition>
        <argsstring></argsstring>
        <name>m_current_factor_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="60" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1af4c791dc6fb6e05a113d1d29e52e2734" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::PenaltyUpdates::Multiplicative::m_normalized</definition>
        <argsstring></argsstring>
        <name>m_normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="61" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a75741fe9379845c7d5fae8cac5aea29b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::PenaltyUpdates::Multiplicative::Multiplicative</definition>
        <argsstring>(double t_factor, bool t_normalized=false)</argsstring>
        <name>Multiplicative</name>
        <param>
          <type>double</type>
          <declname>t_factor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_normalized</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="63" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1acaa66cf2537d64e014797da891ea5c0f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::PenaltyUpdates::Multiplicative::Multiplicative</definition>
        <argsstring>(std::vector&lt; double &gt; t_factor, bool t_normalized=false)</argsstring>
        <name>Multiplicative</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>t_factor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_normalized</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="65" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a7be67783ed722e2eab146b70cba4a153" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double idol::PenaltyUpdates::Multiplicative::operator()</definition>
        <argsstring>(double t_current_penalty) override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1PenaltyUpdate_1a0abe9d4b7367fcce20b2eba5de5ac139">operator()</reimplements>
        <param>
          <type>double</type>
          <declname>t_current_penalty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="67" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1acfe45d2aee2ea9a55c93d80520c97062" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::PenaltyUpdates::Multiplicative::operator()</definition>
        <argsstring>(std::list&lt; ADM::Formulation::CurrentPenalty &gt; &amp;t_current_penalties) override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1PenaltyUpdate_1a2befebc3b2d5c5ce8441051c0d59c0fe">operator()</reimplements>
        <param>
          <type>std::list&lt; <ref refid="structidol_1_1ADM_1_1Formulation_1_1CurrentPenalty" kindref="compound">ADM::Formulation::CurrentPenalty</ref> &gt; &amp;</type>
          <declname>t_current_penalties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1aa9d3f34976331730f197ce7bf36bd0ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idol::PenaltyUpdates::Multiplicative::diversify</definition>
        <argsstring>() override</argsstring>
        <name>diversify</name>
        <reimplements refid="classidol_1_1PenaltyUpdate_1a80bc0ea2e6759197b5f17a56d2115d4c">diversify</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a37e9e17733a1694f03e0998793293c61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; idol::PenaltyUpdates::Multiplicative::describe</definition>
        <argsstring>(std::ostream &amp;t_os) const override</argsstring>
        <name>describe</name>
        <reimplements refid="classidol_1_1PenaltyUpdate_1adb674b77cb04ecb8fdd1100ca517ac22">describe</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>t_os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="75" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a6e22a63ed973fff70fc1a8f58ddd5e10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classidol_1_1PenaltyUpdate" kindref="compound">PenaltyUpdate</ref> *</type>
        <definition>PenaltyUpdate* idol::PenaltyUpdates::Multiplicative::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classidol_1_1PenaltyUpdate_1a05b3249092a74debbab2c6ab0e9d7ef7">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="77" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::PenaltyUpdate</label>
        <link refid="classidol_1_1PenaltyUpdate"/>
      </node>
      <node id="1">
        <label>idol::PenaltyUpdates::Multiplicative</label>
        <link refid="classidol_1_1PenaltyUpdates_1_1Multiplicative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>idol::PenaltyUpdate</label>
        <link refid="classidol_1_1PenaltyUpdate"/>
      </node>
      <node id="1">
        <label>idol::PenaltyUpdates::Multiplicative</label>
        <link refid="classidol_1_1PenaltyUpdates_1_1Multiplicative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" line="58" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h" bodystart="58" bodyend="80"/>
    <listofallmembers>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a6e22a63ed973fff70fc1a8f58ddd5e10" prot="public" virt="virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>clone</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a37e9e17733a1694f03e0998793293c61" prot="public" virt="virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>describe</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1aa9d3f34976331730f197ce7bf36bd0ca" prot="public" virt="virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>diversify</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1abf42433901115fd62f213683cba556ad" prot="private" virt="non-virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>m_current_factor_index</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1af746b1f95d8b73b329eec91a078e96d9" prot="private" virt="non-virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>m_factor</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1af4c791dc6fb6e05a113d1d29e52e2734" prot="private" virt="non-virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>m_normalized</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a75741fe9379845c7d5fae8cac5aea29b" prot="public" virt="non-virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>Multiplicative</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1acaa66cf2537d64e014797da891ea5c0f" prot="public" virt="non-virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>Multiplicative</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1a7be67783ed722e2eab146b70cba4a153" prot="public" virt="virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>operator()</name></member>
      <member refid="classidol_1_1PenaltyUpdates_1_1Multiplicative_1acfe45d2aee2ea9a55c93d80520c97062" prot="public" virt="virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>operator()</name></member>
      <member refid="classidol_1_1PenaltyUpdate_1acd2fc8e3968febd90a7fd9cb80af31c8" prot="public" virt="virtual"><scope>idol::PenaltyUpdates::Multiplicative</scope><name>~PenaltyUpdate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
