Search.setIndex({"docnames": ["api/bilevel/external-solvers/MibS", "api/bilevel/external-solvers/Optimizers_MibS", "api/bilevel/index", "api/bilevel/modeling/Description", "api/bilevel/single-level/KKT", "api/bilevel/single-level/Optimizers_KKT", "api/bilevel/single-level/Optimizers_StrongDuality", "api/bilevel/single-level/StrongDuality", "api/classes/external-bilevel/MibS", "api/classes/external-bilevel/Optimizers_MibS", "api/classes/external-bilevel/index", "api/classes/index", "api/classes/universal-callbacks/Callback", "api/classes/universal-callbacks/CallbackFactory", "api/classes/universal-callbacks/LazyCutCallback", "api/classes/universal-callbacks/UserCutCallback", "api/classes/universal-callbacks/index", "api/index", "api/mixed-integer/branch-and-bound/BranchAndBound", "api/mixed-integer/branch-and-bound/BranchAndBoundCallback", "api/mixed-integer/branch-and-bound/BranchAndBoundCallbackFactory", "api/mixed-integer/branch-and-bound/cuts/KnapsackCover", "api/mixed-integer/branch-and-bound/cuts/index", "api/mixed-integer/branch-and-bound/heuristics/LocalBranching", "api/mixed-integer/branch-and-bound/heuristics/RENS", "api/mixed-integer/branch-and-bound/heuristics/SimpleRounding", "api/mixed-integer/branch-and-bound/heuristics/index", "api/mixed-integer/branch-and-bound/node-selection/BestBound", "api/mixed-integer/branch-and-bound/node-selection/BestEstimate", "api/mixed-integer/branch-and-bound/node-selection/BreadthFirst", "api/mixed-integer/branch-and-bound/node-selection/DepthFirst", "api/mixed-integer/branch-and-bound/node-selection/WorstBound", "api/mixed-integer/branch-and-bound/node-selection/index", "api/mixed-integer/branch-and-bound/variable-selection/FirstInfeasibleFound", "api/mixed-integer/branch-and-bound/variable-selection/LeastInfeasible", "api/mixed-integer/branch-and-bound/variable-selection/MostInfeasible", "api/mixed-integer/branch-and-bound/variable-selection/PseudoCost", "api/mixed-integer/branch-and-bound/variable-selection/StrongBranching", "api/mixed-integer/branch-and-bound/variable-selection/UniformlyRandom", "api/mixed-integer/branch-and-bound/variable-selection/index", "api/mixed-integer/column-generation/ArtificialCosts", "api/mixed-integer/column-generation/DantzigWolfeDecomposition", "api/mixed-integer/column-generation/FarkasPricing", "api/mixed-integer/column-generation/IntegerMaster", "api/mixed-integer/column-generation/Optimizers_DantzigWolfeDecomposition", "api/mixed-integer/column-generation/stabilization/Neame", "api/mixed-integer/column-generation/stabilization/Wentges", "api/mixed-integer/column-generation/stabilization/index", "api/mixed-integer/external-solvers/GLPK", "api/mixed-integer/external-solvers/Gurobi", "api/mixed-integer/external-solvers/HiGHS", "api/mixed-integer/external-solvers/Mosek", "api/mixed-integer/external-solvers/Optimizers_GLPK", "api/mixed-integer/external-solvers/Optimizers_Gurobi", "api/mixed-integer/external-solvers/Optimizers_HiGHS", "api/mixed-integer/external-solvers/Optimizers_Mosek", "api/mixed-integer/external-solvers/Osi", "api/mixed-integer/external-solvers/Osi/OsiCbc", "api/mixed-integer/external-solvers/Osi/OsiClp", "api/mixed-integer/external-solvers/Osi/OsiCplex", "api/mixed-integer/external-solvers/Osi/OsiSymphony", "api/mixed-integer/index", "api/mixed-integer/misc/CtrType", "api/mixed-integer/misc/VarType", "api/mixed-integer/misc/operators", "api/mixed-integer/misc/tolerances", "api/mixed-integer/modeling/Annotation", "api/mixed-integer/modeling/Ctr", "api/mixed-integer/modeling/Dim", "api/mixed-integer/modeling/Env", "api/mixed-integer/modeling/Expr", "api/mixed-integer/modeling/LinExpr", "api/mixed-integer/modeling/Model", "api/mixed-integer/modeling/Point", "api/mixed-integer/modeling/QCtr", "api/mixed-integer/modeling/QuadExpr", "api/mixed-integer/modeling/TempCtr", "api/mixed-integer/modeling/TempQCtr", "api/mixed-integer/modeling/TempVar", "api/mixed-integer/modeling/Var", "api/mixed-integer/padm/Optimizers_PADM", "api/mixed-integer/padm/PADM", "api/robust/index", "api/robust/modeling/Description", "api/types/index", "api/types/universal-callbacks/CallbackEvent", "api/types/universal-callbacks/index", "benchmark/index", "developer_guide/build-the-doc", "developer_guide/index", "developer_guide/tests", "examples/bilevel-kkt", "examples/bilevel-mibs", "examples/bilevel-pessimistic", "examples/facility-location-problem", "examples/generalized-assignment-problem-bap", "examples/generalized-assignment-problem-penalty-bap", "examples/index", "examples/knapsack-problem", "examples/robust-adr", "examples/robust-ccg", "examples/robust-determistic", "faq/gap", "faq/index", "faq/mosek-and-eigen", "faq/stable", "index", "installation/global-installation/index", "installation/global-installation/linking", "installation/index", "installation/local_installation", "installation/options", "references", "tests/bilevel-optimization", "tests/index", "tests/mixed-integer-optimization", "tests/robust-optimization", "tutorials/bilevel/files", "tutorials/bilevel/index", "tutorials/bilevel/kkt", "tutorials/bilevel/mibs", "tutorials/bilevel/modeling", "tutorials/bilevel/pessimistic", "tutorials/index", "tutorials/mixed-integer/branch-and-bound/create-branching-rule", "tutorials/mixed-integer/branch-and-bound/create-callback", "tutorials/mixed-integer/branch-and-bound/create-node", "tutorials/mixed-integer/branch-and-bound/create-node-selection-rule", "tutorials/mixed-integer/branch-and-bound/index", "tutorials/mixed-integer/branch-and-bound/user-cuts-lazy-constraints", "tutorials/mixed-integer/branch-and-bound/write-branch-and-bound", "tutorials/mixed-integer/dantzig-wolfe/dantzig-wolfe", "tutorials/mixed-integer/dantzig-wolfe/in-out-stabilization", "tutorials/mixed-integer/dantzig-wolfe/index", "tutorials/mixed-integer/dantzig-wolfe/integer-master", "tutorials/mixed-integer/dantzig-wolfe/strong-branching", "tutorials/mixed-integer/dantzig-wolfe/writing-branch-and-cut-and-price", "tutorials/mixed-integer/dantzig-wolfe/writing-branch-and-price", "tutorials/mixed-integer/index", "tutorials/mixed-integer/modeling/constraints", "tutorials/mixed-integer/modeling/environment", "tutorials/mixed-integer/modeling/expressions", "tutorials/mixed-integer/modeling/index", "tutorials/mixed-integer/modeling/models", "tutorials/mixed-integer/modeling/objective-function", "tutorials/mixed-integer/modeling/variables", "tutorials/mixed-integer/optimizers/access-optimizer", "tutorials/mixed-integer/optimizers/create-optimizer", "tutorials/mixed-integer/optimizers/create-universal-callback", "tutorials/mixed-integer/optimizers/index", "tutorials/mixed-integer/optimizers/optimizers", "tutorials/mixed-integer/optimizers/solving", "tutorials/mixed-integer/optimizers/universal-callbacks", "tutorials/robust/index", "tutorials/robust/single-stage/index", "tutorials/robust/two-stage/ccg", "tutorials/robust/two-stage/column-and-constraint-generation/index", "tutorials/robust/two-stage/column-and-constraint-generation/introduction", "tutorials/robust/two-stage/column-and-constraint-generation/trust-region-stabilization", "tutorials/robust/two-stage/column-and-constraint-generation/write-ccg", "tutorials/robust/two-stage/column-and-constraint-generation/writing-separator", "tutorials/robust/two-stage/index", "tutorials/robust/two-stage/modeling"], "filenames": ["api/bilevel/external-solvers/MibS.rst", "api/bilevel/external-solvers/Optimizers_MibS.rst", "api/bilevel/index.rst", "api/bilevel/modeling/Description.rst", "api/bilevel/single-level/KKT.rst", "api/bilevel/single-level/Optimizers_KKT.rst", "api/bilevel/single-level/Optimizers_StrongDuality.rst", "api/bilevel/single-level/StrongDuality.rst", "api/classes/external-bilevel/MibS.rst", "api/classes/external-bilevel/Optimizers_MibS.rst", "api/classes/external-bilevel/index.rst", "api/classes/index.rst", "api/classes/universal-callbacks/Callback.rst", "api/classes/universal-callbacks/CallbackFactory.rst", "api/classes/universal-callbacks/LazyCutCallback.rst", "api/classes/universal-callbacks/UserCutCallback.rst", "api/classes/universal-callbacks/index.rst", "api/index.rst", "api/mixed-integer/branch-and-bound/BranchAndBound.rst", "api/mixed-integer/branch-and-bound/BranchAndBoundCallback.rst", "api/mixed-integer/branch-and-bound/BranchAndBoundCallbackFactory.rst", "api/mixed-integer/branch-and-bound/cuts/KnapsackCover.rst", "api/mixed-integer/branch-and-bound/cuts/index.rst", "api/mixed-integer/branch-and-bound/heuristics/LocalBranching.rst", "api/mixed-integer/branch-and-bound/heuristics/RENS.rst", "api/mixed-integer/branch-and-bound/heuristics/SimpleRounding.rst", "api/mixed-integer/branch-and-bound/heuristics/index.rst", "api/mixed-integer/branch-and-bound/node-selection/BestBound.rst", "api/mixed-integer/branch-and-bound/node-selection/BestEstimate.rst", "api/mixed-integer/branch-and-bound/node-selection/BreadthFirst.rst", "api/mixed-integer/branch-and-bound/node-selection/DepthFirst.rst", "api/mixed-integer/branch-and-bound/node-selection/WorstBound.rst", "api/mixed-integer/branch-and-bound/node-selection/index.rst", "api/mixed-integer/branch-and-bound/variable-selection/FirstInfeasibleFound.rst", "api/mixed-integer/branch-and-bound/variable-selection/LeastInfeasible.rst", "api/mixed-integer/branch-and-bound/variable-selection/MostInfeasible.rst", "api/mixed-integer/branch-and-bound/variable-selection/PseudoCost.rst", "api/mixed-integer/branch-and-bound/variable-selection/StrongBranching.rst", "api/mixed-integer/branch-and-bound/variable-selection/UniformlyRandom.rst", "api/mixed-integer/branch-and-bound/variable-selection/index.rst", "api/mixed-integer/column-generation/ArtificialCosts.rst", "api/mixed-integer/column-generation/DantzigWolfeDecomposition.rst", "api/mixed-integer/column-generation/FarkasPricing.rst", "api/mixed-integer/column-generation/IntegerMaster.rst", "api/mixed-integer/column-generation/Optimizers_DantzigWolfeDecomposition.rst", "api/mixed-integer/column-generation/stabilization/Neame.rst", "api/mixed-integer/column-generation/stabilization/Wentges.rst", "api/mixed-integer/column-generation/stabilization/index.rst", "api/mixed-integer/external-solvers/GLPK.rst", "api/mixed-integer/external-solvers/Gurobi.rst", "api/mixed-integer/external-solvers/HiGHS.rst", "api/mixed-integer/external-solvers/Mosek.rst", "api/mixed-integer/external-solvers/Optimizers_GLPK.rst", "api/mixed-integer/external-solvers/Optimizers_Gurobi.rst", "api/mixed-integer/external-solvers/Optimizers_HiGHS.rst", "api/mixed-integer/external-solvers/Optimizers_Mosek.rst", "api/mixed-integer/external-solvers/Osi.rst", "api/mixed-integer/external-solvers/Osi/OsiCbc.rst", "api/mixed-integer/external-solvers/Osi/OsiClp.rst", "api/mixed-integer/external-solvers/Osi/OsiCplex.rst", "api/mixed-integer/external-solvers/Osi/OsiSymphony.rst", "api/mixed-integer/index.rst", "api/mixed-integer/misc/CtrType.rst", "api/mixed-integer/misc/VarType.rst", "api/mixed-integer/misc/operators.rst", "api/mixed-integer/misc/tolerances.rst", "api/mixed-integer/modeling/Annotation.rst", "api/mixed-integer/modeling/Ctr.rst", "api/mixed-integer/modeling/Dim.rst", "api/mixed-integer/modeling/Env.rst", "api/mixed-integer/modeling/Expr.rst", "api/mixed-integer/modeling/LinExpr.rst", "api/mixed-integer/modeling/Model.rst", "api/mixed-integer/modeling/Point.rst", "api/mixed-integer/modeling/QCtr.rst", "api/mixed-integer/modeling/QuadExpr.rst", "api/mixed-integer/modeling/TempCtr.rst", "api/mixed-integer/modeling/TempQCtr.rst", "api/mixed-integer/modeling/TempVar.rst", "api/mixed-integer/modeling/Var.rst", "api/mixed-integer/padm/Optimizers_PADM.rst", "api/mixed-integer/padm/PADM.rst", "api/robust/index.rst", "api/robust/modeling/Description.rst", "api/types/index.rst", "api/types/universal-callbacks/CallbackEvent.rst", "api/types/universal-callbacks/index.rst", "benchmark/index.rst", "developer_guide/build-the-doc.rst", "developer_guide/index.rst", "developer_guide/tests.rst", "examples/bilevel-kkt.rst", "examples/bilevel-mibs.rst", "examples/bilevel-pessimistic.rst", "examples/facility-location-problem.rst", "examples/generalized-assignment-problem-bap.rst", "examples/generalized-assignment-problem-penalty-bap.rst", "examples/index.rst", "examples/knapsack-problem.rst", "examples/robust-adr.rst", "examples/robust-ccg.rst", "examples/robust-determistic.rst", "faq/gap.rst", "faq/index.rst", "faq/mosek-and-eigen.rst", "faq/stable.rst", "index.rst", "installation/global-installation/index.rst", "installation/global-installation/linking.rst", "installation/index.rst", "installation/local_installation.rst", "installation/options.rst", "references.rst", "tests/bilevel-optimization.rst", "tests/index.rst", "tests/mixed-integer-optimization.rst", "tests/robust-optimization.rst", "tutorials/bilevel/files.rst", "tutorials/bilevel/index.rst", "tutorials/bilevel/kkt.rst", "tutorials/bilevel/mibs.rst", "tutorials/bilevel/modeling.rst", "tutorials/bilevel/pessimistic.rst", "tutorials/index.rst", "tutorials/mixed-integer/branch-and-bound/create-branching-rule.rst", "tutorials/mixed-integer/branch-and-bound/create-callback.rst", "tutorials/mixed-integer/branch-and-bound/create-node.rst", "tutorials/mixed-integer/branch-and-bound/create-node-selection-rule.rst", "tutorials/mixed-integer/branch-and-bound/index.rst", "tutorials/mixed-integer/branch-and-bound/user-cuts-lazy-constraints.rst", "tutorials/mixed-integer/branch-and-bound/write-branch-and-bound.rst", "tutorials/mixed-integer/dantzig-wolfe/dantzig-wolfe.rst", "tutorials/mixed-integer/dantzig-wolfe/in-out-stabilization.rst", "tutorials/mixed-integer/dantzig-wolfe/index.rst", "tutorials/mixed-integer/dantzig-wolfe/integer-master.rst", "tutorials/mixed-integer/dantzig-wolfe/strong-branching.rst", "tutorials/mixed-integer/dantzig-wolfe/writing-branch-and-cut-and-price.rst", "tutorials/mixed-integer/dantzig-wolfe/writing-branch-and-price.rst", "tutorials/mixed-integer/index.rst", "tutorials/mixed-integer/modeling/constraints.rst", "tutorials/mixed-integer/modeling/environment.rst", "tutorials/mixed-integer/modeling/expressions.rst", "tutorials/mixed-integer/modeling/index.rst", "tutorials/mixed-integer/modeling/models.rst", "tutorials/mixed-integer/modeling/objective-function.rst", "tutorials/mixed-integer/modeling/variables.rst", "tutorials/mixed-integer/optimizers/access-optimizer.rst", "tutorials/mixed-integer/optimizers/create-optimizer.rst", "tutorials/mixed-integer/optimizers/create-universal-callback.rst", "tutorials/mixed-integer/optimizers/index.rst", "tutorials/mixed-integer/optimizers/optimizers.rst", "tutorials/mixed-integer/optimizers/solving.rst", "tutorials/mixed-integer/optimizers/universal-callbacks.rst", "tutorials/robust/index.rst", "tutorials/robust/single-stage/index.rst", "tutorials/robust/two-stage/ccg.rst", "tutorials/robust/two-stage/column-and-constraint-generation/index.rst", "tutorials/robust/two-stage/column-and-constraint-generation/introduction.rst", "tutorials/robust/two-stage/column-and-constraint-generation/trust-region-stabilization.rst", "tutorials/robust/two-stage/column-and-constraint-generation/write-ccg.rst", "tutorials/robust/two-stage/column-and-constraint-generation/writing-separator.rst", "tutorials/robust/two-stage/index.rst", "tutorials/robust/two-stage/modeling.rst"], "titles": ["Bilevel::MibS", "Optimizers::Bilevel::MibS", "Bilevel Optimization", "Bilevel::Description", "Bilevel::KKT", "Optimizers::Bilevel::KKT", "Optimizers::Bilevel::StrongDuality", "Bilevel::StrongDuality", "Bilevel::Mibs", "Optimizers::Bilevel::MibS", "External Bilevel Solvers", "Class List", "Callback", "CallbackFactory", "LazyCutCallback", "UserCutCallback", "Universal Callbacks", "API", "BranchAndBound", "BranchAndBoundCallback", "BranchAndBoundCallbackFactory", "Cuts::KnapsackCover", "More on Cutting Planes\u2026", "Heuristics::LocalBranching", "Heuristics::RENS", "Heuristics::SimpleRounding", "More on Heuristics\u2026", "BestBound", "BestEstimate", "BreadthFirst", "DepthFirst", "WorstBound", "More on Node Selection Rules\u2026", "FirstInfeasibleFound", "LeastInfeasible", "MostInfeasible", "PseudoCost", "StrongBranching", "UniformlyRandom", "More on Branching Rules\u2026", "DantzigWolfe::ArtificialCosts", "DantzigWolfeDecomposition", "DantzigWolfe::FarkasPricing", "Heuristics::IntegerMaster", "Optimizers::DantzigWolfeDecomposition", "DantzigWolfe::Neame", "DantzigWolfe::Wentges", "More on Stabilization\u2026", "GLPK", "Gurobi", "HiGHS", "Mosek", "Optimizers::GLPK", "Optimizers::Gurobi", "Optimizers::HiGHS", "Optimizers::Mosek", "More on coin-or/Osi (Cplex, Xpress, Cbc, \u2026)\u2026", "OsiCbc", "OsiClp", "OsiCplex", "OsiSymphony", "Mixed-integer Optimization", "CtrType", "VarType", "Operator Overloading", "Tolerances", "Annotation", "Ctr", "Dim", "Env", "AffExpr", "LinExpr", "Model", "Point", "QCtr", "QuadExpr", "TempCtr", "TempQCtr", "TempVar", "Var", "Optimizers::PADM", "PADM", "Robust Optimization", "Robust::Description", "Type List", "Events", "Universal Callbacks", "Benchmark", "Build the Documentation", "Developers", "Functional, Unit and Integration Tests", "Solving an optimistic LP-LP bilevel problem with KKT reformulation", "Solving an optimistic MILP-MILP bilevel problem with coin-or/MibS", "Solving a pessimistic bilevel problem using an optimistic reformulation", "Solving a facility location problem with a custom branch-and-bound", "Solving a generalized assignment problem by column generation and branch-and-price", "Combining branch-and-price, column generation, and a penalty method for the generalized assignment problem", "Examples", "Solving a knapsack problem with HiGHS", "Using affine decision rules to solve a two-stage facility location problem with facility disruption", "Using column-and-constraint generation to solve a two-stage facility location problem with facility disruption", "Solving a robust facility location problem by its deterministic equivalent", "How is the Optimality Gap Computed?", "FAQ", "Why is Eigen Necessary to Solve QCQPs with Mosek?", "What are the Stable Features of idol?", "idol, a C++ Framework for Optimization", "Global Installation", "Linking Your C++ Project", "Installation", "Local Installation", "List of CMake Options", "References", "Stable Features in Bilevel Optimization", "Stable Features", "Stable Features in Mixed-integer Optimization", "Stable Features in Robust Optimization", "Reading and Writing Bilevel Instances (BOBILib)", "Bilevel Optimization", "Deriving Single-level Reformulations", "Solving Mixed-Integer Bilevel Problems with coin-or/MibS", "Modeling a Bilevel Problem", "From Pessimistic Bilevel Optimization to Optimistic Bilevel Optimization", "Tutorials", "Creating Your Own Branching Rule (Advanced) [TODO]", "Create Your Own Callback (Advanced) [TODO]", "Creating Your Own Node Class (Advanced) [TODO]", "Creating Your Own Node Selection Rule (Advanced) [TODO]", "Branch-and-Bound Algorithm", "Adding User Cuts and Lazy Constraints [TODO]", "Writing an LP-based Branch-and-Bound [TODO]", "Solving A Dantzig-Wolfe Reformulation", "Using In-Out Stabilization [TODO]", "Column Generation and Branch-and-Price Algorithm", "The Integer Master Heuristic [TODO]", "Using Strong Branching", "Writing A Branch-and-Cut-and-Price Algorithm [TODO]", "Writing A Branch-and-Price Algorithm", "Mixed-Integer Optimization", "Constraints", "The Environment", "Expressions", "Modeling a MIP with idol", "Models", "Objective Functions", "Variables", "Getting Access to The Underlying Optimizer", "Creating Your Own Optimizer (Advanced) [TODO]", "Creating Your Own Callback", "Solving MIPs", "The Concept of <code class=\"code docutils literal notranslate\"><span class=\"pre\">Optimizer</span></code> and <code class=\"code docutils literal notranslate\"><span class=\"pre\">OptimizerFactory</span></code>", "Using an External Solver and Accessing the Solution", "Adding User Cuts and Lazy Constraints", "Robust Optimization", "Single-stage Robust Optimization", "The Column-and-Constraint Generation: Introduction", "Using Column-and-Constraint-Generation", "Introduction", "Using Trust Region Stabilization", "Writing a Column-and-Constraint-Generation Algorithm", "Writing Your Own Separator (Advanced) [TODO]", "Two-stage Robust Optimization (Adjustable)", "Modeling Adjustable Robust Problems"], "terms": {"class": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 135, 138, 139, 140, 141, 142, 143, 144, 148, 150, 151, 152, 155, 157, 158], "idol": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 89, 90, 103, 104, 107, 108, 109, 110, 111, 119, 120, 121, 122, 123, 131, 133, 135, 137, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 157, 159, 162], "public": [12, 19, 108, 110, 148], "optimizerfactorywithdefaultparamet": [], "function": [12, 96, 99, 105, 110, 111, 113, 114, 115, 117, 118, 119, 123, 131, 138, 142, 143, 145, 150, 151, 152, 154, 157, 162], "explicit": [], "descript": [2, 17, 82, 117, 119, 120, 121, 122, 151], "t_descript": [], "const": [12, 19, 66, 106, 108, 110, 120, 131, 135, 137, 139, 141, 143, 145, 148, 150, 151, 152, 162], "t_src": [], "noexcept": [], "delet": [], "oper": [12, 17, 19, 61, 112, 115, 118, 133, 148], "virtual": [], "optim": [10, 12, 14, 18, 41, 43, 56, 66, 96, 103, 106, 107, 112, 114, 117, 119, 120, 121, 131, 133, 135, 137, 139, 140, 142, 143, 145, 149, 151, 157, 158, 159, 162], "model": [12, 14, 17, 18, 19, 56, 66, 71, 94, 95, 106, 108, 110, 114, 117, 118, 120, 122, 123, 131, 135, 137, 138, 139, 144, 146, 148, 149, 150, 152, 153, 154, 158, 159, 161], "t_model": [], "overrid": [12, 19, 148], "creat": [18, 19, 66, 71, 88, 90, 106, 107, 108, 111, 117, 120, 121, 122, 123, 135, 138, 140, 141, 142, 144, 149, 150, 151, 152, 162], "return": [12, 14, 19, 64, 108, 110, 117, 119, 135, 144, 145, 146, 148, 151, 162], "new": [12, 14, 18, 19, 90, 96, 106, 108, 115, 121, 133, 135, 140, 143, 145, 148, 150, 152, 153, 157, 162], "solv": [14, 18, 19, 43, 96, 97, 103, 106, 111, 112, 118, 122, 123, 133, 135, 138, 144, 148, 150, 152, 155, 157, 158, 159, 162], "given": [12, 14, 66, 94, 95, 98, 99, 101, 118, 131, 135, 138, 139, 143, 144, 145, 148, 150, 151, 152, 154, 155, 157, 158, 159, 162], "paramet": [96, 99, 101, 109, 115, 135, 141, 145, 148, 151, 153, 154, 158, 159, 162], "The": [14, 18, 19, 28, 64, 66, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 104, 106, 107, 108, 110, 111, 112, 115, 118, 120, 121, 123, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 158, 159, 161, 162], "which": [12, 14, 18, 19, 43, 66, 71, 88, 93, 99, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 131, 133, 135, 139, 141, 142, 144, 145, 146, 148, 150, 152, 153, 154, 155, 157, 159, 162], "A": [12, 14, 28, 105, 106, 107, 109, 110, 112, 118, 119, 121, 122, 123, 133, 138, 139, 141, 143, 145, 146, 148, 151, 152, 153, 154], "with_cplex_for_feas": 120, "bool": [], "t_valu": [], "with_file_interfac": [], "add_callback": [148, 152], "callbackfactori": [11, 12, 16, 148, 152], "t_cb": [], "clone": [12, 19, 90, 148], "copi": [12, 88, 107, 148], "factori": [12, 18, 41, 120, 131, 137, 146, 148, 150, 151, 152], "thi": [12, 14, 18, 19, 41, 43, 71, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 104, 105, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162], "i": [12, 14, 18, 19, 64, 66, 71, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162], "us": [12, 14, 18, 19, 43, 56, 64, 66, 71, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 102, 104, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 123, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 155, 157, 159, 162], "polymorph": [], "object": [12, 19, 56, 66, 95, 96, 113, 118, 119, 120, 122, 123, 131, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 154, 158, 162], "current": [14, 19, 89, 106, 118, 135, 150, 152, 155], "e": [19, 66, 99, 104, 106, 107, 109, 110, 112, 118, 131, 135, 138, 139, 146, 148, 152, 153, 155, 157, 158, 159, 162], "with_log": [120, 150, 158, 159], "set": [14, 71, 90, 94, 95, 98, 99, 101, 104, 108, 109, 110, 111, 115, 118, 119, 121, 122, 131, 135, 137, 139, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159], "log_mast": [], "level": [17, 89, 91, 92, 111, 113, 117, 118, 122, 123, 135, 153], "color": 89, "exampl": [91, 92, 93, 95, 96, 99, 101, 108, 110, 119, 131, 135, 142, 143, 144, 145, 159], "auto": [71, 106, 108, 110, 117, 119, 120, 121, 122, 131, 135, 137, 139, 141, 143, 145, 146, 148, 150, 151, 152, 162], "algorithm": [12, 18, 19, 66, 106, 111, 112, 115, 123, 135, 138, 150, 152, 155, 156, 158], "glpk": [17, 18, 19, 61, 106, 110, 114, 143, 150], "true": [120, 150, 152, 158, 159], "t_log_level": [], "t_log_color": [], "output": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 90], "itself": [106, 152], "with_time_limit": [120, 137, 150], "doubl": [64, 106, 119, 148, 151, 162], "t_time_limit": [], "time": [107, 115, 135, 137, 140, 145, 150, 151, 153, 157, 158, 162], "limit": [98, 115, 135, 137, 150, 151], "3600": [120, 137, 150], "second": [99, 104, 106, 117, 131, 135, 139, 141, 145, 150, 157, 162], "with_thread_limit": [], "unsign": [66, 106, 121, 131, 135, 151, 162], "int": [66, 106, 108, 110, 121, 131, 135, 151, 162], "t_max_n_thread": [], "maximum": [18, 94, 99, 101, 115, 135, 162], "number": [12, 14, 89, 94, 98, 99, 115, 117, 131, 133, 135, 143, 151, 158], "thread": 115, "can": [12, 14, 18, 19, 43, 56, 64, 66, 88, 89, 90, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162], "5": [28, 91, 104, 106, 112, 119, 135, 150, 151, 158], "with_iteration_limit": [], "t_iteration_count_limit": [], "iter": [96, 115, 133, 135, 141, 148, 151, 152, 158, 159], "go": [90, 155, 158], "through": [12, 106, 109, 111, 131, 137, 140, 148, 150, 158], "200": [], "with_best_bound_stop": [], "t_best_bound_stop": [], "threshold": [], "best": [18, 28, 111, 115, 137, 144, 145, 150, 151], "bound": [12, 14, 17, 18, 19, 97, 106, 113, 115, 119, 123, 133, 135, 137, 138, 144, 145, 150, 151, 155], "stop": [115, 135, 155, 158], "when": [12, 19, 64, 66, 90, 95, 105, 111, 131, 135, 138, 139, 145, 148, 152, 159], "have": [12, 14, 56, 88, 104, 105, 106, 107, 108, 111, 117, 118, 119, 120, 121, 122, 131, 133, 135, 137, 140, 148, 150, 152, 155, 159, 162], "found": [12, 90, 105, 107, 110, 111, 135, 148, 151, 152], "greater": [148, 152], "than": [104, 148, 152, 157], "my_known_best_obj": [], "0": [14, 66, 71, 91, 92, 93, 94, 95, 96, 98, 99, 101, 104, 106, 108, 110, 111, 112, 113, 115, 118, 119, 121, 122, 131, 135, 138, 139, 141, 145, 146, 148, 150, 151, 152, 155, 157, 158, 162], "with_best_obj_stop": [], "t_user_best_obj": [], "valu": [14, 66, 98, 104, 110, 111, 115, 119, 131, 135, 138, 139, 143, 144, 145, 148, 151, 152, 153, 154, 155, 157, 158], "less": [118, 148, 152, 154], "my_known_best_bound": [], "with_relative_gap_toler": [], "t_relative_gap_toler": [], "rel": [102, 115, 151], "gap": [95, 96, 103, 115, 131, 137, 151], "toler": [14, 17, 61, 102, 151], "prove": 151, "05": 112, "with_absolute_gap_toler": [], "t_absolute_gap_toler": [], "absolut": [102, 115, 151], "1e": [], "4": [93, 110, 112, 119, 152, 157], "with_presolv": [], "get_param_presolv": [], "activ": [90, 94, 99, 101, 115, 158, 162], "fals": [], "turn": [115, 150, 152, 162], "off": [90, 115, 120, 152], "phase": [], "": [12, 14, 19, 90, 91, 92, 93, 94, 95, 96, 98, 101, 106, 107, 111, 112, 115, 117, 118, 119, 121, 122, 131, 133, 135, 137, 138, 142, 143, 145, 148, 149, 152, 154, 155, 157, 158, 162], "disabl": [], "1": [71, 93, 94, 95, 96, 98, 99, 101, 104, 106, 108, 110, 112, 118, 119, 121, 122, 131, 135, 138, 139, 141, 143, 145, 146, 148, 150, 151, 152, 154, 155, 157, 158, 162], "enabl": 152, "with_infeasible_or_unbounded_info": [], "behaviour": [], "shown": 64, "infeas": [18, 113, 115, 135, 137, 139, 150, 151, 155, 158], "unbound": [115, 151], "forc": 90, "feasibl": [14, 96, 99, 113, 115, 131, 138, 139, 151, 152, 153, 157, 159, 162], "unbounded": [], "provid": [91, 110, 119, 133, 143, 150, 151, 152, 153, 154], "certif": [115, 139, 151], "condit": [91, 119], "t_conditional_valu": [], "std": [12, 19, 66, 111, 120, 122, 131, 135, 141, 143, 145, 148, 151, 159], "void": [12, 19, 148], "t_if": [], "execut": [12, 19, 108, 110, 115, 140, 152], "lambda": [119, 131, 152], "onli": [14, 43, 56, 64, 90, 106, 108, 111, 131, 133, 135, 137, 139, 140, 145, 148, 150, 151, 152, 153, 157, 158], "its": [12, 14, 88, 90, 93, 97, 98, 111, 118, 119, 131, 133, 138, 145, 146, 151, 155, 158], "first": [12, 19, 64, 94, 96, 98, 104, 107, 117, 131, 135, 141, 145, 148, 151, 152, 157, 158, 162], "argument": [56, 66, 120, 121, 131, 135, 139, 145, 150, 151, 158, 159], "build": [64, 106], "differ": [64, 102, 106, 113, 115, 135, 139, 140, 142, 145, 148, 150, 152, 155, 157], "depend": [89, 107, 113, 115, 135, 151, 155, 162], "some": [12, 14, 104, 109, 110, 111, 113, 119, 131, 135, 138, 143, 145, 146, 148, 150, 151, 155, 157, 158, 162], "extern": [11, 17, 18, 106, 107, 108, 110, 115, 117, 123, 138, 143, 149], "variabl": [18, 66, 71, 96, 107, 110, 111, 113, 119, 120, 121, 122, 123, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162], "use_presolv": [], "x": [14, 71, 91, 92, 93, 94, 95, 96, 98, 99, 101, 104, 106, 108, 110, 118, 119, 121, 122, 131, 138, 139, 141, 143, 145, 146, 148, 150, 151, 152, 154, 155, 157, 158, 159, 162], "noth": [121, 162], "happen": 135, "case": [101, 118, 121, 131, 135, 138, 145, 146, 148, 150, 151, 152, 153, 154, 157, 159, 162], "t_els": [], "templat": [66, 111, 131, 141, 145, 151], "t": [14, 91, 92, 93, 94, 95, 96, 98, 101, 112, 118, 119, 121, 122, 131, 137, 138, 143, 145, 148, 152, 154, 155, 157, 158], "inlin": [], "doxygenclass": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83], "cannot": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 90, 148, 150], "find": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 104, 123, 145, 151, 154, 159], "doxygen": [8, 9, 12, 13, 14, 15, 62, 63, 73, 85, 88, 89], "xml": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85], "project": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 89, 106, 107, 109, 110], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 90, 91, 92, 93, 94, 99, 101, 113, 115, 118, 120, 121, 123, 135, 139, 142, 145, 152, 153, 155, 162], "directori": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 90, 107, 111], "_build": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85], "mib": [2, 10, 11, 17, 97, 106, 111, 114, 118, 121, 122, 123, 159], "univers": [11, 84, 112, 115], "callback": [11, 19, 84, 123, 138, 149, 152], "lazycutcallback": [11, 16, 19, 152], "usercutcallback": [11, 16, 19, 148, 152], "solver": [11, 17, 18, 19, 56, 107, 108, 110, 115, 117, 119, 120, 121, 122, 123, 138, 143, 148, 149, 150, 152, 155, 159], "ar": [12, 14, 18, 19, 41, 43, 66, 89, 90, 94, 95, 101, 103, 104, 106, 109, 111, 113, 114, 115, 117, 118, 121, 123, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 152, 153, 154, 155, 157, 158, 159, 162], "user": [12, 106, 107, 109, 111, 114, 115, 123, 138, 148, 149, 150, 157], "defin": [12, 93, 99, 110, 111, 118, 135, 137, 143, 144, 148, 152, 153, 157], "invok": 12, "dure": [12, 14, 131, 140, 148, 150, 151], "branch": [12, 17, 18, 19, 66, 97, 106, 112, 123, 131, 138, 150, 152, 155, 158], "certain": 12, "kei": [12, 71, 153], "step": [12, 107, 131, 155, 158], "procedur": [12, 152], "These": [12, 121, 133, 141, 145], "m_n_points_bound": [12, 152, 157], "call": [12, 19, 66, 90, 94, 98, 106, 107, 111, 117, 119, 121, 131, 135, 137, 139, 143, 145, 148, 150, 151, 152, 155, 157, 158, 159, 162], "event": [12, 19, 84, 86, 148], "monitor": [12, 115], "progress": [12, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 147, 160], "control": [12, 101, 140, 158, 162], "behavior": [12, 155], "perform": [12, 19, 111, 112, 135, 153, 157, 162], "addit": [12, 66, 131, 145, 151], "process": [12, 14, 96, 106, 107, 109, 131, 144, 148, 150, 151, 157], "common": [12, 119, 135, 139, 145, 146, 157], "implement": [12, 14, 19, 106, 111, 112, 113, 115, 116, 131, 133, 137, 148, 150, 152, 155, 157], "custom": [12, 18, 97, 99, 101, 107, 109, 162], "cut": [12, 14, 17, 61, 106, 112, 113, 115, 123, 133, 138, 149], "gener": [12, 14, 88, 90, 97, 99, 101, 106, 111, 112, 115, 119, 123, 135, 137, 138, 141, 148, 152, 153, 157, 161, 162], "each": [12, 18, 89, 94, 95, 98, 99, 101, 115, 131, 133, 135, 140, 145, 148, 150, 151, 152, 157, 158, 159, 162], "node": [12, 17, 18, 19, 28, 43, 61, 115, 133, 135, 137, 150, 152], "tree": [12, 18, 133, 135, 152], "note": [12, 41, 56, 64, 88, 90, 91, 98, 99, 101, 107, 108, 111, 118, 119, 120, 121, 122, 131, 135, 143, 145, 146, 148, 150, 155, 157, 158, 162], "offer": [12, 106, 144], "out": [12, 19, 91, 107, 148, 151], "box": 12, "routin": [12, 106, 137, 146, 159], "separ": [12, 148, 152, 155, 158, 159], "name": [12, 131, 143, 150, 162], "yet": [12, 135, 140, 145, 157], "total": [12, 94, 95, 98, 99, 101, 131, 162], "possibl": [12, 19, 91, 106, 107, 108, 110, 111, 119, 120, 121, 133, 141, 144, 145, 150, 151, 152, 153, 154, 157, 162], "add_user_cut": [12, 148], "add_lazy_cut": 12, "method": [12, 17, 19, 66, 97, 109, 112, 119, 121, 131, 133, 135, 137, 139, 141, 143, 144, 145, 146, 148, 150, 151, 157, 158, 159, 162], "insid": [12, 88, 90, 111, 137], "In": [12, 71, 91, 93, 95, 96, 99, 101, 106, 111, 117, 119, 120, 121, 122, 131, 133, 135, 137, 138, 141, 143, 145, 146, 148, 150, 151, 152, 153, 155, 157, 158, 159, 162], "nutshel": 12, "similarli": [12, 119, 139, 145, 152, 162], "intend": [12, 111], "potenti": [12, 14, 94, 99, 101, 133, 154, 162], "improv": [12, 96, 133], "qualiti": 12, "relax": [12, 14, 18, 19, 96, 117, 119, 120, 122, 131, 133, 135, 137, 138, 148, 150, 152, 157], "whose": [12, 135, 148], "presenc": 12, "necessari": [12, 103, 107, 111, 117, 143, 152, 159, 162], "converg": [12, 133, 155, 159], "an": [12, 14, 18, 19, 56, 64, 66, 90, 94, 95, 97, 98, 99, 101, 104, 107, 111, 113, 115, 117, 119, 120, 121, 122, 123, 128, 131, 133, 135, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 155, 157, 158, 159, 162], "solut": [12, 14, 28, 95, 96, 112, 113, 115, 118, 122, 123, 131, 133, 135, 137, 138, 139, 145, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 162], "non": [12, 19, 104, 118, 139, 157], "valid": [12, 91, 119, 148, 152], "ha": [12, 56, 90, 94, 95, 98, 99, 101, 104, 105, 106, 107, 118, 131, 135, 139, 141, 144, 145, 148, 151, 152, 157, 162], "been": [12, 14, 56, 105, 107, 120, 131, 135, 144, 145, 151, 157], "instead": [12, 14, 19, 104, 133, 135, 139, 142, 146, 153, 157, 158, 162], "constraint": [12, 14, 66, 95, 96, 97, 104, 106, 112, 113, 119, 121, 122, 123, 131, 133, 135, 137, 138, 140, 141, 142, 145, 148, 149, 150, 151, 153, 154, 158, 161, 162], "should": [12, 19, 90, 106, 107, 108, 110, 111, 120, 121, 131, 135, 137, 140, 148, 151, 152, 157, 162], "part": [12, 14, 121, 135, 141, 152, 162], "were": [12, 152], "omit": [12, 14], "reason": [12, 115, 151], "typic": [12, 14, 71, 106, 118, 135, 140, 143, 150, 152, 153, 157, 162], "definit": [12, 14, 110], "larg": [12, 14, 18, 28, 106, 112, 117, 133], "If": [12, 14, 18, 19, 90, 104, 106, 107, 108, 110, 111, 120, 121, 122, 137, 144, 146, 148, 150, 151, 153, 155, 157, 159, 162], "you": [12, 14, 18, 19, 88, 89, 90, 105, 106, 107, 108, 109, 110, 111, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 145, 146, 147, 148, 149, 151, 152, 153, 157, 158, 159, 160, 162], "want": [12, 19, 90, 104, 106, 107, 109, 110, 114, 131, 145, 146, 148, 150, 151, 162], "inherit": 12, "callbackev": [12, 19, 85, 148], "must": [12, 104, 110, 111, 120, 135, 139, 148, 153, 158], "pass": [12, 56, 111, 120, 121, 131, 143, 145, 148, 150, 152, 158, 159], "role": [12, 148], "whenev": [12, 144, 148, 152], "need": [12, 88, 90, 104, 106, 107, 108, 111, 119, 120, 121, 131, 135, 139, 145, 146, 148, 150, 152, 157, 159, 162], "everi": [12, 90, 131, 140, 142, 148], "child": [12, 135, 148], "littl": [12, 148], "we": [12, 14, 18, 66, 71, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 117, 118, 119, 120, 121, 122, 131, 133, 135, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 162], "now": [12, 90, 104, 106, 107, 111, 119, 131, 135, 137, 143, 150, 151, 152, 155, 157, 162], "give": [12, 66, 106, 111, 157], "print": [12, 19, 104, 148, 159], "mycallback": [12, 19, 148], "strategi": [12, 19, 112, 148], "real": [12, 114, 153], "protect": [12, 19, 148, 154], "t_event": [12, 19, 148], "incumbentsolut": [12, 148], "cout": [12, 19, 66, 120, 122, 141, 143, 145, 148, 151, 159], "primal_solut": [12, 148], "endl": [12, 19, 66, 120, 122, 141, 143, 145, 148, 151, 159], "later": [12, 151], "compliant": [12, 88], "like": [12, 104, 106, 135, 137, 159], "gurobi": [12, 17, 61, 91, 93, 99, 101, 106, 109, 110, 114, 117, 119, 131, 135, 137, 143, 146, 148, 150, 152, 158, 159], "branchandbound": [12, 17, 19, 43, 61, 135, 137, 148, 150], "with_callback": [12, 19], "also": [12, 14, 18, 41, 56, 90, 91, 99, 101, 102, 107, 110, 111, 114, 119, 120, 121, 137, 140, 142, 143, 144, 145, 148, 150, 152, 157, 159, 162], "exist": [12, 14, 19, 90, 106, 115, 118, 122, 142, 157, 159], "more": [12, 17, 61, 66, 89, 91, 104, 106, 107, 109, 117, 120, 121, 131, 133, 135, 139, 145, 151, 154, 157, 162], "advanc": [12, 19, 107, 109, 112, 131, 146, 148, 151, 152, 162], "specif": [12, 19, 107, 110, 135, 146, 148, 151, 152], "For": [12, 19, 66, 88, 89, 90, 94, 98, 106, 110, 111, 117, 119, 121, 122, 133, 135, 137, 139, 141, 142, 144, 145, 146, 150, 151, 158, 162], "featur": [12, 19, 89, 103, 106, 119, 131, 158, 162], "see": [12, 14, 89, 102, 106, 107, 110, 111, 120, 121, 131, 133, 135, 137, 139, 142, 143, 145, 148, 150, 151, 152, 157, 159, 162], "branchandboundcallback": [12, 17, 61], "subclass": [], "heurist": [17, 61, 112], "localbranch": 26, "ren": 26, "simpleround": 26, "plot": 89, "optimalitygap": [], "impl": [], "cutsepar": [], "default": [14, 19, 88, 90, 107, 110, 111, 115, 119, 121, 131, 135, 148, 152, 158, 162], "original_model": 151, "access": [19, 66, 106, 115, 117, 123, 138, 141, 142, 149, 150], "origin": [14, 110, 131, 135, 151, 152, 155, 157], "submit_heuristic_solut": [], "primalpoint": [], "t_solut": [], "submit": [], "tempctr": [17, 61, 139], "t_cut": [], "add": [14, 88, 110, 113, 115, 131, 133, 139, 142, 143, 148, 149, 150, 151, 152, 155, 158], "ad": [14, 115, 123, 137, 138, 139, 141, 145, 148, 149, 157], "lazi": [14, 115, 123, 138, 148, 149], "being": [18, 19, 101, 107, 131, 137, 150, 162], "explor": [18, 133], "avail": [90, 115, 121, 131, 139, 145, 151, 153], "timer": [], "best_obj": [], "so": [104, 107, 111, 119, 131, 135, 137, 146, 150, 151, 152, 155, 157, 162], "far": 150, "best_bound": [], "termin": 115, "ask": [108, 110, 115, 155], "soon": [], "left": [14, 96, 99, 101, 113, 115, 131, 135, 155, 157, 162], "write": [106, 115, 118, 123, 128, 133, 135, 138, 148, 150, 156], "consist": [71, 162], "main": [106, 108, 110, 139, 152], "block": [88, 89, 133], "trigger": [19, 135, 148], "friend": [], "callbacki": [], "essenti": 14, "aris": [14, 150, 153], "enumer": [14, 131], "all": [14, 88, 90, 94, 99, 101, 106, 107, 110, 111, 118, 121, 131, 135, 138, 142, 148, 152, 153, 154, 155, 157, 162], "mai": [14, 90, 107, 135, 140, 145, 146, 150, 151, 155, 157], "judici": 14, "them": [14, 90, 99, 106, 118, 119, 145, 152], "get": [14, 66, 88, 109, 110, 117, 123, 138, 139, 142, 149, 155, 158], "smaller": [14, 135, 154], "Then": [14, 19, 90, 93, 94, 96, 98, 101, 104, 110, 119, 120, 122, 131, 135, 145, 148, 151, 152, 157, 159], "check": [14, 66, 91, 139, 145, 146, 148, 152, 157, 162], "against": [14, 107, 111, 120, 153, 154], "whole": [14, 114, 135], "violat": [14, 148, 152], "identifi": [14, 121, 133, 157], "resolv": 14, "satisfi": [14, 139, 152, 154, 155, 157, 159, 162], "materi": [14, 131], "fly": 14, "consid": [14, 94, 96, 99, 101, 104, 105, 118, 119, 120, 121, 122, 135, 150, 151, 152, 155, 157, 159, 162], "follow": [14, 19, 56, 64, 66, 71, 88, 90, 91, 92, 93, 95, 98, 101, 106, 107, 108, 111, 112, 117, 118, 119, 120, 121, 122, 131, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162], "problem": [14, 19, 28, 97, 106, 111, 112, 117, 118, 123, 133, 135, 137, 138, 139, 142, 144, 145, 148, 149, 150, 151, 152, 153, 158, 159, 161], "begin": [14, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 118, 119, 121, 122, 131, 133, 138, 143, 148, 152, 155, 157, 158, 162], "align": [14, 91, 92, 93, 94, 95, 96, 98, 99, 101, 104, 118, 119, 121, 122, 131, 138, 143, 148, 152, 155, 157, 158, 162], "min_x": [14, 157], "c": [14, 64, 88, 90, 98, 104, 106, 107, 111, 119, 135, 138, 141, 143, 148, 152, 154], "top": [14, 99, 104, 119, 138, 143, 148, 152, 154, 155], "text": [14, 91, 92, 93, 94, 95, 96, 98, 101, 102, 118, 119, 121, 122, 131, 135, 138, 143, 148, 152, 154, 155, 157, 158], "xi": [14, 99, 101, 155, 157, 158, 159, 162], "le": [14, 91, 93, 94, 95, 96, 98, 99, 101, 104, 119, 122, 131, 135, 138, 143, 152, 155, 157, 158, 162], "xi_0": 14, "quad": [14, 91, 92, 93, 94, 95, 96, 98, 99, 101, 118, 119, 121, 122, 131, 138, 143, 148, 152, 154, 155, 157, 158], "end": [14, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 118, 119, 121, 122, 131, 138, 143, 148, 152, 155, 157, 158, 159, 162], "assum": [14, 104, 107, 117, 118, 120, 122, 135, 137, 149, 150, 153, 155, 159, 162], "infinit": 14, "idea": [14, 106, 110, 135], "start": [14, 109, 110, 117, 119, 131, 142, 149, 150, 153], "master": [14, 95, 96, 112, 131, 133, 152, 155, 158, 159], "associ": [14, 66, 119, 131, 139, 145], "denot": [14, 98, 104, 118, 131, 135, 153, 155, 157], "search": [14, 108, 111, 112], "observ": [14, 131, 135], "hold": [14, 104, 155, 157, 159], "right": [14, 96, 99, 101, 107, 113, 115, 131, 135, 139, 155, 157, 162], "leftrightarrow": 14, "max_": [14, 93, 98, 99, 118, 122, 148, 152, 155, 157, 162], "thu": [14, 66, 119, 135, 157], "automat": [14, 88, 90, 104, 106, 109, 111, 119, 122, 137, 145], "handsid": 14, "varepsilon": [14, 135, 155, 158], "interest": [14, 152, 157], "tutori": [14, 41, 66, 91, 106, 117, 119, 120, 121, 122, 131, 133, 135, 137, 149, 155, 157, 158, 159, 162], "show": [14, 64, 117, 119, 122, 135, 146, 148, 150, 151, 152, 158], "how": [14, 88, 89, 90, 103, 106, 117, 119, 120, 121, 122, 123, 131, 133, 135, 137, 142, 143, 146, 148, 149, 150, 151, 152, 158, 159, 162], "simpl": [14, 18, 150, 152], "bender": [14, 112, 158], "decomposit": [14, 41, 66, 104, 112, 133, 135, 137, 152, 158], "with_separation_optim": 152, "optimizerfactori": [123, 138, 149], "t_optimizer_factori": [], "t_separation_problem": [], "numer": [65, 111, 151], "namespac": [106, 108, 110, 142, 151], "static": [], "is_pos_inf": [], "is_neg_inf": [], "is_inf": [], "equal": [131, 135], "t_a": [], "t_b": [], "t_toler": [], "ctrtype": [17, 61], "t_type": [], "relative_gap": [], "t_lb": [], "t_ub": [], "absolute_gap": [], "is_zero": [], "decltyp": [], "declval": [], "t_expr": [], "is_integ": [], "round": [], "t_n_digit": [], "constexpr": [], "inf": [71, 119, 121, 139, 145, 152, 162], "1e20": [], "store": [94, 98, 111, 117, 119, 131, 143, 150, 151, 159, 162], "high": [17, 61, 97, 106, 114, 117, 119, 120, 122, 151], "It": [18, 71, 95, 104, 106, 107, 111, 133, 135, 138, 140, 141, 144, 145, 148, 150, 152, 155, 157, 162], "mip": [114, 121, 123, 138, 152, 162], "alwai": [135, 150, 151, 152, 157], "taken": [91, 92, 93, 101, 121, 152, 162], "account": [118, 153], "apart": [], "sparsiti": [], "chang": [19, 107, 113, 115, 145], "local": [88, 90, 106, 107, 108, 111, 115, 155, 158], "rather": 162, "global": [66, 102, 108, 110, 131], "8": [91, 93, 112], "10": [92, 93, 102, 106, 111, 112, 119, 121, 135, 145, 150, 151], "recommend": [121, 131, 137, 144, 148, 152, 162], "rang": [106, 131, 148, 151, 152, 153, 154, 162], "data": [94, 98, 112, 131, 138, 143, 159, 162], "save": [], "spars": [], "manner": [], "instanc": [19, 66, 88, 90, 104, 106, 110, 111, 112, 118, 119, 121, 122, 123, 131, 135, 137, 139, 141, 142, 143, 144, 145, 146, 150, 151, 158, 162], "close": [], "zero": 104, "ignor": 162, "primal": [112, 115, 145, 148, 151], "point": [17, 61, 111, 117, 119, 120, 122, 151, 152, 155, 157, 158], "digit": [], "miprelativegap": [], "infti": [145, 155, 157, 158], "declar": 135, "compar": 135, "comput": [103, 104, 107, 109, 110, 112, 115, 135, 157], "relativegap": [], "frac": 102, "ub": [102, 155, 158], "lb": [102, 155, 158], "mipabsolutegap": [], "absolutegap": [], "integ": [18, 28, 92, 96, 106, 112, 113, 114, 118, 119, 121, 131, 133, 135, 143, 145, 149, 152], "10e": [], "9": [112, 135], "recogn": [], "closest": 135, "closer": [], "6": [91, 112, 115, 119, 135], "2": [18, 71, 91, 92, 93, 101, 104, 106, 110, 112, 119, 121, 122, 131, 135, 139, 141, 144, 145, 150, 151, 152, 155, 157, 158, 162], "character": [], "satisfact": 162, "larger": 154, "amount": 98, "reduc": [115, 135, 145, 155], "cost": [94, 95, 99, 101, 115, 131, 145, 153, 162], "annot": [17, 61, 119, 121, 131, 135, 137], "ctr": [17, 61, 64, 66, 131, 139, 141, 143, 145, 151, 162], "env": [17, 61, 66, 106, 108, 110, 117, 119, 121, 131, 139, 140, 143, 144, 145, 146, 148, 150, 151, 152, 162], "affexpr": [17, 61, 64, 139], "linexpr": [17, 61, 64, 139, 145], "qctr": [17, 61, 139], "quadexpr": [17, 61, 64, 121], "tempqctr": [17, 61], "tempvar": [17, 61, 145], "var": [17, 61, 64, 139, 141, 143, 146, 148, 151, 162], "mosek": [17, 61, 103, 106, 110, 114, 148], "coin": [17, 61, 97, 106, 114, 118, 123], "osi": [17, 61, 106, 111, 114], "cplex": [17, 61, 106, 111, 114], "xpress": [17, 61], "cbc": [17, 61, 111], "branchandboundcallbackfactori": [17, 19, 61], "rule": [17, 18, 28, 61, 97, 112, 135, 137, 150], "select": [17, 18, 28, 61, 94, 98, 99, 101, 133, 135, 137, 150, 162], "plane": [17, 61], "price": [17, 66, 97, 106, 112, 123, 131, 135, 138], "dantzigwolf": [17, 47, 61, 131, 135, 137], "artificialcost": [17, 61], "dantzigwolfedecomposit": [17, 43, 61, 131, 135, 137], "farkaspr": [17, 61], "integermast": [17, 61], "stabil": [17, 61, 112, 155, 156], "penalti": [17, 97], "altern": [17, 144, 145], "direct": [17, 110, 145], "padm": [17, 61], "degre": 18, "freedom": 18, "familiar": [18, 121, 151, 162], "pleas": [18, 19, 88, 89, 107, 109, 110, 111, 120, 122, 135, 150, 151, 159], "refer": [18, 88, 89, 106, 108, 109, 111, 117, 120, 122, 131, 133, 135, 141, 146, 148, 150, 151, 152, 155, 157, 159], "page": [18, 41, 87, 88, 90, 108, 109, 110, 111, 112, 123, 142, 148, 150, 151, 152, 157], "here": [18, 19, 89, 93, 101, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 131, 135, 137, 138, 139, 143, 144, 145, 150, 151, 152, 154, 155, 157, 159, 162], "where": [18, 92, 93, 104, 107, 111, 118, 122, 135, 139, 148, 152, 154, 158, 162], "done": [18, 19, 64, 90, 104, 110, 111, 117, 119, 120, 121, 122, 131, 135, 137, 139, 143, 145, 148, 151, 152, 157, 158, 162], "accord": 18, "while": [18, 94, 95, 98, 99, 101, 119, 131, 133, 135, 138, 143, 148, 150, 152, 154, 155, 162], "most": [18, 19, 122, 133, 135, 137, 139, 145, 150, 157, 159, 162], "incorpor": [18, 155, 157], "sub": [18, 106, 109, 110, 115, 131, 135, 148, 150, 159], "depth": [18, 135], "with_node_optim": [18, 19, 137, 150], "continuousrelax": [18, 19, 131, 135, 137, 150], "with_branching_rul": [18, 19, 135, 137, 150], "mostinfeas": [18, 19, 39, 137, 150], "with_node_selection_rul": [18, 19, 137, 150], "bestbound": [18, 32, 135, 137, 150], "with_subtree_depth": 18, "nodet": [], "defaultnodeinfo": [], "inform": [19, 66, 89, 107, 109, 112, 120, 131, 139, 145, 146, 151], "strongli": 153, "advis": [107, 140, 153], "nodevarinfo": 43, "order": [94, 99, 101, 104, 111, 118, 119, 162], "your": [90, 106, 107, 109, 110, 120, 121, 122, 123, 128, 129, 130, 132, 134, 136, 137, 138, 140, 149, 152, 157, 159, 162], "own": [106, 121, 123, 138, 149, 152, 157, 162], "type": [64, 66, 115, 121, 131, 135, 139, 141, 146, 152, 153, 162], "returnt": [], "only_if_has_strategi": [], "typenam": [], "pair": [117, 141], "second_typ": [], "exploit": [106, 133], "sfina": [], "nodeinfot": [], "make": [19, 88, 90, 99, 104, 106, 107, 111, 114, 135, 139, 152, 153], "depthfirst": [19, 32], "actual": [111, 135, 139, 141, 148], "t_rh": [], "constructor": [131, 139, 143, 144, 145, 148], "t_node_optim": [], "set_node_optim": [], "branchingrulefactori": [], "t_branching_rul": [], "branchingrulefactoryt": [], "nest": [148, 150], "avoid": [111, 135], "repeat": [145, 157], "contain": [98, 104, 111, 112, 117, 131, 133, 141, 162], "nodeselectionrulefactori": [], "t_node_select": [], "with_node_select": [], "nodeselectionrulefactoryt": [], "t_node_selection_rul": [], "t_depth": [], "children": [], "take": [66, 98, 118, 135, 139, 145, 150, 151, 153, 158], "form": [118, 131, 138, 143, 152, 157], "root": [111, 115], "continu": [71, 96, 113, 119, 131, 137, 138, 139, 145, 146, 148, 150, 151, 152, 162], "strictli": [148, 152], "along": [], "with_logg": [], "log": [115, 150], "t_log_factori": [], "t_callback": [], "multipl": [64, 115, 118], "rst": [], "independ": [19, 95, 145], "convert": 104, "separation_model": [], "my_cut": [], "run": [19, 89, 90, 107, 111, 137, 150], "sure": [19, 106, 114, 135, 162], "what": [19, 89, 103, 120, 122, 143, 150, 152, 159, 162], "try": [19, 107, 115, 146], "do": [19, 56, 66, 88, 107, 108, 111, 112, 119, 120, 122, 131, 135, 143, 145, 150, 151, 155, 159, 162], "pre": 19, "g": [19, 66, 90, 106, 107, 109, 110, 118, 122, 131, 135, 146, 152, 153, 155, 157, 158, 162], "advantag": [19, 117], "standard": [19, 106, 119, 135, 142, 143], "li": 19, "regard": [19, 113, 115, 116, 131], "correspond": [19, 95, 113, 115, 116, 119, 131, 139, 145, 151, 152], "nodeload": 19, "nodeinfo": 19, "id": [19, 131], "nodiscard": 19, "By": [19, 88, 90, 107, 110, 111, 119, 135, 153, 155, 158, 159, 162], "wish": [19, 157], "version": [19, 88, 99, 101, 106, 108, 110, 133, 139, 140, 145, 157, 162], "updat": [19, 95, 96, 113, 115, 145, 150, 155, 158], "manual": 19, "interfac": [19, 56, 71, 104, 106, 107, 114, 120, 146, 152], "obtain": [19, 119, 131, 139, 143, 145, 155, 157, 162], "advanced_interfac": 19, "callbackasbranchandboundcallback": [], "knapsackcov": [22, 148], "reducedcostfix": [], "util": [], "exportbranchandboundtreetocsv": [], "initi": [155, 158], "veri": [64, 120], "log_after_termin": [], "add_local_variable_branch": [], "t_var": [], "t_info": [], "incumb": 148, "submit_bound": [], "t_bound": [], "proven": [], "sideeffectregistri": [], "side_effect_registri": [], "side": [113, 115, 139], "effect": [90, 133, 135], "registri": [], "with_lift": [], "with_tree_node_cut": [], "with_max_pass_root_nod": [], "with_max_cuts_factor": [], "t_use_lift": [], "t_apply_to_tree_nod": [], "t_max_pass_root_nod": [], "t_max_cuts_factor": [], "with_optim": [], "t_neighbourhood_s": [], "t_minimum_ratio_of_integer_variables_to_fix": [], "t_minimum_ratio_of_variables_to_fix": [], "t_parent": [], "nodeselectionrul": [], "estim": [28, 135, 153], "wa": [28, 108, 115, 135, 150, 155, 157], "introduc": [28, 96, 101, 119, 133, 142, 157, 162], "j": [28, 94, 95, 96, 98, 99, 101, 104, 106, 112, 131, 135, 138, 143, 145, 151, 154, 162], "h": [28, 65, 90, 108, 110, 111, 112, 131, 142], "forrest": [28, 112], "p": [28, 112, 148, 152, 162], "hirst": [28, 112], "tomlin": [28, 112], "1974": [28, 112], "practic": [28, 112, 133, 135], "mix": [28, 92, 96, 106, 112, 113, 114, 118, 119, 131, 149, 152], "program": [28, 92, 95, 112, 119, 131, 133, 140, 152], "umpir": [28, 112], "manag": [28, 90, 107, 110, 112, 140, 152], "scienc": [28, 112], "20": [28, 92, 112, 121, 135], "736": [28, 112], "773": [28, 112], "bestestim": 32, "breadthfirst": 32, "worstbound": 32, "variablebranch": [], "iteratort": [], "t_begin": [], "t_end": [], "branchingrul": [], "with_max_n_vari": 135, "t_n_variabl": [], "with_node_scoring_funct": [], "nodescorefunct": 135, "t_score_funct": [], "add_phas": 135, "strongbranchingphasetyp": [], "t_phase": [], "t_max_n_vari": [], "t_max_depth": [], "with_se": [], "t_seed": [], "firstinfeasiblefound": 39, "leastinfeas": 39, "pseudocost": 39, "strongbranch": [39, 135], "uniformlyrandom": 39, "infeasibilitystrategyfactori": [], "with_max_updates_before_phase_i": [], "with_update_factor": [], "with_initial_cost": [], "t_initial_cost": [], "t_update_factor": [], "t_max_updates_before_phase_i": [], "solutionstatu": [], "statu": [113, 115, 151], "solutionreason": [], "document": [41, 112], "dantzig": [41, 95, 112, 123, 133, 137, 138], "wolf": [41, 95, 112, 123, 133, 137, 138], "t_decomposit": [], "with_master_optim": [131, 135, 137, 158, 159], "with_default_sub_problem_spec": [131, 135, 137], "subproblem": [95, 96, 131, 133, 135, 137], "t_sub_problem": [], "with_sub_problem_spec": [], "t_id": [], "with_infeasibility_strategi": [], "t_strategi": [], "with_hard_branch": [], "with_infeasible_columns_remov": [], "with_max_parallel_sub_problem": [], "t_n_sub_problem": [], "t_logger": [], "with_dual_price_smoothing_stabil": [], "dualpricesmoothingstabil": [], "t_stabil": [], "get_sub_problem_spec": [], "t_optim": [], "with_integer_column": [], "t_iteration_limit": [], "with_max_depth": [], "with_frequ": [], "t_frequenc": [], "set_integer_column": [], "set_time_limit": [], "set_iteration_limit": [], "set_max_depth": [], "set_frequ": [], "formul": [91, 92, 98, 99, 101, 151, 154, 155], "t_formul": [], "t_master_optimizer_factori": [], "t_max_parallel_pr": [], "t_use_hard_branch": [], "t_remove_infeasible_column": [], "vector": [101, 111, 148, 152, 157, 162], "t_sub_problem_specif": [], "option": [89, 107, 110, 120, 155, 158], "t_default_sub_problem_spec": [], "t_logger_factori": [], "string": [], "get_statu": [131, 137, 151], "get_reason": 151, "get_best_obj": [144, 148, 151], "get_best_bound": [144, 151], "get_relative_gap": 151, "get_absolute_gap": 151, "parent": 148, "get_param_log": [], "set_param_log": [], "get_param_time_limit": [], "set_param_time_limit": [], "get_param_thread_limit": [], "set_param_thread": [], "t_thread": [], "get_param_best_obj_stop": [], "set_param_best_obj_stop": [], "t_best_obj_stop": [], "get_param_best_bound_stop": [], "set_param_best_bound_stop": [], "get_tol_mip_relative_gap": [], "set_tol_mip_relative_gap": [], "t_tol_mip_relative_gap": [], "get_tol_mip_absolute_gap": [], "set_tol_mip_absolute_gap": [], "t_mip_tol_absolute_gap": [], "get_tol_feas": [], "set_tol_feas": [], "t_tol_feas": [], "get_tol_optim": [], "set_tol_optim": [], "t_tol_optim": [], "get_tol_integ": [], "set_tol_integ": [], "t_tol_integ": [], "get_param_iteration_limit": [], "set_param_iteration_limit": [], "set_param_presolv": [], "get_param_infeasible_or_unbounded_info": [], "set_param_infeasible_or_unbounded_info": [], "get_remaining_tim": [], "is_termin": [], "columngener": [], "t_use_farkas_for_infeas": [], "set_best_bound_stop": [], "t_initial_factor": [], "update_stability_cent": [], "dualpoint": [], "t_master_du": [], "compute_smoothed_dual_solut": [], "neam": 47, "wentg": 47, "read_from_fil": [117, 143], "t_env": [], "t_filenam": [], "with_lazy_cut": 152, "with_max_n_solution_in_pool": [], "with_continuous_relaxation_onli": [], "with_external_param": [], "grb_intparam": [], "t_param": [], "grb_doubleparam": [], "with_external_paramet": [], "optimizerwithlazyupd": [], "t_continuous_relax": [], "t_ctr": [], "grbvar": 146, "grbconstr": [], "grbqconstr": [], "grbenv": [], "grbmodel": [], "t_thread_limit": [], "t_ptr_to_callback": [], "set_lazy_cut": [], "set_max_n_solution_in_pool": [], "set_param": [], "gurobicallbacki": [], "link": [56, 107, 110, 113, 120, 150], "librari": [56, 107, 108, 111, 112, 117, 120, 150, 152], "open": [56, 94, 99, 101, 162], "ani": [56, 106, 107, 108, 120, 122, 135, 139, 141, 145, 148, 157, 162], "At": [56, 158], "moment": 56, "properli": [56, 114], "test": [56, 105, 106, 113, 114, 115, 116], "osicplex": 56, "directli": [56, 139, 145, 150], "osicpxsolverinterfac": 56, "same": [56, 111, 113, 115, 120, 121, 122, 131, 140, 145, 150, 162], "though": [56, 108, 131, 135, 152, 157], "dedic": [56, 107, 110, 148, 152, 157], "symphoni": [56, 106, 111], "clp": [56, 111, 114], "seem": 56, "fulli": 56, "fulfil": 56, "requir": [56, 108, 117, 135, 138, 143, 145, 152, 153, 155, 158], "stabl": [56, 89, 103, 106], "usag": 56, "osicbc": 56, "osiclp": 56, "osisymphoni": 56, "osisolverinterfac": [], "t_solver_interfac": [], "create_osi_solver_interfac": [], "one": [66, 93, 95, 101, 104, 106, 108, 118, 119, 121, 131, 135, 137, 139, 140, 141, 144, 145, 150, 152, 155, 157, 162], "default_valu": 66, "my_annot": 66, "thei": [66, 114, 131, 139, 145, 148, 152, 153, 155, 157, 162], "relat": [66, 104, 111, 131, 151], "therefor": [66, 107, 145, 152, 157], "anywher": 66, "code": [66, 88, 89, 119, 120, 121, 122, 135, 139, 140, 141, 143, 145, 146, 148, 150, 151, 158, 162], "my": [66, 107], "particular": [66, 88, 111, 120, 121, 122, 135, 146, 148, 159], "instruct": [66, 89], "design": [66, 106, 114, 135], "To": [66, 89, 90, 99, 102, 106, 107, 111, 118, 119, 120, 121, 122, 123, 131, 135, 142, 143, 144, 146, 148, 150, 159, 162], "learn": [66, 91], "our": [66, 89, 91, 106, 107, 110, 117, 121, 131, 135, 137, 143, 148, 150, 152], "valuet": [], "t_name": [], "argst": [], "t_arg": [], "uniqu": [], "within": [152, 153, 154], "environ": [88, 107, 111, 123, 131, 138, 142, 143, 145, 162], "has_default": [], "otherwis": [64, 104, 138, 157], "free": [], "memori": 151, "kept": [], "underli": [115, 117, 123, 135, 138, 148, 149, 152, 162], "make_with_default_valu": [], "ctrversion": [], "old": [], "repres": [71, 89, 120, 122, 141, 143, 145, 154], "anoth": [111, 119, 131, 135, 150], "approach": [119, 135, 157], "add_ctr": [106, 119, 121, 131, 139, 148, 150, 152, 162], "natur": [64, 106], "intermedi": 150, "temporari": [145, 150], "y": [91, 92, 93, 94, 99, 101, 118, 119, 121, 122, 139, 145, 152, 155, 157, 158, 159, 162], "t_temp_ctr": [], "t_constant": [], "hand": [106, 113, 115, 139], "index": [112, 115, 131, 135, 138, 139, 143, 145], "t_index": [], "is_in": [], "t_annot": [], "except": [64, 113, 115, 146, 150, 162], "thrown": [64, 104, 150], "pack": [], "construct": [87, 155, 162], "place": [], "n": [95, 96, 98, 104, 131, 138, 143, 148, 152, 158], "make_vector": [], "dim": [17, 61, 71, 106, 131, 139, 145, 148, 150, 151, 152, 162], "t_dim": [], "m": [91, 95, 96, 112, 119, 131, 138, 143, 154], "lessorequ": 139, "constraint_1_4": [], "dimens": 145, "recurs": [], "element": [], "death": 140, "live": [], "import": [138, 148, 162], "destroi": [], "lead": [152, 154, 157], "undefin": [], "eventu": [], "segment": [], "fault": [], "instanti": 145, "mani": [95, 106, 118, 150, 153, 157], "t_object": [], "queri": 144, "returnth": [], "keyt": [], "t_kei": [], "linear": [71, 92, 95, 98, 111, 112, 119, 131, 133, 135, 138, 144, 152], "constant": [64, 113, 115, 141, 152], "clear": [155, 157], "attribut": [139, 145], "express": [64, 71, 101, 104, 123, 138, 139, 142, 144, 152, 155, 162], "term": [71, 115, 141], "product": [71, 135], "scalar": 71, "3": [71, 91, 106, 108, 110, 112, 119, 135, 141, 150, 151, 152, 157, 158, 162], "x_0": [71, 104, 139, 141, 144, 152, 157, 158], "x_1": [71, 93, 139, 141, 144, 152], "add_var": [71, 106, 108, 110, 119, 121, 131, 139, 146, 148, 150, 151, 152, 162], "lin_expr": 71, "sparsevector": [], "map_t": [], "const_iter": [], "t_vector": [], "t_factor": [], "conditional_t": [], "is_arithmetic_v": [], "t_scalar": [], "size": [89, 135, 143, 145, 148, 158], "empti": 157, "has_index": [], "t_index1": [], "remov": [113, 115, 135], "reserv": [], "t_capac": 148, "cbegin": [], "cend": [], "merge_without_conflict": [], "t_vec": [], "mathemat": [106, 112, 118, 139, 141, 153], "enum": [62, 63, 85], "storag": [], "columnori": [], "rowori": [], "both": [135, 152, 157, 159], "t_storag": [], "vartyp": [17, 61], "t_obj": [], "t_column": [], "t_temp_var": [], "constiteratorforward": [], "t_lh": [], "add_qctr": [], "reserve_var": [], "t_size": [], "reserve_ctr": [], "reserve_qctr": [], "has_optim": [], "has_optimizer_factori": [], "optimizer_factori": [], "unus": 99, "add_vector": [], "objectivesens": [], "get_obj_sens": 144, "get_obj_expr": 144, "get_rhs_expr": [], "get_mat_coeff": [], "set_obj_sens": 144, "set_obj_expr": [106, 119, 121, 131, 144, 148, 150, 151, 152], "set_rhs_expr": [], "set_obj_const": [], "set_mat_coeff": [], "t_coeff": [], "get_qctr_by_index": [], "get_ctr_by_index": [], "get_var_by_index": [], "get_ctr_index": 139, "get_qctr_index": [], "tctr": [], "get_ctr_typ": 139, "get_ctr_rh": 139, "get_ctr_row": 139, "get_qctr_expr": [], "get_qctr_typ": 139, "get_ctr_dual": [139, 151], "get_ctr_farka": [139, 151], "set_ctr_rh": 139, "set_ctr_typ": 139, "set_ctr_row": 139, "t_row": [], "get_var_index": 145, "get_var_typ": 145, "get_var_lb": 145, "get_var_ub": 145, "get_var_prim": [131, 137, 145, 148, 151], "get_var_reduced_cost": 145, "get_var_rai": [145, 151], "get_var_column": 145, "get_var_obj": 145, "set_var_typ": 145, "set_var_lb": 145, "set_var_ub": 145, "set_var_obj": 145, "set_var_column": 145, "get_n_solut": [], "get_solution_index": [], "set_solution_index": [], "dump": [], "ostream": [], "t_o": [], "set_storag": [], "t_reset_minor_represent": [], "reset_minor_represent": [], "set_statu": [], "t_statu": [], "set_reason": [], "t_reason": [], "objective_valu": [], "set_objective_valu": [], "t_objective_valu": [], "has_objective_valu": [], "reset_objective_valu": [], "t_other": [], "qctrversion": [], "commutativepair": [], "t_key1": [], "t_key2": [], "affin": [97, 115], "has_quadrat": [], "empty_al": [], "clear_al": [], "indext": [], "built": [88, 89, 107, 108], "made": [117, 146, 153], "row": [64, 139, 154], "overload": [17, 61, 115], "between": [104, 139, 152, 155, 157], "equival": [97, 111, 121, 139, 145, 155, 157, 162], "desir": [110, 131], "move": 131, "assign": [97, 131, 133, 135, 137, 159], "lh": [], "set_lh": [], "rh": [], "set_rh": [], "set_typ": [], "expr": 141, "set_expr": [], "lower": [92, 113, 117, 118, 119, 122, 145], "upper": [92, 113, 118, 121, 122, 145, 155], "column": [64, 97, 99, 101, 106, 112, 113, 115, 123, 135, 137, 138, 145, 153, 157, 161, 162], "binari": [95, 98, 106, 108, 110, 119, 131, 145, 148, 150, 151, 152, 158, 162], "set_lb": [], "set_ub": [], "obj": 115, "set_obj": [], "varvers": [], "possibli": [96, 131], "x_1_4": [], "adm": [], "t_sub_problem_spec": [], "penaltyupd": [], "t_penalty_upd": [], "t_feasible_solution_statu": [], "t_plot_manag": [], "get_outer_loop_iteration_count": [], "get_inner_loop_iteration_count": [], "sub_problem_spec": [], "t_sub_problem_id": [], "iterationplot": [], "t_manag": [], "t_outer_loop_iter": [], "t_inner_loop_iter": [], "t_infeas": [], "t_penalized_constraint": [], "with_rescaling_threshold": [], "t_threshold": [], "with_penalty_upd": [], "with_feasible_solution_statu": [], "with_iteration_plot": [], "greaterorequ": 139, "indic": [111, 121, 131, 135], "influenc": 115, "modifi": 150, "occur": [148, 151], "about": [131, 139, 145, 148, 151], "invalidsolut": 148, "prunedsolut": [], "under": [87, 104, 153, 155, 162], "explain": [88, 90, 135], "machin": [88, 90, 115], "bunch": [88, 89], "other": [88, 89, 106, 110, 115, 117, 118, 120, 122, 131, 135, 148], "tool": [88, 89, 106, 111], "sphinx": 88, "python": 88, "rtd": 88, "theme": 88, "render": 88, "html": 88, "sitemap": 88, "extens": 88, "multi": 88, "languag": 88, "org": [88, 112], "copybutton": 88, "button": 88, "content": [88, 138], "breath": 88, "plugin": 88, "integr": [88, 89, 133, 137], "detail": [88, 117, 131, 133, 135, 139, 143, 145, 151, 157], "interact": [88, 114], "articl": 88, "sudo": [88, 90, 107], "apt": 88, "last": [88, 98, 162], "python3": 88, "pip3": 88, "cmake": [88, 90, 106, 107, 108, 109, 110], "doc": 88, "target": [88, 90, 107, 108, 110, 111], "websit": [88, 120], "command": [88, 90, 107], "catch2": [89, 90], "suffici": 89, "work": [64, 89, 105, 106, 110, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 147, 150, 158, 160], "grid": 89, "coverag": [89, 105], "singl": [17, 89, 91, 117, 118, 123, 153], "file": [65, 89, 90, 94, 98, 110, 111, 115, 117, 131, 162], "statement": 89, "respect": [89, 95, 121, 131, 141, 143, 145], "codecov": [89, 90], "framework": [90, 106, 133, 153], "told": 90, "look": [89, 90, 105, 106, 107, 110, 111, 135, 148, 152], "attempt": [90, 135], "download": [90, 106, 109, 110, 120], "github": [90, 107, 110, 112, 115], "repositori": [90, 111], "git": [90, 110], "http": [90, 110, 112], "com": [90, 110], "catchorg": 90, "cd": [90, 107, 111], "bbuild": 90, "dbuild_test": 90, "nor": 90, "tell": [90, 110, 111, 131], "build_test": 90, "ye": [90, 107, 110, 111, 120], "via": [90, 115], "gcov": 90, "shall": 90, "with_test_coverag": 90, "dwith_code_coverag": 90, "onc": [90, 106], "report": [90, 112, 113, 115, 116, 117], "info": [90, 115], "lcov": 90, "captur": [90, 153], "compil": [90, 107, 120], "push": 90, "action": [90, 115], "min_": [91, 92, 93, 94, 95, 96, 99, 101, 118, 119, 121, 122, 131, 138, 143, 152, 154, 155, 157, 158, 162], "5y": 91, "12": [91, 112, 117, 119], "ge": [91, 92, 93, 99, 101, 104, 118, 119, 121, 122, 135, 148, 152, 154, 155, 158, 162], "arrai": [91, 92, 121, 155], "rl": [91, 92, 121, 155], "displaystyl": [91, 92, 121, 155], "underset": [91, 92, 93, 121, 157], "arg": [91, 92, 93, 119, 121, 155], "min": [91, 92, 93, 118, 119, 121, 135, 155, 157, 158], "result": [91, 93, 146, 150, 151, 159], "nlp": 91, "big": [91, 119], "milp": [91, 93, 94, 97, 106, 138], "henri": [], "30": [92, 93, 106, 112, 115, 121, 135, 151], "08": [], "24": [], "includ": [108, 110, 111, 131, 142, 148], "iostream": [108, 110], "wrapper": [], "t_argc": [108, 110], "char": [108, 110], "t_argv": [108, 110], "kleinert": 112, "2021": 112, "convex": [104, 112], "phd": 112, "thesi": 112, "argmin": [], "high_point_relax": [119, 120, 121, 122], "follower_c1": [], "f1": [], "follower_c2": [], "f2": [], "follower_c3": [], "f3": [], "follower_c4": [], "f4": [], "prepar": 111, "set_lower_level_obj": [119, 121], "make_lower_level": [119, 121], "single_level": 119, "make_model": [119, 122], "could": [106, 119, 145, 146, 151], "with_single_level_optim": 119, "Or": [], "even": [108, 145], "save_prim": [120, 122, 151, 159], "mathbb": [92, 121, 135, 138, 143, 152, 157, 158, 162], "z_": [92, 121], "25": [92, 93, 115, 121], "leq": [92, 121, 148], "15": [92, 112, 121], "geq": [92, 121], "07": [], "02": 158, "moor": 112, "bard": 112, "1990": 112, "16": [93, 112, 122], "lp": [93, 97, 117, 119, 123, 128, 138, 143, 152], "6x_2": 93, "y_1": 93, "y_2": 93, "y_3": 93, "y_4": 93, "x_2": 93, "kkt": [2, 17, 93, 97, 106], "read": [93, 94, 98, 101, 110, 111, 115, 118, 119, 121, 122, 123, 131, 137, 162], "bar": [93, 99, 118, 122, 131, 154, 155, 158], "tild": [93, 122, 157], "17": [108, 110, 112, 115, 155, 157], "pessimisticasoptimist": 122, "scheme": [112, 135, 151], "bo": 112, "zeng": 112, "2025": [], "onlin": 112, "wp": [], "upload": [], "2015": [], "09": [], "5090": [], "pdf": [], "leader_c": [], "opt_model": 122, "opt_descript": 122, "big_m": 119, "1e4": 119, "with_big_m": 119, "capacit": 94, "flp": [94, 99, 101, 162], "v_1": [94, 99, 101, 162], "v_2": [94, 99, 101, 162], "goal": [94, 95, 98, 99, 101, 131, 154, 162], "subset": [94, 98, 99, 101, 133, 157, 162], "serv": [94, 99, 101, 162], "demand": [94, 99, 101, 153, 162], "minim": [94, 95, 99, 101, 108, 110, 118, 131, 135, 144, 154, 162], "f_i": [94, 99, 101, 162], "capac": [94, 95, 98, 99, 101, 106, 131, 148, 151, 152, 162], "q_i": [94, 99, 101, 162], "d_j": [94, 99, 101, 162], "unitari": [94, 99, 101, 162], "t_": [94, 99, 101, 162], "ij": [94, 95, 96, 99, 101, 104, 131, 145, 154, 162], "sum_": [94, 95, 96, 98, 99, 101, 104, 131, 148, 152, 154, 158, 162], "x_i": [94, 99, 101, 104, 148, 152, 158, 162], "y_": [94, 99, 101, 145, 162], "txt": [94, 98, 108, 110, 131, 162], "109": [], "131": [], "484": [], "169": [], "498": [], "103": [], "513": [], "7946": [], "41": 112, "8319": [], "150": [], "331": 112, "156": [], "535": [], "140": [], "651": [], "128": [], "462": [], "68": [], "8231": [], "66": 112, "0825": [], "40097": [], "33": [112, 115], "6793": [], "123": [], "19": [], "113": [], "974": [], "118": [], "503": [], "152": [], "262": [], "27": [], "5682": [], "125": [], "587": [], "36": [], "1992": [], "60365": [], "0339": [], "1965": [], "4686": [], "35": [], "8237": [], "14": [106, 112, 151], "8866": [], "75196": [], "7471": [], "76135": [], "0892": [], "2641": [], "11": 112, "3815": [], "96618": [], "32": [], "1548": [], "13": [112, 133], "7501": [], "631599": [], "26": [], "9407": [], "4762": [], "0098": [], "674345": [], "377274": [], "60077": [], "725902": [], "347025": [], "648906": [], "635155": [], "607522": [], "333549": [], "300607": [], "416598": [], "628605": [], "753687": [], "644812": [], "405533": [], "152511": [], "424802": [], "261078": [], "50283": [], "403443": [], "79483": [], "0798539": [], "347963": [], "756363": [], "654002": [], "484362": [], "663717": [], "820894": [], "220568": [], "548021": [], "218845": [], "779403": [], "804299": [], "507375": [], "592223": [], "172742": [], "63654": [], "0894973": [], "819295": [], "712606": [], "988408": [], "473435": [], "741449": [], "02582": [], "420089": [], "859221": [], "932609": [], "913111": [], "206479": [], "606641": [], "592807": [], "943148": [], "05883": [], "871605": [], "719628": [], "296455": [], "735305": [], "405338": [], "70923": [], "472351": [], "801213": [], "930165": [], "12413": [], "970236": [], "281743": [], "11036": [], "911725": [], "579372": [], "840547": [], "467774": [], "937797": [], "721997": [], "961574": [], "08599": [], "57822": [], "70739": [], "533045": [], "812734": [], "148052": [], "238144": [], "033511": [], "742563": [], "729705": [], "21527": [], "807152": [], "579068": [], "209073": [], "232984": [], "91811": [], "384516": [], "620859": [], "0675881": [], "187979": [], "528276": [], "248045": [], "699975": [], "263439": [], "677736": [], "632054": [], "831136": [], "379508": [], "394834": [], "402656": [], "338167": [], "703938": [], "315728": [], "243857": [], "475284": [], "607753": [], "336413": [], "270847": [], "38184": [], "381389": [], "285442": [], "271919": [], "405371": [], "331478": [], "346229": [], "681973": [], "748633": [], "01954": [], "586318": [], "852622": [], "08059": [], "340762": [], "955962": [], "989606": [], "914744": [], "331927": [], "616543": [], "693984": [], "966318": [], "10785": [], "963435": [], "742256": [], "385068": [], "74801": [], "505968": [], "654321": [], "385256": [], "124851": [], "647767": [], "637432": [], "198938": [], "766693": [], "495492": [], "15157": [], "278676": [], "831333": [], "339767": [], "525301": [], "137635": [], "200255": [], "446836": [], "203461": [], "614955": [], "238989": [], "585824": [], "629149": [], "796432": [], "822042": [], "611747": [], "850139": [], "920143": [], "113758": [], "898665": [], "836445": [], "683577": [], "462689": [], "406345": [], "66767": [], "759121": [], "93636": [], "891583": [], "542633": [], "376275": [], "534339": [], "501362": [], "400407": [], "172095": [], "728693": [], "27883": [], "523355": [], "749647": [], "439242": [], "602651": [], "655937": [], "692852": [], "235195": [], "391798": [], "348472": [], "692708": [], "785082": [], "607712": [], "47688": [], "0436219": [], "506139": [], "16976": [], "61561": [], "497567": [], "On": [94, 123], "line": [94, 98, 137], "specifi": [94, 107, 110, 111, 121, 131, 135, 139, 144, 145, 151, 152, 153, 154, 157, 159], "final": [94, 96, 98, 121, 131, 135, 148, 152, 159, 162], "06": [], "04": 112, "23": 110, "flp_instanc": [], "read_instance_1991_cornuejols_et_": [], "n_custom": 162, "n_facil": 162, "idol_sum": [106, 131, 148, 151, 152, 162], "fixed_cost": 162, "per_unit_transportation_cost": 162, "backend": [], "agent": [95, 131], "job": [95, 131], "exactli": [95, 131, 158], "wai": [64, 95, 106, 109, 110, 114, 119, 121, 131, 139, 143, 145, 152, 157, 162], "dotsc": [95, 96, 98, 131, 138, 143, 154, 155, 157, 158], "c_i": [95, 96, 131], "resourc": [95, 131, 153], "consumpt": [95, 131], "r_": [95, 96, 131], "c_": [95, 96, 131], "x_": [95, 96, 104, 131], "break": [95, 118], "down": 95, "coordin": 95, "handl": [95, 119, 133, 137, 153], "individu": 95, "respons": [95, 150, 162], "ensur": [95, 153, 154, 157, 162], "maintain": 95, "overal": [95, 150], "03": [], "gap_inst": 131, "read_inst": 131, "bap": 131, "n_agent": 131, "n_job": 131, "masterid": [121, 131, 162], "x_ij": 131, "knapsack": [97, 106, 111, 131, 150, 151], "resource_consumpt": 131, "capacity_": 131, "to_str": 131, "th": [], "assignment_": 131, "column_gener": [106, 131, 135, 137], "add_optim": [131, 135, 137], "with_column_pool_clean_up": [], "1500": [], "75": 115, "with_frequency_in_second": [], "00000001": [], "branch_and_bound": [106, 135, 137, 150], "with_node_log": [], "branch_and_pric": [106, 135], "alreadi": [96, 108, 120, 122, 137, 149, 157, 159], "studi": [96, 112, 118], "rho_j": 96, "penal": 96, "throughout": 96, "enforc": [96, 157], "That": [96, 106, 107, 131, 137, 152, 162], "penaltymethod": [], "initial_penalty_paramet": [], "1e2": [], "With": 119, "penalty_method": [], "1e3": [], "with_osi_interfac": [], "facil": 97, "locat": [97, 131], "combin": [97, 106, 112, 120, 133, 135, 137], "optimist": [97, 106, 118, 121, 123], "reformul": [17, 97, 101, 106, 118, 123, 133, 138, 152], "pessimist": [97, 106, 112, 118, 123], "determinist": [97, 99, 159], "decis": [97, 106, 118, 131, 135, 138, 139, 143, 144, 145, 153, 154, 157, 158], "two": [97, 102, 104, 109, 112, 117, 118, 120, 122, 123, 135, 137, 139, 145, 148, 152, 153, 157, 159], "stage": [97, 107, 112, 123, 153, 157, 158, 159], "disrupt": 97, "item": [98, 148, 152], "put": [98, 157], "weight": [98, 106, 148, 151, 152], "space": [98, 131, 133, 151, 152], "profit": [98, 106, 151, 152], "maxim": [98, 144, 148, 150, 151, 152], "exceed": 98, "let": [98, 107, 109, 110, 117, 119, 122, 131, 135, 142, 149, 150, 151, 155, 157, 158, 162], "w_j": 98, "p_j": 98, "x_j": [98, 104, 135, 138, 143, 154], "40": [106, 115, 151], "50": [106, 115, 135, 151], "100": [105, 106, 115, 151], "95": [106, 151], "98": [106, 151], "third": 98, "kp_instanc": [], "kp": [], "n_item": [106, 148, 151, 152], "random": 99, "gamma": [99, 101, 162], "robust": [99, 106, 112, 114, 157, 158, 159], "xi_i": 99, "approxim": [99, 135], "restrict": [99, 133, 139, 150, 155, 158], "adjust": [99, 106, 112, 123, 153], "uncertain": [99, 101, 153, 154, 159, 162], "28": [], "affinedecisionrul": [], "adr": [], "uncertainti": [101, 112, 153, 154, 155, 157, 159], "uncertainty_set": [158, 159, 162], "set_uncertain_rh": [], "y_ij": [], "xi_j": [101, 162], "set_stag": 162, "adr_result": [], "view": [], "with_deterministic_optim": [], "variant": [101, 162], "unknown": [101, 162], "worst": [101, 118, 153, 154, 159], "scenario": [101, 105, 153, 157, 159], "u": [101, 107, 112, 122, 131, 142, 150, 151, 153, 154], "v": [101, 152, 155, 158], "v_j": 101, "y_j": 101, "set_uncertain_mat_coeff": [], "set_uncertain_obj": [], "deterministic_model": [], "increas": [155, 158, 162], "realiz": [153, 154, 162], "r": [112, 135, 152, 155, 157, 158, 162], "why": [103, 139], "eigen": 103, "qp": [104, 111], "qcqp": 103, "base": [104, 112, 123, 128, 133, 135, 138, 152, 162], "quadrat": [104, 144], "a_": [104, 138, 143, 154], "k": [104, 135, 145, 155, 157, 158], "q_": 104, "jk": 104, "ix_jx_k": 104, "b_i": [104, 138, 143, 154], "conic": 104, "textbf": 104, "fx": 104, "mathcal": 104, "q": [104, 138, 143], "cone": 104, "f": [104, 112, 118, 119, 122, 155, 157, 158], "matrix": [104, 115, 133], "convers": 104, "written": [104, 157], "task": [104, 131, 135, 137], "matric": [104, 111], "l": [104, 112, 135, 157], "d": [104, 107, 112, 119, 138, 143], "diagon": 104, "neg": 104, "execept": 104, "lvert": 104, "rvert_2": 104, "sqrt": 104, "replac": [104, 106, 119, 135], "henc": [104, 106, 119, 137, 148, 162], "iff": 104, "_r": 104, "rotat": 104, "entri": 104, "sai": [104, 119, 138, 157], "n_": [104, 157], "assumpt": [104, 157, 159], "warn": 104, "enlight": 104, "expect": [104, 105, 114, 131], "nbsp": 106, "instal": [106, 108, 111, 120, 150], "guidelin": [106, 108, 109, 150], "complex": [106, 150], "help": 106, "philosophi": 106, "behind": [106, 110], "interoper": 106, "eas": 106, "seamlessli": [106, 120], "varieti": [105, 106], "tackl": 106, "kind": 106, "structur": [106, 133, 135], "scale": [106, 112, 133], "bilevel": [106, 112, 114, 119, 158, 159], "strong": [106, 123, 133, 138], "dualiti": [106, 152], "easili": [106, 117, 122, 137, 139], "techniqu": [106, 112, 119, 133, 135, 158], "dualiz": 106, "And": [106, 145], "Be": 106, "fast": 106, "easiest": [106, 109, 110, 143], "think": 106, "latest": [106, 110], "folder": [106, 107, 109, 110, 111], "realli": 106, "mater": 106, "befor": [106, 107, 131, 135], "friendli": 106, "peopl": 106, "fact": [106, 152, 155], "well": [106, 111, 137, 152, 153], "engin": 106, "softwar": [106, 112], "enhanc": 106, "aim": [], "still": [108, 155, 162], "favourit": 106, "miqp": 106, "miqcqp": 106, "unifi": [], "support": [106, 144, 152], "compat": 106, "api": 106, "faq": 106, "benchmark": [106, 112], "develop": [106, 111, 155], "thought": [107, 158], "who": 107, "usr": [107, 109, 111], "lib": [107, 109, 111], "simpli": [107, 119, 131, 135, 137, 155], "opt": 107, "system": [107, 115, 120, 139, 153], "classic": [107, 110, 118, 121, 152, 154, 157, 162], "mkdir": 107, "without": [107, 110, 148, 155, 158], "caus": [107, 150], "your_cmake_opt": 107, "your_valu": 107, "list": [107, 109, 110, 113, 115, 116, 131, 139, 144, 145, 151], "complet": [107, 109, 110, 131, 157, 158, 159], "duse_gurobi": [107, 111], "gurobi_hom": [107, 111], "correctli": [105, 107], "offici": [107, 111], "path": [107, 111, 143], "gurobi_dir": [107, 111], "dgurobi_dir": [107, 111], "dir": [107, 111], "readi": [107, 131, 152], "encount": [107, 151], "error": [107, 146, 153], "hesit": 107, "contact": 107, "superus": 107, "cmake_install_prefix": 107, "destin": 107, "your_other_cmake_opt": 107, "makefil": 108, "pure": 108, "gcc": 108, "clang": 108, "cmakelist": [108, 110], "cmake_minimum_requir": [108, 110], "22": 108, "my_project": [108, 110], "cmake_cxx_standard": [108, 110], "add_execut": [108, 110], "my_target": [108, 110], "cpp": [108, 110], "find_packag": 108, "target_link_librari": [108, 110], "guid": [109, 110, 144], "There": [109, 118, 135, 139, 145, 153], "easi": [109, 148], "No": [109, 151], "matter": [109, 152], "choos": [109, 118, 135], "accordingli": [109, 145, 150], "particularli": [109, 133], "fetchcontent_": 110, "fetchcont": 110, "use_gurobi": [110, 111], "fetchcontent_declar": 110, "git_repositori": 110, "hlefebvr": 110, "git_tag": 110, "fetchcontent_makeavail": 110, "normal": 110, "howev": [110, 117, 119, 122, 135, 148, 152, 155, 157], "explicitli": [110, 139, 145, 152, 153, 155, 157], "v0": 110, "alpha": 110, "As": [110, 131, 137, 139, 148, 150, 151, 152], "abov": [110, 135], "cours": [110, 120], "my_opt": 110, "my_valu": 110, "configur": 111, "achiev": 111, "use_mosek": 111, "mosek_hom": 111, "mosek_dir": 111, "bin": 111, "home": [], "my_usernam": [], "platform": 111, "linux64x86": 111, "duse_mosek": 111, "dmosek_dir": 111, "socp": 111, "use_glpk": 111, "glpk_home": 111, "glpk_dir": 111, "duse_glpk": 111, "dglpk_dir": 111, "use_high": 111, "highs_dir": 111, "duse_high": 111, "dhighs_dir": 111, "build_exampl": 111, "dbuild_exampl": 111, "example_knapsack": 111, "intern": [111, 155], "unord": 111, "unfortun": [111, 135], "choic": [111, 154], "come": [111, 123], "relev": 111, "header": [111, 131], "robin_hood": 111, "hpp": 111, "robinhood_dir": 111, "togeth": [111, 115, 137, 141, 150], "use_robinhood": 111, "robinhood_hom": 111, "duse_robinhood": 111, "drobinhood_dir": 111, "algebra": 111, "sinc": [111, 145, 148, 150, 155, 157, 162], "eigen_dir": 111, "use_eigen": 111, "duse_eigen": 111, "deigen_dir": 111, "literatur": [112, 118, 135], "tobia": 112, "achterberg": 112, "thorsten": 112, "koch": 112, "alexand": 112, "martin": 112, "revisit": 112, "research": 112, "letter": 112, "42": 112, "54": 112, "2005": 112, "doi": 112, "1016": 112, "orl": 112, "2004": 112, "002": 112, "josett": 112, "ayoub": 112, "michael": 112, "poss": 112, "subject": [112, 131, 152], "polytop": 112, "219": 112, "239": 112, "2016": [112, 152], "1007": 112, "s10287": 112, "016": 112, "0249": 112, "daniel": 112, "baena": 112, "jordi": 112, "castro": 112, "antonio": 112, "frangioni": 112, "combinatori": 112, "applic": [112, 114, 118, 152, 153, 158], "privaci": 112, "7": 112, "3051": 112, "3068": 112, "2020": 112, "1287": 112, "mnsc": 112, "2019": 112, "3341": 112, "timo": 112, "berthold": 112, "technisch": 112, "universit": 112, "\u00e4": 112, "berlin": 112, "2006": 112, "georg": 112, "b": [112, 119], "philip": 112, "econometrica": 112, "29": 112, "767": 112, "1961": 112, "2307": 112, "1911818": 112, "elizabeth": 112, "dolan": 112, "jorg": 112, "mor": 112, "\u00e9": 112, "profil": 112, "91": 112, "201": 112, "213": 112, "2002": 112, "s101070100263": 112, "thoma": 112, "universit\u00e4t": 112, "trier": 112, "url": 112, "opus4": 112, "kobv": 112, "de": [112, 141], "trr154": 112, "frontdoor": 112, "docid": 112, "383": 112, "linderoth": 112, "w": [112, 148, 152], "savelsbergh": 112, "journal": 112, "173": 112, "187": 112, "1999": 112, "ijoc": 112, "jame": 112, "jonathan": 112, "38": 112, "911": 112, "921": 112, "opr": 112, "pessoa": 112, "sadykov": 112, "uchoa": 112, "vanderbeck": 112, "autom": 112, "339": 112, "360": 112, "2018": 112, "2017": 112, "0784": 112, "johann": 112, "th\u00fcrauf": 112, "ivana": 112, "ljubi\u0107": 112, "ted": 112, "ralph": 112, "schmidt": 112, "bobilib": [112, 118, 123], "technic": 112, "quantagonia": 112, "essec": 112, "busi": 112, "school": [112, 152], "lehigh": 112, "2024": 112, "27063": 112, "eduardo": 112, "artur": 112, "lorenza": 112, "moreno": 112, "caderno": 112, "logi": 112, "uff": 112, "universidad": 112, "feder": 112, "fluminens": 112, "engenharia": 112, "produ": 112, "\u00e7": 112, "\u00e3": 112, "o": 112, "optimizingwithcolumngener": 112, "io": 112, "fran": 112, "oi": 112, "358": 112, "springer": 112, "boston": 112, "ma": 112, "387": 112, "25486": 112, "2_12": 112, "laurenc": 112, "wolsei": 112, "wilei": 112, "1002": 112, "9781119606475": 112, "0927": 112, "long": 112, "zhao": 112, "457": 112, "461": 112, "2013": 112, "003": 112, "twofold": 117, "share": 117, "mp": [117, 143], "aux": 117, "straightforward": [117, 145, 150, 152], "pars": 117, "aux_filenam": 117, "write_to_fil": 117, "filenam": 117, "field": [118, 153], "intertwin": 118, "parameter": 118, "Such": 118, "econom": 118, "cooper": 118, "game": 118, "quot": 118, "around": 118, "highlight": 118, "ill": 118, "inde": [118, 157], "somehow": 118, "circumv": 118, "pick": [118, 122], "favor": [118, 122], "ti": 118, "notion": [118, 122, 131, 148, 152, 155], "neq": [118, 122, 138, 155], "emptyset": [118, 122, 138, 155, 157, 158], "pessimisitc": 118, "deriv": [118, 122, 123, 152], "sever": [119, 135, 140, 150, 151], "karush": 119, "kuhn": 119, "tucker": 119, "ax": 119, "dy": 119, "cx": 119, "snippet": 119, "lower_c1": [119, 121], "lower_c2": [119, 121], "lower_c3": [119, 121], "lower_c4": [119, 121], "describ": [119, 151, 158], "single_level_model": 119, "nonlinear": 119, "becaus": [119, 135, 152], "complementar": 119, "dual": [115, 119, 139, 151, 152], "known": [119, 135, 151, 152, 153, 155, 157, 159], "One": [119, 145, 155], "previou": [119, 120, 121, 122, 145, 162], "section": [119, 135, 143, 148, 152, 157, 158], "strongdual": [2, 17, 119], "similar": [120, 135, 139, 145, 152], "know": [120, 122, 149, 159], "notic": [120, 159], "attach": [120, 143, 159, 162], "rest": [120, 122, 131, 137], "use_mib": [111, 120], "use_clp": [111, 120], "ilp": 121, "three": [121, 131, 135, 145, 150, 152], "hpr": 121, "doe": [121, 122, 135, 150, 152, 159, 162], "lower_level": 121, "litereatur": 122, "focus": 122, "transform": 122, "due": 122, "coupl": 122, "simplic": 122, "extend": [122, 133, 151], "author": 122, "min_i": [122, 155], "collect": 123, "demonstr": 123, "variou": 123, "organ": 123, "topic": [123, 131, 148, 152], "concept": [123, 138, 142, 149, 151, 153, 157], "todo": [123, 128, 138], "thank": [124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 147, 160], "understand": [124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 147, 160], "rudimentari": [131, 148, 152], "encod": 131, "e_": 131, "_": 131, "mn": 131, "lambda_": 131, "textrm": 131, "exponenti": 131, "effici": [131, 133], "focu": 131, "simplest": 131, "31": [], "37": [], "34": [], "21": [], "18": [], "www": [], "dei": [], "unibo": [], "chapter7": [], "crucial": [131, 135], "remain": [131, 137, 153], "appli": [64, 131, 135, 155], "would": [131, 139], "word": [131, 148], "sub_problem_specif": [131, 137], "usual": [131, 137], "fraction": [131, 135], "unchang": [131, 137], "retriev": [113, 115, 131, 137, 151], "involv": [133, 141, 154], "entireti": 133, "angular": 133, "stock": 133, "vehicl": 133, "rout": 133, "split": 133, "promis": 133, "until": 133, "further": [133, 155], "suit": 133, "allow": [133, 135, 146, 152], "power": 133, "emploi": 133, "tight": 133, "prune": 133, "acceler": 133, "seri": [133, 149], "precis": [133, 153], "book": 133, "reader": [151, 157], "w_": [], "t_i": [], "foral": [157, 158, 159], "parser": [], "load": 151, "mandatori": [], "just": 135, "emb": 137, "with_log_level": [], "ident": [], "blue": [], "produc": 135, "2023": [], "45": [], "44": [], "timt": [], "00": [], "timi": [], "stat": [], "rea": [], "objval": [], "110000": [], "ngen": [], "bestbnd": [], "bestobj": [], "rgap": [], "90909090909090928": [], "agap": [], "50093": [], "00000": [], "40096": [], "30068": [], "01": 158, "242": [], "277": [], "86": 115, "58": [], "90269": [], "85653": [], "50000": [], "58001": [], "35653": [], "49817": [], "36131": [], "51": [], "levl": [], "relgap": [], "absgap": [], "233": [], "42918454935603896320": [], "22579": [], "17547": [], "17552": [], "235": [], "81": [], "25760": [], "80933": [], "20572": [], "22397": [], "36123": [], "4747": [], "2106593638087168512": [], "12451": [], "7492": [], "218": [], "224": [], "x_1_7": [], "x_2_0": [], "x_2_1": [], "x_1_5": [], "x_0_6": [], "x_0_2": [], "x_0_3": [], "fall": 135, "categori": 135, "aspect": [135, 157], "decid": 135, "among": 135, "candid": 135, "badli": 135, "importantli": [135, 159], "computation": 135, "hard": 135, "sens": [115, 135, 148, 155, 157], "spend": 135, "carefulli": 135, "clearli": [135, 157], "context": 135, "expens": 135, "evalu": [135, 162], "notin": 135, "z": [135, 138, 143, 148, 152], "tri": 135, "lfloor": 135, "rfloor": 135, "lceil": [135, 158], "rceil": [135, 158], "z_i": 135, "z_j": 135, "argmax": [135, 157], "empir": 135, "substanti": 135, "lot": 135, "below": 135, "formula": 135, "linearscor": 135, "mu": 135, "delta_j": 135, "max": [135, 157], "productscor": 135, "ones": 135, "drawback": 135, "burden": 135, "subseteq": [135, 138, 143, 155, 157, 158], "fix": 135, "ahead": 135, "after": [135, 150, 157], "addition": [135, 158, 162], "impos": 135, "decompos": 135, "recal": [135, 155, 162], "branching_rul": [135, 150], "with_node_selection_strategi": 135, "bewar": 135, "saw": 135, "conveni": [135, 145], "discuss": [135, 142, 150, 157, 158], "switch": 135, "strongbranchingphas": 135, "withnodeoptim": 135, "numeric_limit": 135, "withiterationlimit": 135, "with_scoring_funct": 135, "up": [137, 150, 151], "haven": 137, "someth": 137, "moreov": [137, 139, 145], "hour": 137, "deal": [138, 151], "c_0": [138, 141, 143], "cdot": [138, 143], "ldot": [138, 143], "a_i": [138, 143], "said": 138, "region": [138, 139, 152, 156, 162], "tabl": [64, 138], "relationship": 139, "mainli": [139, 145, 153], "mean": [105, 139, 152], "compact": [139, 145, 157], "pattern": [139, 150], "sign": 139, "temporary_constraint": 139, "equalto": 139, "farka": [115, 139, 151], "set_row": 139, "coefficient_for_x_in_constraint": 139, "coefficient_for_y_in_constraint": 139, "quadratic_constraint": 139, "life": 140, "forbidden": 140, "subtract": [115, 141], "multipli": [115, 141], "c_1": 141, "over": [115, 141, 162], "basic": [142, 149], "compon": 142, "simplifi": [142, 150], "thing": [142, 152], "dispens": 142, "prefix": 142, "dive": [143, 157], "reli": 143, "again": [143, 145], "belong": [143, 145, 153], "nb": 143, "quantiti": 144, "either": [144, 152, 157], "model2": 145, "affect": 145, "coeffici": [115, 145, 154], "sometim": [145, 151], "extra": 145, "y_0_0": 145, "dimension": [145, 151], "appropri": [145, 146], "rai": [115, 145, 151], "objective_coefficient_for_x": 145, "constraint1": 145, "constraint1_coefficient_for_x": 145, "constraint2": 145, "constraint2_coefficient_for_x": 145, "situat": 146, "expos": 146, "cast": 146, "easier": 146, "throw": [113, 115, 146], "gurobi_optim": 146, "mistak": 146, "wrong": 146, "runtim": 146, "modif": 148, "quick": 148, "callack": 148, "lazyconstraintcallback": 148, "worri": 148, "inequ": 148, "sum": [148, 152], "hat": [148, 152, 154, 155, 157], "whether": [148, 152, 155, 157], "qquad": [148, 152, 154, 157], "m_x": 148, "m_weight": 148, "m_profit": 148, "m_capac": 148, "t_x": 148, "t_weight": 148, "t_profit": 148, "fractional_point": 148, "cover": 149, "assembl": 150, "glpj": 150, "re": [113, 115, 150], "creation": 150, "small": 150, "seen": [150, 152, 159, 162], "with_": 150, "continuous_relax": 150, "node_selection_rul": 150, "with_node_solv": 150, "status": 151, "inforunbnd": 151, "fail": 151, "suboptim": 151, "notspecifi": 151, "timelimit": 151, "reach": 151, "iterlimit": 151, "objlimit": 151, "issu": 151, "memorylimit": 151, "ran": 151, "cycl": 151, "simplex": 151, "solutionlimit": 151, "save_rai": 151, "save_du": 151, "save_farka": 151, "piec": 151, "primal_valu": 151, "els": [151, 155, 158], "primal_rai": 151, "save_": 151, "higher_dimensional_model": 151, "higher": 151, "strengthen": 152, "hi": 152, "her": 152, "domain": 152, "knowledg": 152, "never": 152, "unlik": 152, "impract": 152, "next": 152, "invalid": 152, "anticip": 152, "shape": 152, "cover_cut": 152, "prepend": [152, 162], "symbol": 152, "blanco": 152, "minlp": 152, "theori": 152, "3x_1": 152, "2y": 152, "2x_1": 152, "2x_0": 152, "3y": 152, "complic": 152, "lambda_1": 152, "lambda_2": 152, "those": 152, "2_": 152, "lambda_0": 152, "dual_spac": 152, "benders_cut": 152, "introduct": [123, 153, 156, 161], "trust": 156, "ccg": [157, 158, 159], "alow": 157, "slightli": 157, "n_x": [155, 157, 158], "rightarrow": 157, "n_y": 157, "ell": 157, "redund": [155, 157], "psi": 157, "special": 157, "finit": 157, "seek": 157, "miss": 157, "g_": 157, "posit": 157, "convent": [157, 162], "functor": 157, "shortli": 157, "recours": [157, 159], "fortun": 157, "varepsilon_": [155, 157, 158], "fea": [155, 157, 158], "becom": 157, "inspir": 158, "center": [155, 158], "good": [114, 158], "delta": 158, "rho": [155, 158], "radiu": [155, 158], "revers": [155, 158], "pseudocod": 158, "caption": [155, 158], "state": [155, 158], "rmp": [155, 158], "IF": [155, 158], "endif": [155, 158], "cup": [155, 158], "underlin": [155, 158], "reset": [155, 158], "back": [115, 155, 158], "with_stabil": 158, "columnandconstraintgener": [158, 159], "ccgstabil": 158, "trustregion": 158, "with_separ": [158, 159], "ccgsepar": [158, 159], "mu_i": 158, "lbrace": 158, "rbrace": 158, "with_trust_factor": 158, "factor": 158, "stagedescript": [159, 162], "contrari": 159, "commun": 159, "with_complete_recours": 159, "faster": 159, "notat": [], "impact": 154, "read_instance_1991_cornuejols_": 162, "robust_ccg": 162, "percentage_increas": 162, "seobj_expr": 162, "hood": 162, "front": 162, "stage_var": 162, "stage_ctr": 162, "stage_index": 162, "miscellan": 17, "math": [], "assess": 102, "equat": [102, 155], "api_toler": [], "gamma_": 102, "ab": 102, "t_lower_level": [], "t_follower_object": [], "follower_obj": [], "make_upper_level": [], "is_upp": [], "is_low": [], "t_deterministic_optim": [], "t_big_m": [], "t_uncertainty_set": [], "stage_annot": [], "t_stage": [], "uncertain_mat_coeff": [], "uncertain_rh": [], "uncertain_obj": [], "t_deterministic_model": [], "hereaft": 111, "use_": 111, "coin_or_hom": 111, "coin_or_dir": 111, "dist": 111, "dcoin_or_dir": 111, "other_options_go_her": 111, "use_osi": 111, "use_symphoni": 111, "use_cbc": 111, "use_cplex": 111, "alp": 111, "bcp": 111, "bli": 111, "cgl": 111, "coin_or": 111, "lower_level_obj": [], "optimizerinterfac": [], "set_bilevel_descript": [], "t_bilevel_descript": [], "adversari": [], "argmin_i": [], "wait": [], "impli": 155, "unspecifi": 155, "pseudo": [], "overlin": 155, "g_k": 155, "keep": 155, "treat": 155, "nevertheless": [106, 155], "present": 155, "highest": 155, "t_osi_optim": [], "second_stage_constraint": [], "emplace_back": [], "bilevel_descript": [], "flatten": [], "robust_descript": [], "initial_penalti": [], "1e1": [], "sub_problem": [], "exact": [], "with_initial_scenario_by_maxim": [], "with_initial_scenario_by_minim": [], "add_feasibility_separation_optim": [], "add_optimality_separation_optim": [], "discret": [], "dealt": [], "u_j": 154, "u_i": 154, "input": 153, "world": 153, "forecast": 153, "inaccuraci": 153, "inher": 153, "across": 153, "probabl": 153, "distribut": 153, "stochast": 153, "predefin": 153, "deviat": 153, "conservat": [153, 154], "satisfactorili": 153, "nomin": 154, "significantli": 154, "conserv": 154, "extrem": 154, "variat": 154, "generationpattern": 64, "summar": 64, "cell": 64, "intersect": 64, "success": [], "failur": [], "153": [], "63": 115, "twice": 115, "deduct": [], "unit": 89, "88": [], "88888888888889": [], "89": [], "test_cas": [], "errno": [], "_static": [], "simul": 114, "verifi": 114, "behav": 114, "test_modeling_interfac": [], "functional_test": [], "commer": [], "sourc": [], "licens": 115, "ci": [], "pipelin": [], "comprehens": 105, "overview": 105, "commerci": [], "divid": 115, "test_wrapper_glpk": [], "test_wrapper_high": [], "test_wrapper_mosek": [], "test_wrapper_gurobi": [], "test_wrapper_osi": [], "56": 115, "basi": 115, "appear": [113, 115], "br": [], "manipul": 115, "97": 115, "94": 115, "test_wrapper_osicbc": [], "test_wrapper_clp": [], "test_wrapper_cplex": [], "test_wrapper_symphoni": [], "test_wrapper_osiclp": [], "test_wrapper_osicplex": [], "test_wrapper_osisymphoni": [], "irreduc": 115, "presolv": 115, "pool": 115, "divis": [], "83": [], "70": 115, "59": [], "67": 115, "80": 115, "46": [], "69": [], "93": [], "108": [], "Not": 106, "90": [], "test_wrapper_mib": [], "unsupport": [], "operand": [], "nonetyp": [], "float": [], "374": [], "800": [], "500": [], "400": [], "600": [], "1800": [], "300": [], "273": [], "1317": [], "467": [], "267": [], "350": [], "1433": [], "1700": [], "1725": [], "1300": [], "65": [], "73": [], "71": 115, "43": [], "96": 115, "72": 115, "boundprovid": [], "t_bound_provid": [], "with_bound_provid": [], "unique_ptr": [], "sosctr": [], "add_sosctr": [], "t_is_sos1": [], "reserve_sos_ctr": [], "get_sosctr_by_index": [], "get_sosctr_index": [], "get_sosctr_var": [], "get_sosctr_weight": [], "is_sos1": [], "dummi": [], "myboundprovid": [], "get_ctr_dual_lb": [], "get_ctr_dual_ub": [], "get_ctr_slack_lb": [], "get_ctr_slack_ub": [], "get_var_lb_dual_ub": [], "get_var_ub_dual_lb": [], "bound_provid": [], "m_": [], "pi": [], "le_j": [], "ge_j": [], "stationar": [], "mathrm": [], "s_i": [], "le_i": [], "ge_i": [], "r_i": [], "m_i": [], "n_i": [], "o_j": [], "p_i": [], "ath": [], "leget": [], "geget": [], "sos1": [], "ell_j": [], "label": [], "eq": [], "classifi": [], "doxygenenum": [62, 63, 85], "doxygenfil": 65, "test_wrapper_jump": [], "jump": 114, "julia": 114, "53": 115, "84": 115}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"bilevel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 91, 92, 93, 97, 113, 117, 118, 120, 121, 122, 123, 155], "mib": [0, 1, 8, 9, 92, 113, 120], "optim": [1, 2, 5, 6, 9, 11, 17, 44, 52, 53, 54, 55, 61, 80, 82, 97, 102, 113, 115, 116, 118, 122, 123, 138, 144, 146, 147, 148, 150, 152, 153, 154, 155, 161], "extern": [2, 10, 61, 109, 111, 151], "solver": [2, 10, 61, 106, 109, 111, 151], "class": [11, 56, 126, 145], "list": [11, 84, 111, 148], "mix": [11, 17, 61, 84, 97, 115, 120, 123, 138], "integ": [11, 17, 61, 84, 97, 115, 120, 123, 134, 138], "program": [11, 84], "robust": [11, 17, 82, 83, 97, 101, 116, 123, 153, 154, 155, 161, 162], "callback": [12, 16, 86, 115, 125, 148], "usercutcallback": [12, 15], "lazycutcallback": [12, 14], "creat": [12, 124, 125, 126, 127, 131, 137, 139, 143, 145, 147, 148], "your": [12, 108, 124, 125, 126, 127, 147, 148, 160], "own": [12, 124, 125, 126, 127, 147, 148, 160], "exampl": [12, 18, 19, 71, 90, 97, 106, 107, 111, 121, 148, 150, 151, 152, 162], "callbackfactori": 13, "univers": [16, 86, 148], "constant": [], "common": [], "toler": 65, "numer": [], "api": 17, "branchandbound": 18, "doxygen": [0, 1, 3, 4, 5, 6, 7, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83], "branchandboundcallback": 19, "branchandboundcallbackfactori": 20, "cut": [21, 22, 129, 136, 148, 152], "knapsackcov": 21, "more": [22, 26, 32, 39, 47, 56], "plane": 22, "heurist": [23, 24, 25, 26, 43, 134], "localbranch": 23, "ren": 24, "simpleround": 25, "bestbound": 27, "bestestim": 28, "breadthfirst": 29, "depthfirst": 30, "worstbound": 31, "node": [32, 126, 127], "select": [32, 127], "rule": [32, 39, 99, 124, 127], "firstinfeasiblefound": 33, "leastinfeas": 34, "mostinfeas": 35, "pseudocost": 36, "strongbranch": 37, "uniformlyrandom": 38, "branch": [39, 61, 87, 94, 95, 96, 124, 128, 130, 133, 135, 136, 137], "dantzigwolf": [40, 42, 45, 46], "artificialcost": 40, "dantzigwolfedecomposit": [41, 44], "farkaspr": 42, "integermast": 43, "neam": 45, "wentg": 46, "stabil": [47, 132, 158], "glpk": [48, 52, 111, 115, 151], "gurobi": [49, 53, 107, 111, 115], "high": [50, 54, 98, 111, 115, 121], "mosek": [51, 55, 104, 111, 115], "coin": [56, 92, 111, 115, 120], "osi": [56, 115], "cplex": [56, 115, 120], "xpress": 56, "cbc": 56, "relat": [56, 89, 107], "osicbc": 57, "osiclp": 58, "osicplex": 59, "osisymphoni": 60, "model": [2, 61, 72, 82, 115, 119, 121, 142, 143, 145, 151, 162], "bound": [61, 94, 128, 130], "price": [61, 87, 95, 96, 133, 136, 137], "penalti": [61, 96], "altern": 61, "direct": 61, "method": [61, 96], "annot": [66, 162], "ctr": 67, "env": 69, "affexpr": [70, 141], "linexpr": [71, 141], "point": [73, 121], "qctr": 74, "quadexpr": [75, 141], "tempctr": 76, "tempqctr": 77, "tempvar": 78, "var": [79, 145], "padm": [80, 81], "ctrtype": 62, "vartyp": 63, "type": [84, 145], "event": 85, "benchmark": 87, "gener": [87, 95, 96, 100, 131, 133, 155, 156, 159], "assign": [87, 95, 96, 162], "problem": [87, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 113, 119, 120, 121, 122, 131, 155, 157, 162], "build": [88, 89, 90, 107, 111], "document": [88, 89], "depend": [88, 90, 111], "descript": [3, 83, 88], "instal": [88, 90, 107, 109, 110], "guid": [88, 90], "ubuntu": [88, 90], "instruct": [88, 90, 131], "develop": 89, "unit": [90, 111], "test": [89, 90, 111], "integr": [90, 111], "page": [89, 107], "code": [90, 155], "coverag": 90, "option": [90, 109, 111], "solv": [91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 113, 115, 119, 120, 131, 137, 149, 151], "an": [91, 92, 93, 130, 144, 148, 151, 152], "optimist": [91, 92, 93, 122], "lp": [91, 115, 130], "kkt": [4, 5, 91, 119], "reformul": [2, 91, 93, 119, 131], "definit": [91, 92, 93, 94, 95, 96, 98, 99, 101, 121, 131, 135, 157], "implement": [91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 117, 122, 135, 158], "milp": [92, 115], "pessimist": [93, 122], "us": [93, 99, 100, 111, 120, 132, 135, 145, 151, 156, 158], "facil": [94, 99, 100, 101, 162], "locat": [94, 99, 100, 101, 162], "custom": 94, "instanc": [94, 98, 117], "column": [95, 96, 100, 131, 133, 155, 156, 159], "decomposit": [95, 131], "combin": [96, 150], "idol": [96, 105, 106, 142, 158], "knapsack": [98, 148, 152], "affin": [99, 141], "decis": 99, "two": [99, 100, 155, 161, 162], "stage": [99, 100, 154, 155, 161, 162], "disrupt": [99, 100], "its": 101, "determinist": [101, 162], "equival": [101, 122], "ccg": [], "faq": 103, "why": 104, "i": [102, 104, 106], "eigen": [104, 111], "necessari": 104, "qp": [], "qcqp": 104, "In": [104, 132], "short": 104, "detail": 104, "answer": 104, "what": [105, 106, 141], "get": [106, 119, 146], "start": 106, "thi": 106, "mip": [106, 115, 142, 149], "tabl": [106, 111, 113, 115, 117, 119, 120, 121, 122, 131, 135, 137, 139, 141, 143, 144, 145, 148, 150, 151, 152, 155, 157, 158, 162], "content": [106, 111, 113, 115, 117, 119, 120, 121, 122, 131, 135, 137, 139, 141, 143, 144, 145, 148, 150, 151, 152, 155, 157, 158, 162], "global": [107, 109], "configur": 107, "And": 107, "Then": 107, "link": [108, 111], "c": 108, "project": [108, 151], "local": [109, 110], "etc": 109, "cmake": 111, "commerci": 111, "open": 111, "sourc": 111, "other": 111, "martinu": 111, "robin": 111, "hood": 111, "hash": 111, "map": 111, "refer": 112, "read": [117, 143], "write": [117, 130, 136, 137, 143, 159, 160], "bobilib": 117, "The": [117, 119, 122, 131, 134, 140, 146, 148, 150, 155, 157], "format": 117, "deriv": 119, "singl": [2, 119, 154], "level": [2, 119, 121, 155], "formul": [119, 131], "directli": 119, "strong": [119, 135], "dualiti": 119, "setup": 120, "feasibl": [120, 155], "check": [120, 155], "main": 121, "step": [121, 162], "relax": 121, "describ": 121, "lower": [121, 155], "defin": [121, 162], "object": [115, 121, 144], "function": [89, 90, 121, 135, 144], "complet": [121, 162], "from": [122, 143], "tutori": 123, "advanc": [124, 125, 126, 127, 147, 160], "todo": [124, 125, 126, 127, 129, 130, 132, 134, 136, 147, 160], "algorithm": [128, 131, 133, 136, 137, 157, 159], "ad": [129, 144, 152], "user": [129, 152], "lazi": [129, 152], "constraint": [100, 115, 129, 139, 143, 152, 155, 156, 157, 159], "base": 130, "A": [131, 136, 137, 150, 162], "dantzig": 131, "wolf": 131, "natur": 131, "automat": 131, "give": 131, "out": 132, "master": 134, "101": [], "mathemat": 115, "origin": [], "formal": 135, "score": 135, "variant": 135, "full": 135, "restrict": 135, "phase": 135, "chang": [135, 144], "prerequisit": 137, "linear": [115, 139, 141], "temporari": 139, "access": [139, 144, 145, 146, 151], "modifi": [139, 145], "remov": [139, 145], "quadrat": [115, 139, 141], "environ": 140, "express": [115, 141], "file": 143, "iter": 143, "over": 143, "variabl": [115, 143, 145], "sens": 144, "add": 145, "add_var": 145, "sever": 145, "onc": 145, "make_vector": 145, "add_vector": 145, "underli": 146, "basic": [148, 157], "support": 148, "cover": [148, 152], "concept": 150, "optimizerfactori": 150, "first": 150, "solut": 151, "e": 151, "g": 151, "save": 151, "introduct": [152, 155, 157, 158], "inequ": 152, "bender": 152, "notat": 157, "regard": 157, "coupl": [155, 157], "idea": 157, "separ": [157, 160], "On": 157, "impact": 157, "trust": 158, "region": 158, "assumpt": [155, 158], "adjust": [155, 161, 162], "uncertainti": 162, "set": 162, "about": 162, "dim": 68, "miscellan": 61, "how": 102, "gap": 102, "comput": 102, "strongdual": [6, 7], "adversari": 155, "wait": 155, "see": 155, "follow": [], "v": [], "": [], "pseudo": 155, "discret": [], "artifici": 123, "intellig": 123, "oper": 64, "overload": 64, "report": [], "case": [], "deduct": [], "can": [], "updat": [], "interfac": [113, 115], "featur": [105, 113, 114, 115, 116], "ar": 105, "stabl": [105, 113, 114, 115, 116], "wrapper": [], "through": [], "clp": 115, "symphoni": [], "continu": [], "techniqu": [], "sos1": [], "big": [], "m": [], "approach": [], "terminologi": [], "julia": 115, "jump": 115}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Bilevel::MibS": [[0, "bilevel-mibs"]], "Doxygen": [[0, "doxygen"], [1, "doxygen"], [3, "doxygen"], [4, "doxygen"], [5, "doxygen"], [6, "doxygen"], [7, "doxygen"], [18, "doxygen"], [19, "doxygen"], [20, "doxygen"], [21, "doxygen"], [23, "doxygen"], [24, "doxygen"], [25, "doxygen"], [27, "doxygen"], [28, "doxygen"], [29, "doxygen"], [30, "doxygen"], [31, "doxygen"], [33, "doxygen"], [34, "doxygen"], [35, "doxygen"], [36, "doxygen"], [37, "doxygen"], [38, "doxygen"], [40, "doxygen"], [41, "doxygen"], [42, "doxygen"], [43, "doxygen"], [44, "doxygen"], [45, "doxygen"], [46, "doxygen"], [48, "doxygen"], [49, "doxygen"], [50, "doxygen"], [51, "doxygen"], [52, "doxygen"], [53, "doxygen"], [54, "doxygen"], [55, "doxygen"], [56, "doxygen"], [57, "doxygen"], [58, "doxygen"], [59, "doxygen"], [60, "doxygen"], [66, "doxygen"], [67, "doxygen"], [68, "doxygen"], [69, "doxygen"], [70, "doxygen"], [71, "doxygen"], [72, "doxygen"], [74, "doxygen"], [75, "doxygen"], [76, "doxygen"], [77, "doxygen"], [78, "doxygen"], [79, "doxygen"], [80, "doxygen"], [81, "doxygen"], [83, "doxygen"]], "Optimizers::Bilevel::MibS": [[1, "optimizers-bilevel-mibs"], [9, "optimizers-bilevel-mibs"]], "Bilevel Optimization": [[2, "bilevel-optimization"], [11, "bilevel-optimization"], [17, "bilevel-optimization"], [97, "bilevel-optimization"], [118, "bilevel-optimization"], [123, "bilevel-optimization"]], "Modeling": [[2, "modeling"], [61, "modeling"], [82, "modeling"]], "External Solvers": [[2, "external-solvers"], [61, "external-solvers"]], "Single-level Reformulations": [[2, "single-level-reformulations"]], "Bilevel::Description": [[3, "bilevel-description"]], "Bilevel::KKT": [[4, "bilevel-kkt"]], "Optimizers::Bilevel::KKT": [[5, "optimizers-bilevel-kkt"]], "Optimizers::Bilevel::StrongDuality": [[6, "optimizers-bilevel-strongduality"]], "Bilevel::StrongDuality": [[7, "bilevel-strongduality"]], "Bilevel::Mibs": [[8, "bilevel-mibs"]], "External Bilevel Solvers": [[10, "external-bilevel-solvers"]], "Class List": [[11, "class-list"]], "Mixed-Integer Programming": [[11, "mixed-integer-programming"], [84, "mixed-integer-programming"]], "Robust Optimization": [[11, "robust-optimization"], [17, "robust-optimization"], [82, "robust-optimization"], [97, "robust-optimization"], [123, "robust-optimization"], [153, "robust-optimization"]], "Callback": [[12, "callback"]], "UserCutCallback and LazyCutCallback": [[12, "usercutcallback-and-lazycutcallback"]], "Creating your own callback": [[12, "creating-your-own-callback"]], "Example": [[12, null], [18, null], [19, null], [71, null], [90, null], [90, null], [106, null], [111, null], [111, null], [111, null], [111, null], [111, null], [111, null], [111, null], [111, null], [151, null]], "CallbackFactory": [[13, "callbackfactory"]], "LazyCutCallback": [[14, "lazycutcallback"]], "UserCutCallback": [[15, "usercutcallback"]], "Universal Callbacks": [[16, "universal-callbacks"], [86, "universal-callbacks"]], "API": [[17, "api"]], "Mixed-Integer Optimization": [[17, "mixed-integer-optimization"], [97, "mixed-integer-optimization"], [123, "mixed-integer-optimization"], [138, "mixed-integer-optimization"]], "BranchAndBound": [[18, "branchandbound"]], "BranchAndBoundCallback": [[19, "branchandboundcallback"]], "BranchAndBoundCallbackFactory": [[20, "branchandboundcallbackfactory"]], "Cuts::KnapsackCover": [[21, "cuts-knapsackcover"]], "More on Cutting Planes\u2026": [[22, "more-on-cutting-planes"]], "Heuristics::LocalBranching": [[23, "heuristics-localbranching"]], "Heuristics::RENS": [[24, "heuristics-rens"]], "Heuristics::SimpleRounding": [[25, "heuristics-simplerounding"]], "More on Heuristics\u2026": [[26, "more-on-heuristics"]], "BestBound": [[27, "bestbound"]], "BestEstimate": [[28, "bestestimate"]], "BreadthFirst": [[29, "breadthfirst"]], "DepthFirst": [[30, "depthfirst"]], "WorstBound": [[31, "worstbound"]], "More on Node Selection Rules\u2026": [[32, "more-on-node-selection-rules"]], "FirstInfeasibleFound": [[33, "firstinfeasiblefound"]], "LeastInfeasible": [[34, "leastinfeasible"]], "MostInfeasible": [[35, "mostinfeasible"]], "PseudoCost": [[36, "pseudocost"]], "StrongBranching": [[37, "strongbranching"]], "UniformlyRandom": [[38, "uniformlyrandom"]], "More on Branching Rules\u2026": [[39, "more-on-branching-rules"]], "DantzigWolfe::ArtificialCosts": [[40, "dantzigwolfe-artificialcosts"]], "DantzigWolfeDecomposition": [[41, "dantzigwolfedecomposition"]], "DantzigWolfe::FarkasPricing": [[42, "dantzigwolfe-farkaspricing"]], "Heuristics::IntegerMaster": [[43, "heuristics-integermaster"]], "Optimizers::DantzigWolfeDecomposition": [[44, "optimizers-dantzigwolfedecomposition"]], "DantzigWolfe::Neame": [[45, "dantzigwolfe-neame"]], "DantzigWolfe::Wentges": [[46, "dantzigwolfe-wentges"]], "More on Stabilization\u2026": [[47, "more-on-stabilization"]], "GLPK": [[48, "glpk"]], "Gurobi": [[49, "gurobi"]], "HiGHS": [[50, "highs"]], "Mosek": [[51, "mosek"]], "Optimizers::GLPK": [[52, "optimizers-glpk"]], "Optimizers::Gurobi": [[53, "optimizers-gurobi"]], "Optimizers::HiGHS": [[54, "optimizers-highs"]], "Optimizers::Mosek": [[55, "optimizers-mosek"]], "More on coin-or/Osi (Cplex, Xpress, Cbc, \u2026)\u2026": [[56, "more-on-coin-or-osi-cplex-xpress-cbc"]], "Related Classes": [[56, "related-classes"]], "OsiCbc": [[57, "osicbc"]], "OsiClp": [[58, "osiclp"]], "OsiCplex": [[59, "osicplex"]], "OsiSymphony": [[60, "osisymphony"]], "Mixed-integer Optimization": [[61, "mixed-integer-optimization"]], "Branch-and-Bound": [[61, "branch-and-bound"]], "Branch-and-Price": [[61, "branch-and-price"]], "Penalty Alternating Direction Method": [[61, "penalty-alternating-direction-method"]], "Miscellaneous": [[61, "miscellaneous"]], "CtrType": [[62, "ctrtype"]], "VarType": [[63, "vartype"]], "Operator Overloading": [[64, "operator-overloading"]], "Operator: +": [[64, "operator"]], "Operator: -": [[64, "id1"]], "Operator: *": [[64, "id2"]], "Operator: /": [[64, "id3"]], "Tolerances": [[65, "tolerances"]], "Annotation": [[66, "annotation"]], "Ctr": [[67, "ctr"]], "Dim": [[68, "dim"]], "Env": [[69, "env"]], "AffExpr": [[70, "affexpr"]], "LinExpr": [[71, "linexpr"]], "Model": [[72, "model"]], "Point": [[73, "point"]], "QCtr": [[74, "qctr"]], "QuadExpr": [[75, "quadexpr"]], "TempCtr": [[76, "tempctr"]], "TempQCtr": [[77, "tempqctr"]], "TempVar": [[78, "tempvar"]], "Var": [[79, "var"]], "Optimizers::PADM": [[80, "optimizers-padm"]], "PADM": [[81, "padm"]], "Robust::Description": [[83, "robust-description"]], "Type List": [[84, "type-list"]], "Events": [[85, "events"]], "Benchmark": [[87, "benchmark"]], "Branch-and-Price for the Generalized Assignment Problem": [[87, "branch-and-price-for-the-generalized-assignment-problem"]], "Build the Documentation": [[88, "build-the-documentation"]], "Dependencies": [[88, "dependencies"], [90, "dependencies"]], "Description": [[88, "description"]], "Installation guide (Ubuntu)": [[88, "installation-guide-ubuntu"], [90, "installation-guide-ubuntu"]], "Build instructions": [[88, "build-instructions"], [90, "build-instructions"]], "Developers": [[89, "developers"]], "Functional Testing": [[89, "functional-testing"]], "Building the Documentation": [[89, "building-the-documentation"]], "Related Pages": [[89, "related-pages"], [107, "related-pages"]], "Functional, Unit and Integration Tests": [[90, "functional-unit-and-integration-tests"]], "Code coverage options": [[90, "code-coverage-options"]], "Solving an optimistic LP-LP bilevel problem with KKT reformulation": [[91, "solving-an-optimistic-lp-lp-bilevel-problem-with-kkt-reformulation"]], "Problem Definition": [[91, "problem-definition"], [92, "problem-definition"], [93, "problem-definition"], [94, "problem-definition"], [95, "problem-definition"], [96, "problem-definition"], [98, "problem-definition"], [99, "problem-definition"], [101, "problem-definition"], [131, "problem-definition"]], "Implementation": [[91, "implementation"], [92, "implementation"], [93, "implementation"], [94, "implementation"], [95, "implementation"], [98, "implementation"], [99, "implementation"], [100, "implementation"], [101, "implementation"], [117, "implementation"], [122, "implementation"], [135, "implementation"]], "Solving an optimistic MILP-MILP bilevel problem with coin-or/MibS": [[92, "solving-an-optimistic-milp-milp-bilevel-problem-with-coin-or-mibs"]], "Solving a pessimistic bilevel problem using an optimistic reformulation": [[93, "solving-a-pessimistic-bilevel-problem-using-an-optimistic-reformulation"]], "Solving a facility location problem with a custom branch-and-bound": [[94, "solving-a-facility-location-problem-with-a-custom-branch-and-bound"]], "Instance": [[94, "instance"], [98, "instance"]], "Solving a generalized assignment problem by column generation and branch-and-price": [[95, "solving-a-generalized-assignment-problem-by-column-generation-and-branch-and-price"]], "Decomposition": [[95, "decomposition"]], "Combining branch-and-price, column generation, and a penalty method for the generalized assignment problem": [[96, "combining-branch-and-price-column-generation-and-a-penalty-method-for-the-generalized-assignment-problem"]], "Implementation with idol": [[96, "implementation-with-idol"]], "Examples": [[97, "examples"]], "Solving a knapsack problem with HiGHS": [[98, "solving-a-knapsack-problem-with-highs"]], "Using affine decision rules to solve a two-stage facility location problem with facility disruption": [[99, "using-affine-decision-rules-to-solve-a-two-stage-facility-location-problem-with-facility-disruption"]], "Using column-and-constraint generation to solve a two-stage facility location problem with facility disruption": [[100, "using-column-and-constraint-generation-to-solve-a-two-stage-facility-location-problem-with-facility-disruption"]], "Solving a robust facility location problem by its deterministic equivalent": [[101, "solving-a-robust-facility-location-problem-by-its-deterministic-equivalent"]], "How is the Optimality Gap Computed?": [[102, "how-is-the-optimality-gap-computed"]], "FAQ": [[103, "faq"]], "Why is Eigen Necessary to Solve QCQPs with Mosek?": [[104, "why-is-eigen-necessary-to-solve-qcqps-with-mosek"]], "In Short": [[104, "in-short"]], "Detailed Answer": [[104, "detailed-answer"]], "What are the Stable Features of idol?": [[105, "what-are-the-stable-features-of-idol"]], "What is idol?": [[106, "what-is-idol"]], "Getting Started with idol": [[106, "getting-started-with-idol"]], "Is this a MIP Solver?": [[106, "is-this-a-mip-solver"]], "Table of Contents": [[106, "table-of-contents"], [111, "table-of-contents"], [113, "table-of-contents"], [115, "table-of-contents"], [117, "table-of-contents"], [119, "table-of-contents"], [120, "table-of-contents"], [121, "table-of-contents"], [122, "table-of-contents"], [131, "table-of-contents"], [135, "table-of-contents"], [137, "table-of-contents"], [139, "table-of-contents"], [141, "table-of-contents"], [143, "table-of-contents"], [144, "table-of-contents"], [145, "table-of-contents"], [148, "table-of-contents"], [150, "table-of-contents"], [151, "table-of-contents"], [152, "table-of-contents"], [155, "table-of-contents"], [157, "table-of-contents"], [158, "table-of-contents"], [162, "table-of-contents"]], "Global Installation": [[107, "global-installation"], [109, "global-installation"]], "Configure": [[107, "configure"]], "Example for Gurobi": [[107, null]], "Build": [[107, "build"]], "Install": [[107, "install"]], "And Then?": [[107, "and-then"]], "Linking Your C++ Project": [[108, "linking-your-c-project"]], "Installation": [[109, "installation"]], "Local Installation": [[109, "local-installation"], [110, "local-installation"]], "Options (External Solvers, etc.)": [[109, "options-external-solvers-etc"]], "List of CMake Options": [[111, "list-of-cmake-options"]], "Linking with External Solvers": [[111, "linking-with-external-solvers"]], "Gurobi (Commercial Solver)": [[111, "gurobi-commercial-solver"]], "Mosek (Commercial Solver)": [[111, "mosek-commercial-solver"]], "GLPK (Open-Source Solver)": [[111, "glpk-open-source-solver"]], "HiGHS (Open-Source Solver)": [[111, "highs-open-source-solver"]], "coin-or (Open-Source Solvers)": [[111, "coin-or-open-source-solvers"]], "Building Examples": [[111, "building-examples"]], "Other optional dependencies": [[111, "other-optional-dependencies"]], "Using martinus/robin-hood-hashing hash map": [[111, "using-martinus-robin-hood-hashing-hash-map"]], "Using Eigen": [[111, "using-eigen"]], "Building Unit and Integration Tests": [[111, "building-unit-and-integration-tests"]], "References": [[112, "references"]], "Stable Features in Bilevel Optimization": [[113, "stable-features-in-bilevel-optimization"]], "Interfacing with MibS": [[113, "test_wrapper_MibS"]], "Solving bilevel problems": [[113, "[solving-bilevel]"]], "Stable Features": [[114, "stable-features"]], "Stable Features in Mixed-integer Optimization": [[115, "stable-features-in-mixed-integer-optimization"]], "Modeling a MIP": [[115, "test_modeling_interface"]], "Mathematical Expressions": [[115, "[expressions]"]], "Variables": [[115, "[variables]"], [145, "variables"]], "Linear Constraints": [[115, "[linear-constraints]"], [139, "linear-constraints"]], "Quadratic Constraints": [[115, "[quadratic-constraints]"], [139, "quadratic-constraints"]], "Objective": [[115, "[objective]"]], "Interfacing with Cplex": [[115, "test_wrapper_Cplex"]], "Solving LPs": [[115, "[solving-lp]"], [115, "[solving-lp]"], [115, "[solving-lp]"], [115, "[solving-lp]"], [115, "[solving-lp]"], [115, "[solving-lp]"], [115, "[solving-lp]"], [115, "[solving-lp]"]], "Solving MILPs": [[115, "[solving-milp]"], [115, "[solving-milp]"], [115, "[solving-milp]"], [115, "[solving-milp]"], [115, "[solving-milp]"], [115, "[solving-milp]"], [115, "[solving-milp]"], [115, "[solving-milp]"]], "Callbacks": [[115, "[callbacks]"], [115, "[callbacks]"], [115, "[callbacks]"], [115, "[callbacks]"], [115, "[callbacks]"], [115, "[callbacks]"], [115, "[callbacks]"], [115, "[callbacks]"]], "Interfacing with GLPK": [[115, "test_wrapper_GLPK"]], "Interfacing with Gurobi": [[115, "test_wrapper_Gurobi"]], "Interfacing with HiGHS": [[115, "test_wrapper_HiGHS"]], "Interfacing with julia JuMP": [[115, "test_wrapper_JuMP"]], "Interfacing with Mosek": [[115, "test_wrapper_Mosek"]], "Interfacing with coin-or/Osi (Clp)": [[115, "test_wrapper_OsiClp"]], "Interfacing with coin-or/Osi (Cplex)": [[115, "test_wrapper_OsiCplex"]], "Stable Features in Robust Optimization": [[116, "stable-features-in-robust-optimization"]], "Reading and Writing Bilevel Instances (BOBILib)": [[117, "reading-and-writing-bilevel-instances-bobilib"]], "The Format": [[117, "the-format"]], "Reading Instances": [[117, "reading-instances"]], "Writing Instances": [[117, "writing-instances"]], "Deriving Single-level Reformulations": [[119, "deriving-single-level-reformulations"]], "Problem Formulation": [[119, "problem-formulation"]], "The KKT Reformulation": [[119, "the-kkt-reformulation"]], "Getting the Reformulated Model": [[119, "getting-the-reformulated-model"], [119, "id1"]], "Solving the KKT Reformulation directly": [[119, "solving-the-kkt-reformulation-directly"]], "The Strong-duality Reformulation": [[119, "the-strong-duality-reformulation"]], "Solving the Strong-duality Reformulation directly": [[119, "solving-the-strong-duality-reformulation-directly"]], "Solving Mixed-Integer Bilevel Problems with coin-or/MibS": [[120, "solving-mixed-integer-bilevel-problems-with-coin-or-mibs"]], "Setup": [[120, "setup"]], "Using MibS": [[120, "using-mibs"]], "Using CPLEX for Feasibility Check": [[120, "using-cplex-for-feasibility-check"]], "Modeling a Bilevel Problem": [[121, "modeling-a-bilevel-problem"]], "Problem Definition and Main Steps": [[121, "problem-definition-and-main-steps"]], "Modeling the High-Point Relaxation": [[121, "modeling-the-high-point-relaxation"]], "Describing the Lower-Level Problem": [[121, "describing-the-lower-level-problem"]], "Defining the Lower-Level Objective Function": [[121, "defining-the-lower-level-objective-function"]], "Complete Example": [[121, "complete-example"], [162, "complete-example"]], "From Pessimistic Bilevel Optimization to Optimistic Bilevel Optimization": [[122, "from-pessimistic-bilevel-optimization-to-optimistic-bilevel-optimization"]], "The Equivalent Optimistic Problem": [[122, "the-equivalent-optimistic-problem"]], "Tutorials": [[123, "tutorials"]], "Artificial Intelligence": [[123, "artificial-intelligence"]], "Creating Your Own Branching Rule (Advanced) [TODO]": [[124, "creating-your-own-branching-rule-advanced-todo"]], "Create Your Own Callback (Advanced) [TODO]": [[125, "create-your-own-callback-advanced-todo"]], "Creating Your Own Node Class (Advanced) [TODO]": [[126, "creating-your-own-node-class-advanced-todo"]], "Creating Your Own Node Selection Rule (Advanced) [TODO]": [[127, "creating-your-own-node-selection-rule-advanced-todo"]], "Branch-and-Bound Algorithm": [[128, "branch-and-bound-algorithm"]], "Adding User Cuts and Lazy Constraints [TODO]": [[129, "adding-user-cuts-and-lazy-constraints-todo"]], "Writing an LP-based Branch-and-Bound [TODO]": [[130, "writing-an-lp-based-branch-and-bound-todo"]], "Solving A Dantzig-Wolfe Reformulation": [[131, "solving-a-dantzig-wolfe-reformulation"]], "The Natural Formulation": [[131, "the-natural-formulation"], [131, "id1"]], "The Dantzig-Wolfe Reformulation": [[131, "the-dantzig-wolfe-reformulation"]], "Automatic Reformulation": [[131, "automatic-reformulation"]], "Giving Decomposition Instructions": [[131, "giving-decomposition-instructions"]], "Creating the Column Generation Algorithm": [[131, "creating-the-column-generation-algorithm"]], "Solving": [[131, "solving"], [137, "solving"]], "Using In-Out Stabilization [TODO]": [[132, "using-in-out-stabilization-todo"]], "Column Generation and Branch-and-Price Algorithm": [[133, "column-generation-and-branch-and-price-algorithm"]], "The Integer Master Heuristic [TODO]": [[134, "the-integer-master-heuristic-todo"]], "Using Strong Branching": [[135, "using-strong-branching"]], "Formal Definition": [[135, "formal-definition"]], "Scoring Functions": [[135, "scoring-functions"]], "Variants": [[135, "variants"]], "Full Strong Branching": [[135, "full-strong-branching"]], "Restricted Strong Branching": [[135, "restricted-strong-branching"]], "Phases": [[135, "phases"]], "Changing the Scoring Function": [[135, "changing-the-scoring-function"]], "Writing A Branch-and-Cut-and-Price Algorithm [TODO]": [[136, "writing-a-branch-and-cut-and-price-algorithm-todo"]], "Writing A Branch-and-Price Algorithm": [[137, "writing-a-branch-and-price-algorithm"]], "Prerequisites": [[137, "prerequisites"]], "Creating the Branch-and-Price Algorithm": [[137, "creating-the-branch-and-price-algorithm"]], "Constraints": [[139, "constraints"]], "Creating Constraints": [[139, "creating-constraints"]], "Temporary Constraints": [[139, "temporary-constraints"]], "Accessing Constraints": [[139, "accessing-constraints"]], "Modifying Constraints": [[139, "modifying-constraints"]], "Removing Constraints": [[139, "removing-constraints"]], "The Environment": [[140, "the-environment"]], "Expressions": [[141, "expressions"]], "LinExpr: Linear Expressions": [[141, "linexpr-linear-expressions"]], "Linear in What?": [[141, null]], "AffExpr: Affine Expressions": [[141, "affexpr-affine-expressions"]], "QuadExpr: Quadratic Expressions": [[141, "quadexpr-quadratic-expressions"]], "Modeling a MIP with idol": [[142, "modeling-a-mip-with-idol"]], "Models": [[143, "models"]], "Creating a Model": [[143, "creating-a-model"]], "Reading a Model from a File": [[143, "reading-a-model-from-a-file"]], "Writing a Model to a File": [[143, "writing-a-model-to-a-file"]], "Iterating over the Variables and Constraints": [[143, "iterating-over-the-variables-and-constraints"]], "Objective Functions": [[144, "objective-functions"]], "Adding an Objective Function": [[144, "adding-an-objective-function"]], "Accessing the Objective Function": [[144, "accessing-the-objective-function"]], "Changing the Optimization Sense": [[144, "changing-the-optimization-sense"]], "Creating Variables": [[145, "creating-variables"]], "Using the Var class and Model::add": [[145, "using-the-var-class-and-model-add"]], "Using Model::add_var": [[145, "using-model-add-var"]], "Creating Several Variables at Once": [[145, "creating-several-variables-at-once"]], "Using Var::make_vector and Model::add_vector": [[145, "using-var-make-vector-and-model-add-vector"]], "Using Model::add_vars": [[145, "using-model-add-vars"]], "Variables Types": [[145, "variables-types"]], "Accessing Variables": [[145, "accessing-variables"]], "Modifying Variables": [[145, "modifying-variables"]], "Removing Variables": [[145, "removing-variables"]], "Getting Access to The Underlying Optimizer": [[146, "getting-access-to-the-underlying-optimizer"]], "Creating Your Own Optimizer (Advanced) [TODO]": [[147, "creating-your-own-optimizer-advanced-todo"]], "Creating Your Own Callback": [[148, "creating-your-own-callback"]], "The Basics": [[148, "the-basics"]], "List of Optimizers Supporting Universal Callbacks": [[148, "list-of-optimizers-supporting-universal-callbacks"]], "An Example: Knapsack Cover Cuts": [[148, "an-example-knapsack-cover-cuts"]], "Solving MIPs": [[149, "solving-mips"]], "The Concept of Optimizer and OptimizerFactory": [[150, "the-concept-of-optimizer-and-optimizerfactory"]], "A First Example": [[150, "a-first-example"]], "Combining Optimizers": [[150, "combining-optimizers"]], "Using an External Solver and Accessing the Solution": [[151, "using-an-external-solver-and-accessing-the-solution"]], "Modeling and Solving with an External Solver (e.g., GLPK)": [[151, "modeling-and-solving-with-an-external-solver-e-g-glpk"]], "Accessing the Solution": [[151, "accessing-the-solution"]], "Saving a Solution": [[151, "saving-a-solution"]], "Saving a Projected Solution": [[151, "saving-a-projected-solution"]], "Adding User Cuts and Lazy Constraints": [[152, "adding-user-cuts-and-lazy-constraints"]], "Introduction": [[152, "introduction"], [155, "introduction"], [157, "introduction"], [158, "introduction"]], "An Example of User Cuts: Knapsack Cover Inequalities": [[152, "an-example-of-user-cuts-knapsack-cover-inequalities"]], "An Example of Lazy Cut Constraints: Benders Optimality Cuts": [[152, "an-example-of-lazy-cut-constraints-benders-optimality-cuts"]], "Single-stage Robust Optimization": [[154, "single-stage-robust-optimization"]], "The Column-and-Constraint Generation: Introduction": [[155, "the-column-and-constraint-generation-introduction"]], "Robust Bilevel Optimization with Wait-and-See Lower Level": [[155, "robust-bilevel-optimization-with-wait-and-see-lower-level"]], "Two-stage Robust Optimization and Adjustable Robust Optimization": [[155, "two-stage-robust-optimization-and-adjustable-robust-optimization"]], "Assumptions": [[155, "assumptions"]], "The Adversarial Problem": [[155, "the-adversarial-problem"]], "Checking Feasibility of the Lower-level": [[155, "checking-feasibility-of-the-lower-level"]], "Checking Feasibility of the Coupling Constraints": [[155, "checking-feasibility-of-the-coupling-constraints"]], "Checking Optimality": [[155, "checking-optimality"]], "Pseudo-Code": [[155, "pseudo-code"]], "Using Column-and-Constraint-Generation": [[156, "using-column-and-constraint-generation"]], "Problem Definition and Notation": [[157, "problem-definition-and-notation"]], "Regarding Coupling Constraints": [[157, null]], "The Algorithm": [[157, "the-algorithm"]], "Basic Idea": [[157, "basic-idea"]], "Separators": [[157, "separators"]], "On the Impact of Coupling Constraints": [[157, "on-the-impact-of-coupling-constraints"]], "Using Trust Region Stabilization": [[158, "using-trust-region-stabilization"]], "Assumption": [[158, null]], "Implementation in idol": [[158, "implementation-in-idol"]], "Writing a Column-and-Constraint-Generation Algorithm": [[159, "writing-a-column-and-constraint-generation-algorithm"]], "Writing Your Own Separator (Advanced) [TODO]": [[160, "writing-your-own-separator-advanced-todo"]], "Two-stage Robust Optimization (Adjustable)": [[161, "two-stage-robust-optimization-adjustable"]], "Modeling Adjustable Robust Problems": [[162, "modeling-adjustable-robust-problems"]], "A Two-Stage Robust Facility Location Problem": [[162, "a-two-stage-robust-facility-location-problem"]], "Modeling Steps": [[162, "modeling-steps"]], "Defining the Uncertainty Set": [[162, "defining-the-uncertainty-set"]], "Defining the Deterministic Model": [[162, "defining-the-deterministic-model"]], "Assigning Stages": [[162, "assigning-stages"]], "About stage annotations": [[162, null]]}, "indexentries": {}})