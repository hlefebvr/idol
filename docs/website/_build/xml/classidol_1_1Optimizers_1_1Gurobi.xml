<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Optimizers_1_1Gurobi" kind="class" language="C++" prot="public">
    <compoundname>idol::Optimizers::Gurobi</compoundname>
    <basecompoundref refid="classidol_1_1OptimizerWithLazyUpdates" prot="public" virt="non-virtual">idol::OptimizerWithLazyUpdates&lt; GRBVar, GRBConstr, GRBQConstr &gt;</basecompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classidol_1_1Optimizers_1_1Gurobi_1afa0e18dff0504fd87ad6e8ffc1a98564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ::idol::GurobiCallbackI</definition>
        <argsstring></argsstring>
        <name>::idol::GurobiCallbackI</name>
        <param>
          <type>::<ref refid="classidol_1_1GurobiCallbackI" kindref="compound">idol::GurobiCallbackI</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="22" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Gurobi_1a8a55f664263836b645bc624701e620f4" prot="private" static="yes" mutable="no">
        <type>std::unique_ptr&lt; GRBEnv &gt;</type>
        <definition>std::unique_ptr&lt;GRBEnv&gt; idol::Optimizers::Gurobi::s_global_env</definition>
        <argsstring></argsstring>
        <name>s_global_env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="23" column="28" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Gurobi_1a10f58e7f7491d9c2c7415abd456c0a6a" prot="private" static="no" mutable="no">
        <type>GRBEnv &amp;</type>
        <definition>GRBEnv&amp; idol::Optimizers::Gurobi::m_env</definition>
        <argsstring></argsstring>
        <name>m_env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="27" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Gurobi_1ad89368c1cceaa5285ad8f5c093d03f7b" prot="private" static="no" mutable="no">
        <type>GRBModel</type>
        <definition>GRBModel idol::Optimizers::Gurobi::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="28" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Gurobi_1ae929858410bb0eb3d5629a65dee794a4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::Optimizers::Gurobi::m_continuous_relaxation</definition>
        <argsstring></argsstring>
        <name>m_continuous_relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="29" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Gurobi_1a7a32a4c6a725441db03133ed69fe6ea7" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classidol_1_1GurobiCallbackI" kindref="compound">GurobiCallbackI</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GurobiCallbackI&gt; idol::Optimizers::Gurobi::m_gurobi_callback</definition>
        <argsstring></argsstring>
        <name>m_gurobi_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="31" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ad94adfa3f5f7dd31c96f473832ede341" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GRBEnv &amp;</type>
        <definition>static GRBEnv&amp; idol::Optimizers::Gurobi::get_global_env</definition>
        <argsstring>()</argsstring>
        <name>get_global_env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="25" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a7fca6dcc459aa2c70e23a45d474241d5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char idol::Optimizers::Gurobi::gurobi_ctr_type</definition>
        <argsstring>(int t_type)</argsstring>
        <name>gurobi_ctr_type</name>
        <param>
          <type>int</type>
          <declname>t_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="34" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1abc198bc64266db243d8cc7e1879c48f2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char idol::Optimizers::Gurobi::gurobi_obj_sense</definition>
        <argsstring>(int t_sense)</argsstring>
        <name>gurobi_obj_sense</name>
        <param>
          <type>int</type>
          <declname>t_sense</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="35" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a2b01ff9f2a8239a14c1fa40d6b5a65db" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double idol::Optimizers::Gurobi::gurobi_numeric</definition>
        <argsstring>(double t_value)</argsstring>
        <name>gurobi_numeric</name>
        <param>
          <type>double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="36" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a59336ce4ac73fe00bf28df814d845e90" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VarType</type>
        <definition>static VarType idol::Optimizers::Gurobi::idol_var_type</definition>
        <argsstring>(char t_type)</argsstring>
        <name>idol_var_type</name>
        <param>
          <type>char</type>
          <declname>t_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="37" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1afc102e0ac43b6cf3da6a663012e1548d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CtrType</type>
        <definition>static CtrType idol::Optimizers::Gurobi::idol_ctr_type</definition>
        <argsstring>(char t_type)</argsstring>
        <name>idol_ctr_type</name>
        <param>
          <type>char</type>
          <declname>t_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="38" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1af3697a8d49a111c7ca57604445f6379e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ObjectiveSense</type>
        <definition>static ObjectiveSense idol::Optimizers::Gurobi::idol_obj_sense</definition>
        <argsstring>(int t_sense)</argsstring>
        <name>idol_obj_sense</name>
        <param>
          <type>int</type>
          <declname>t_sense</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="39" column="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aa5b7ee4396aade8dae43639bf916db95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char idol::Optimizers::Gurobi::gurobi_var_type</definition>
        <argsstring>(int t_type)</argsstring>
        <name>gurobi_var_type</name>
        <param>
          <type>int</type>
          <declname>t_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="33" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a090df66d877ebb56dbc4aa6a94e911ce" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SolutionStatus, SolutionReason &gt;</type>
        <definition>std::pair&lt;SolutionStatus, SolutionReason&gt; idol::Optimizers::Gurobi::gurobi_status</definition>
        <argsstring>(int t_status) const</argsstring>
        <name>gurobi_status</name>
        <param>
          <type>int</type>
          <declname>t_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="40" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a0954c7caf588504cf44c17ed4498084c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_build</definition>
        <argsstring>() override</argsstring>
        <name>hook_build</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a40b9647adcbc37aa89e3fc6cd9854db5">hook_build</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="42" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a0b709dbfe03390262f6901724de757f5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_optimize</definition>
        <argsstring>() override</argsstring>
        <name>hook_optimize</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aac4fef8007f641e8226be51f92075fde">hook_optimize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a4718ec1b6b73186f7e77b030d8a10ea1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_write</definition>
        <argsstring>(const std::string &amp;t_name) override</argsstring>
        <name>hook_write</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ab8123dad08942d7d95feca7ac2302287">hook_write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a65d8ca81e524fdd096333bc19228501b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GRBVar</type>
        <definition>GRBVar idol::Optimizers::Gurobi::hook_add</definition>
        <argsstring>(const Var &amp;t_var, bool t_add_column) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a10edbb4a7e700c6fe0d6fd791b2071b4">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_add_column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="45" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1acbef957eccacad32464a290e41d2f131" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GRBConstr</type>
        <definition>GRBConstr idol::Optimizers::Gurobi::hook_add</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a5a47e058e2c5dd5165f538eccf2034f4">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="46" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1adf74841ce391db447a2e5272431514c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GRBQConstr</type>
        <definition>GRBQConstr idol::Optimizers::Gurobi::hook_add</definition>
        <argsstring>(const QCtr &amp;t_ctr) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a98ab1a9f02d27dafadf2bac8111aec1d">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="47" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a2390530125df42cd7b5dab8bb4091661" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>hook_update</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1adcc8a03ea17752d297717d6725458e93">hook_update</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a05dbbba1e01b08df9e73e2385a4b8936" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>hook_update</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a469a2d9ad5dbc7ebfa4d800e53e6e0b3">hook_update</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="49" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a03a84aaae1820b518fd97747f00ec7f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update_objective_sense</definition>
        <argsstring>() override</argsstring>
        <name>hook_update_objective_sense</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a8b6d15ef45557f777aa58a912ba64192">hook_update_objective_sense</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="50" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a0c967f1127a5cdf49310e24af561ac08" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update_matrix</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var, double t_constant) override</argsstring>
        <name>hook_update_matrix</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a9503367e669f6a17fe421965ecd81e23">hook_update_matrix</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a47d4fb72e99ed188a1ec3ee756505c05" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update_objective</definition>
        <argsstring>() override</argsstring>
        <name>hook_update_objective</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1af979ef76f7d71931d71c5652a7361b01">hook_update_objective</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a394a68a71799f21e77e047c6d83ce78c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update_rhs</definition>
        <argsstring>() override</argsstring>
        <name>hook_update_rhs</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a15f76bf6affd6e5771c515fd77c920a2">hook_update_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a156584f1c2c41220971861e5b79938d1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_update</definition>
        <argsstring>() override</argsstring>
        <name>hook_update</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1aec4be0622ff1fb52b1c3118aabed23a7">hook_update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ad4df7941816357f1bfff4d9bf4a1d88c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_remove</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ae6623f7aa702ec644df2edeb6889e3ce">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="55" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a5ebd9540e01f37ce9d8ffd5cbd3bc049" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_remove</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ad8713994e3d0891e64ee9a18fb578713">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1af2ba0e31d4defff1b672f6e92f4f8eb2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::hook_remove</definition>
        <argsstring>(const QCtr &amp;t_ctr) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a1749dec29dfb9c213681e0d3c31400d4">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a88c45df8ab4b8c2e9cd29102c2b86664" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::update_objective_constant</definition>
        <argsstring>()</argsstring>
        <name>update_objective_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a3948fcad9247660ab3732d2841602100" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SolutionStatus</type>
        <definition>SolutionStatus idol::Optimizers::Gurobi::get_status</definition>
        <argsstring>() const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aba3f84c3dcd1f69e91c85606ef893b16">get_status</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="60" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aca44ba846eb366376ed953a52b670b5f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SolutionReason</type>
        <definition>SolutionReason idol::Optimizers::Gurobi::get_reason</definition>
        <argsstring>() const override</argsstring>
        <name>get_reason</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afceabfe55118b54e898d766914186e77">get_reason</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="61" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a5de604aba68bb4b590555cb8ad3a49ee" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_best_obj</definition>
        <argsstring>() const override</argsstring>
        <name>get_best_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a3ddcd68d96101c4df494693cf883337c">get_best_obj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="62" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a77a3ef31644aa84ded7f790fe5c32d86" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_best_bound</definition>
        <argsstring>() const override</argsstring>
        <name>get_best_bound</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5eec9cc5da973fc5db74b4b6fb5ecd61">get_best_bound</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="63" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1adda90015392c068ae871e0bc65e0bfd9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_var_primal</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_primal</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a4067491b572c01dbd56944809c2ee26f">get_var_primal</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="64" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1abb34f8c8e89718d4034d07f5ff75c906" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_var_reduced_cost</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_reduced_cost</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a251f4d7d32c83135d3997d72d1ed719c">get_var_reduced_cost</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="65" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a146fb31702dbad4b090f8dbbe603ab0f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_var_ray</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_ray</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ad21a943630920c4e618b7f7450d2668b">get_var_ray</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="66" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a77c718102a84a3c1131bb5c63eec285e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_ctr_dual</definition>
        <argsstring>(const Ctr &amp;t_ctr) const override</argsstring>
        <name>get_ctr_dual</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a146aa552ab6c5442d7ca49d29d806427">get_ctr_dual</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a6e3ade84ebaee5d56bc6072170fdf91b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_ctr_farkas</definition>
        <argsstring>(const Ctr &amp;t_ctr) const override</argsstring>
        <name>get_ctr_farkas</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae0cf7244a71914ddbb08ba8e0baba9ca">get_ctr_farkas</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="68" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a125fdb884d065d7a47fde9f7e845040e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_relative_gap</definition>
        <argsstring>() const override</argsstring>
        <name>get_relative_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a17d096d345b47194e85cc210351f45d5">get_relative_gap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="69" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ac0bc995deaa8e3ee3deef82ff040e7d9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Gurobi::get_absolute_gap</definition>
        <argsstring>() const override</argsstring>
        <name>get_absolute_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a266eddfc1b3aa4ee9a9231ecdf568337">get_absolute_gap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="70" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1acdde6954305c2b37c9df7806bdc461cd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Optimizers::Gurobi::get_n_solutions</definition>
        <argsstring>() const override</argsstring>
        <name>get_n_solutions</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a0e98fd1255617e98e988ee41ca896e71">get_n_solutions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="71" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aabd8912b14f52d53825041178e63bfd8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Optimizers::Gurobi::get_solution_index</definition>
        <argsstring>() const override</argsstring>
        <name>get_solution_index</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a4d4eb6b7c7885ecdfbae4c87da8d0661">get_solution_index</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="72" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a1afb4f54cf2507f8c2024e28141a2e7b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_solution_index</definition>
        <argsstring>(unsigned int t_index) override</argsstring>
        <name>set_solution_index</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a9ad3e14177821752eb86c58195f1df46">set_solution_index</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>t_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="74" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a630789e6aa5c4360b9d90f09365f446b" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::build</definition>
        <argsstring>() final</argsstring>
        <name>build</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8b1cfad93e3eb77c214aa2ff343fcb64">build</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="80" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="238" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afe001d934289f73d5027667a2ad724d3" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::write</definition>
        <argsstring>(const std::string &amp;t_name) final</argsstring>
        <name>write</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a799b0b5d874b3558c48e4d1cef6013a8">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="83" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae68fe72079e1eba2ec7d464a1f7148bb" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::add</definition>
        <argsstring>(const Var &amp;t_var) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ac5e35eec35d2dea0b90fcabd30485179">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="86" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="413" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a39c8f0f97dd71dbb94bd2c98f3bf0de5" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::add</definition>
        <argsstring>(const Ctr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae1266859ae2679d14d22bb7449dbbe8b">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="89" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="388" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a007f09ad057ab0298292a2c39b97e505" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::add</definition>
        <argsstring>(const QCtr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afa9e27c1db69ebe4688fd4ba37ba3121">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="92" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="400" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a036d978c29e99ab33b64f6dcbdd23969" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update</definition>
        <argsstring>() final</argsstring>
        <name>update</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a96d15823685c0e6d2966ef35b26a9503">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="98" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="270" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a1a7cb07f04700f1201e8e5582c77896c" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::remove</definition>
        <argsstring>(const Var &amp;t_var) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a922c443d01523ee75f16f8cba99ee159">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="107" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="425" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a722b4d13c44fc48634e5455f6b5e8334" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::remove</definition>
        <argsstring>(const Ctr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5c021fd9b686acbb6d3b8ee38c7eff9c">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="110" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="440" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a85690c369dd198e9aa2ba265a980c18a" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::remove</definition>
        <argsstring>(const QCtr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8f30740f64bd1bac13b7de206e781c7b">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="113" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="455" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a65635482c5ff4e2fc8f99082241ec0a0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::has_lazy</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="116" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a7f2b5aad53e2210b47c353aded11c79f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::has_lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="121" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a7d5b40d340a6fce3ba3e1b73a5a08714" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::has_lazy</definition>
        <argsstring>(const QCtr &amp;t_qctr) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_qctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="126" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6c1afcf23f38a2737fdf11061389f67c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="131" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af58b3e24778f08afcc38333c5f8b65ec" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="132" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a309d86fe0936e5568fbaab2935df2c34" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="134" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af642c3171a81d4c882f3faae64436845" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="135" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a0cae683a08a13fa7011ef18d0adfc941" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy</definition>
        <argsstring>(const QCtr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="137" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ace3668185e49027f7947da1f54e5c810" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy</definition>
        <argsstring>(const QCtr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="138" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aef94789320776a4f70825168435a012f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy_vars</definition>
        <argsstring>()</argsstring>
        <name>lazy_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="140" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afc506aff3d625dcdd97c938e81110f18" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy_vars</definition>
        <argsstring>() const</argsstring>
        <name>lazy_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="141" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6bf8afd70409d3200aa082570eaf4bbe" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy_ctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="143" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a006b54d15a15e1e63fe0c8f8d31f53ac" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy_ctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="144" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6677b0b0edce78a13a445b4f6c18b730" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy_qctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="146" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae52fea4d7bf677519cea43e60817201b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::lazy_qctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="147" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a327b4587f09989707669fbdd9cb6c3a4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::set_objective_to_be_updated</definition>
        <argsstring>()</argsstring>
        <name>set_objective_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="149" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a8b1dc43b7891e877e7a6e7dd34929ce4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::is_objective_to_be_updated</definition>
        <argsstring>() const</argsstring>
        <name>is_objective_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="150" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a11ca673abf5ddf1144f1739f5bacee06" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::set_objective_as_updated</definition>
        <argsstring>()</argsstring>
        <name>set_objective_as_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="151" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a704351d769bd3464f55eecef9997b50c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::set_rhs_to_be_updated</definition>
        <argsstring>()</argsstring>
        <name>set_rhs_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="153" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9f69bb47e6dd5ac615a8a51fe4544b80" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::is_rhs_to_be_updated</definition>
        <argsstring>() const</argsstring>
        <name>is_rhs_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="154" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1acd9d0bbe49db1c4545a2d69d5b2b8109" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::set_rhs_as_updated</definition>
        <argsstring>()</argsstring>
        <name>set_rhs_as_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="155" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6f9883562fa7ef834bcdfb661141f490" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_obj_sense</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_sense</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a25a53345053496a7fadd9648df49d254">update_obj_sense</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="157" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aecbceed05a1697acb2de727182e55656" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_obj</definition>
        <argsstring>() override</argsstring>
        <name>update_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab0f43a11a4c92dbd420df4083f074fd5">update_obj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="158" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ac5083ad9bce94d8d0fc398e65e05ecb7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_rhs</definition>
        <argsstring>() override</argsstring>
        <name>update_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1cbf5571c1dec27a41a6e9f0e19db124">update_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="159" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae4facf4fab6fdfa8f7723d0e4f0c4d76" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_obj_constant</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_constant</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a649970fd70f822ff3565118b23503a18">update_obj_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="160" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9e779d8f2bd1c01ff5bbaa42a03c757f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_mat_coeff</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var) override</argsstring>
        <name>update_mat_coeff</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbbeaecd791d91037912dbea1cc3abe4">update_mat_coeff</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="161" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afb8ad7be7c76b615c208dd3350b64c99" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_ctr_type</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a052484a0897b8994517805c284b12cb6">update_ctr_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="162" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a8b1ec93b5e4882c819d46b41fd557b54" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_ctr_rhs</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbdd8996efcaf9e25066f38ceb6d1a94">update_ctr_rhs</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="163" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aee58ad2e9eb81b9bed6257316e1d133c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_var_type</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a06c4c149d5a16be2a7bf436e3c94cdc2">update_var_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="164" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aaabad07bfd172794f320fc25340ca8dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_var_lb</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_lb</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aef3dabf3018202b60d9ae6254c481700">update_var_lb</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="165" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ae8c96a36adda78e467de03f50017b1c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_var_ub</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_ub</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aa6384ec94a6006df19907e140b8e3f67">update_var_ub</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="166" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aa2d573d4de095236ecf3bf23ad994386" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::update_var_obj</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae226b270b4aafede630156e30f41fea7">update_var_obj</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="167" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_before_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_before_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a6011ffe600f70985dbb808dda523ac73">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a4956a2c6102aebf3a9484d0ff7f96e46">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a4a855c27efcffefc8f78fd16dc9fe7ad">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a4850843cd6b61588860a559650aac54d">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1aab8be367942c63dc38b8d9b1a8d62fac">hook_before_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="68" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_after_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_after_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1ab5e0516fa7a86d515d196c48f62d4444">hook_after_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a8678db892a87725f66c114c19443e07e">hook_after_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="72" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a5b10acfdbea2f7c7d28a7111401c4e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Optimizers::Gurobi::Gurobi</definition>
        <argsstring>(const Model &amp;t_model, bool t_continuous_relaxation, GRBEnv &amp;t_env)</argsstring>
        <name>Gurobi</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_continuous_relaxation</declname>
        </param>
        <param>
          <type>GRBEnv &amp;</type>
          <declname>t_env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="77" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a4b83ccfc46c89d693b2de4677faba232" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Optimizers::Gurobi::Gurobi</definition>
        <argsstring>(const Model &amp;t_model, bool t_continuous_relaxation)</argsstring>
        <name>Gurobi</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_continuous_relaxation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="78" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aab4206502a408db95bcb24b380134022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBEnv &amp;</type>
        <definition>GRBEnv&amp; idol::Optimizers::Gurobi::env</definition>
        <argsstring>()</argsstring>
        <name>env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="80" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1abc400a745632d6a73fb094812526e3e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GRBEnv &amp;</type>
        <definition>const GRBEnv&amp; idol::Optimizers::Gurobi::env</definition>
        <argsstring>() const</argsstring>
        <name>env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="82" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ac197641a79c96107c47c0b20e849d2c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBModel &amp;</type>
        <definition>GRBModel&amp; idol::Optimizers::Gurobi::model</definition>
        <argsstring>()</argsstring>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="84" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1afc475c9ec4fb82e6834da2cbcb0b5aec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GRBModel &amp;</type>
        <definition>const GRBModel&amp; idol::Optimizers::Gurobi::model</definition>
        <argsstring>() const</argsstring>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="86" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1adf06668fcc3794891267a55e6496f67b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string idol::Optimizers::Gurobi::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1f208d4de2375b957812c36009a9a900">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="88" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ab9dae3fb489153a964c3b9e5c493cd44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_time_limit</definition>
        <argsstring>(double t_time_limit) override</argsstring>
        <name>set_param_time_limit</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab21a570955c865a255914bb1627053bb">set_param_time_limit</reimplements>
        <param>
          <type>double</type>
          <declname>t_time_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="90" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aab93f37ed1935bb910e960f8f154a624" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_threads</definition>
        <argsstring>(unsigned int t_thread_limit) override</argsstring>
        <name>set_param_threads</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4">set_param_threads</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>t_thread_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="92" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a4b56aa363f7563f0ca8a56c4e53374b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_best_obj_stop</definition>
        <argsstring>(double t_best_obj_stop) override</argsstring>
        <name>set_param_best_obj_stop</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5babaec019d640cd7828b5ef213ec335">set_param_best_obj_stop</reimplements>
        <param>
          <type>double</type>
          <declname>t_best_obj_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="94" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a06cec1a335cecefa10d91365eccfc012" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_best_bound_stop</definition>
        <argsstring>(double t_best_bound_stop) override</argsstring>
        <name>set_param_best_bound_stop</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab60bc3d2dd159d5f061b997771c91887">set_param_best_bound_stop</reimplements>
        <param>
          <type>double</type>
          <declname>t_best_bound_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aeee8716b23e81312cb98f3592b16a686" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_presolve</definition>
        <argsstring>(bool t_value) override</argsstring>
        <name>set_param_presolve</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ac673045c5d062878f2b75f3b09711f00">set_param_presolve</reimplements>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ad74b099bb65667a81d117cef470058e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_infeasible_or_unbounded_info</definition>
        <argsstring>(bool t_value) override</argsstring>
        <name>set_param_infeasible_or_unbounded_info</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215">set_param_infeasible_or_unbounded_info</reimplements>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ad8f952625c347d78de34fd4dc4ecda9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::add_callback</definition>
        <argsstring>(Callback *t_ptr_to_callback)</argsstring>
        <name>add_callback</name>
        <param>
          <type><ref refid="classidol_1_1Callback" kindref="compound">Callback</ref> *</type>
          <declname>t_ptr_to_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a64b4ccb0327b76cc0ad529f67b0bffd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_lazy_cut</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_lazy_cut</name>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a485d9c89aec222e2201eb6e647c414d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_max_n_solution_in_pool</definition>
        <argsstring>(unsigned int t_value)</argsstring>
        <name>set_max_n_solution_in_pool</name>
        <param>
          <type>unsigned int</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="106" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a529ca155adff98d7422a8ce24d752ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param_logs</definition>
        <argsstring>(bool t_value) override</argsstring>
        <name>set_param_logs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a990981b38cd7f9338ab12ab383061861">set_param_logs</reimplements>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a73054b8acf6a0664434d0998a3cd3d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param</definition>
        <argsstring>(GRB_IntParam t_param, int t_value)</argsstring>
        <name>set_param</name>
        <param>
          <type>GRB_IntParam</type>
          <declname>t_param</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="110" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a32529b235ab1a6f5b672b5d3f572a462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_param</definition>
        <argsstring>(GRB_DoubleParam t_param, double t_value)</argsstring>
        <name>set_param</name>
        <param>
          <type>GRB_DoubleParam</type>
          <declname>t_param</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="112" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a88280645ce1379a569f5c4ab9647c6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_tol_mip_relative_gap</definition>
        <argsstring>(double t_relative_gap_tolerance) override</argsstring>
        <name>set_tol_mip_relative_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf">set_tol_mip_relative_gap</reimplements>
        <param>
          <type>double</type>
          <declname>t_relative_gap_tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a4abc0ef54ea1a7e181b776b996ed0257" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_tol_mip_absolute_gap</definition>
        <argsstring>(double t_absolute_gap_tolerance) override</argsstring>
        <name>set_tol_mip_absolute_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71">set_tol_mip_absolute_gap</reimplements>
        <param>
          <type>double</type>
          <declname>t_absolute_gap_tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a3b03101cf613f63f222e9c6abe5402c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_tol_feasibility</definition>
        <argsstring>(double t_tol_feasibility) override</argsstring>
        <name>set_tol_feasibility</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964">set_tol_feasibility</reimplements>
        <param>
          <type>double</type>
          <declname>t_tol_feasibility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1a1403ed7cb1cc90e9539227ae38f9e1d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_tol_optimality</definition>
        <argsstring>(double t_tol_optimality) override</argsstring>
        <name>set_tol_optimality</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a">set_tol_optimality</reimplements>
        <param>
          <type>double</type>
          <declname>t_tol_optimality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1aee69b69800ee55fa4d11a3a8c4ce1e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Gurobi::set_tol_integer</definition>
        <argsstring>(double t_tol_integer) override</argsstring>
        <name>set_tol_integer</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8">set_tol_integer</reimplements>
        <param>
          <type>double</type>
          <declname>t_tol_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="122" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a4834d37d53abf84d3d9fc5e82021fc17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBVar &amp;</type>
        <definition>GRBVar &amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::operator[]</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="169" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5c42f414626cecc01a239cd33e821c67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GRBVar &amp;</type>
        <definition>const GRBVar &amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::operator[]</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="170" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5ae6a5791fa6aedef8387dc3cf50ee65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBConstr &amp;</type>
        <definition>GRBConstr &amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::operator[]</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="172" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1adddb50b20a799ab42a66b5aa033fd731" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GRBConstr &amp;</type>
        <definition>const GRBConstr &amp; idol::OptimizerWithLazyUpdates&lt; GRBVar , GRBConstr , GRBQConstr  &gt;::operator[]</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="173" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const ::<ref refid="classidol_1_1Model" kindref="compound">idol::Model</ref> &amp;</type>
        <definition>virtual const ::idol::Model&amp; idol::impl::Optimizer::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="104" column="34" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_logs</definition>
        <argsstring>() const</argsstring>
        <name>get_param_logs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="132" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_time_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_time_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="136" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_thread_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_thread_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="140" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_obj_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_obj_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="144" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_bound_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_bound_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="148" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_relative_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_relative_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="152" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_absolute_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_absolute_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="156" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_feasibility</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_feasibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="160" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_optimality</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_optimality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="164" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_integer</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="168" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_iteration_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_iteration_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="172" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::set_param_iteration_limit</definition>
        <argsstring>(unsigned int t_iteration_limit)</argsstring>
        <name>set_param_iteration_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>t_iteration_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="174" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_presolve</definition>
        <argsstring>() const</argsstring>
        <name>get_param_presolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="176" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_infeasible_or_unbounded_info</definition>
        <argsstring>() const</argsstring>
        <name>get_param_infeasible_or_unbounded_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="180" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const Timer&amp; idol::impl::Optimizer::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="184" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_remaining_time</definition>
        <argsstring>() const</argsstring>
        <name>get_remaining_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="186" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is_terminated</definition>
        <argsstring>() const</argsstring>
        <name>is_terminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="188" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a4468720781d9278f1e2d6628a3a00e7b">terminate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="190" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>()</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="192" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="200" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="208" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="208" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Gurobi_1ac746152460a1a693b349158e7f6c6711" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>static Model idol::Optimizers::Gurobi::read_from_file</definition>
        <argsstring>(Env &amp;t_env, const std::string &amp;t_filename)</argsstring>
        <name>read_from_file</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="124" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="2">
        <label>idol::OptimizerWithLazyUpdates&lt; GRBVar, GRBConstr, GRBQConstr &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; GRBVar, GRBConstr, GRBQConstr &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::Optimizers::Gurobi</label>
        <link refid="classidol_1_1Optimizers_1_1Gurobi"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="2">
        <label>idol::OptimizerWithLazyUpdates&lt; GRBVar, GRBConstr, GRBQConstr &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; GRBVar, GRBConstr, GRBQConstr &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::Optimizers::Gurobi</label>
        <link refid="classidol_1_1Optimizers_1_1Gurobi"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" line="21" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h" bodystart="21" bodyend="125"/>
    <listofallmembers>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1afa0e18dff0504fd87ad6e8ffc1a98564" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>::idol::GurobiCallbackI</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae68fe72079e1eba2ec7d464a1f7148bb" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a39c8f0f97dd71dbb94bd2c98f3bf0de5" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a007f09ad057ab0298292a2c39b97e505" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>add</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ad8f952625c347d78de34fd4dc4ecda9d" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>add_callback</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>as</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>as</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a630789e6aa5c4360b9d90f09365f446b" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>build</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aab4206502a408db95bcb24b380134022" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>env</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1abc400a745632d6a73fb094812526e3e1" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>env</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ac0bc995deaa8e3ee3deef82ff040e7d9" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_absolute_gap</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a77a3ef31644aa84ded7f790fe5c32d86" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_best_bound</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a5de604aba68bb4b590555cb8ad3a49ee" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_best_obj</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a77c718102a84a3c1131bb5c63eec285e" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_ctr_dual</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a6e3ade84ebaee5d56bc6072170fdf91b" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_ctr_farkas</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ad94adfa3f5f7dd31c96f473832ede341" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_global_env</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1acdde6954305c2b37c9df7806bdc461cd" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_n_solutions</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_best_bound_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_iteration_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_logs</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_thread_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_param_time_limit</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aca44ba846eb366376ed953a52b670b5f" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_reason</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a125fdb884d065d7a47fde9f7e845040e" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_remaining_time</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aabd8912b14f52d53825041178e63bfd8" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_solution_index</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a3948fcad9247660ab3732d2841602100" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_status</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_tol_optimality</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1adda90015392c068ae871e0bc65e0bfd9" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_var_primal</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a146fb31702dbad4b090f8dbbe603ab0f" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_var_ray</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1abb34f8c8e89718d4034d07f5ff75c906" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>get_var_reduced_cost</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a5b10acfdbea2f7c7d28a7111401c4e14" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>Gurobi</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a4b83ccfc46c89d693b2de4677faba232" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>Gurobi</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a7fca6dcc459aa2c70e23a45d474241d5" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>gurobi_ctr_type</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a2b01ff9f2a8239a14c1fa40d6b5a65db" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>gurobi_numeric</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1abc198bc64266db243d8cc7e1879c48f2" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>gurobi_obj_sense</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a090df66d877ebb56dbc4aa6a94e911ce" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>gurobi_status</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aa5b7ee4396aade8dae43639bf916db95" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>gurobi_var_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a65635482c5ff4e2fc8f99082241ec0a0" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7f2b5aad53e2210b47c353aded11c79f" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7d5b40d340a6fce3ba3e1b73a5a08714" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a65d8ca81e524fdd096333bc19228501b" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_add</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1acbef957eccacad32464a290e41d2f131" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_add</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1adf74841ce391db447a2e5272431514c6" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_add</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_after_optimize</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_before_optimize</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a0954c7caf588504cf44c17ed4498084c" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_build</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a0b709dbfe03390262f6901724de757f5" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_optimize</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ad4df7941816357f1bfff4d9bf4a1d88c" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a5ebd9540e01f37ce9d8ffd5cbd3bc049" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1af2ba0e31d4defff1b672f6e92f4f8eb2" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a2390530125df42cd7b5dab8bb4091661" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a05dbbba1e01b08df9e73e2385a4b8936" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a156584f1c2c41220971861e5b79938d1" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a0c967f1127a5cdf49310e24af561ac08" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update_matrix</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a47d4fb72e99ed188a1ec3ee756505c05" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update_objective</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a03a84aaae1820b518fd97747f00ec7f4" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update_objective_sense</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a394a68a71799f21e77e047c6d83ce78c" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_update_rhs</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a4718ec1b6b73186f7e77b030d8a10ea1" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>hook_write</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1afc102e0ac43b6cf3da6a663012e1548d" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>idol_ctr_type</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1af3697a8d49a111c7ca57604445f6379e" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>idol_obj_sense</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a59336ce4ac73fe00bf28df814d845e90" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>idol_var_type</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>is</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a8b1dc43b7891e877e7a6e7dd34929ce4" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>is_objective_to_be_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9f69bb47e6dd5ac615a8a51fe4544b80" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>is_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>is_terminated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6c1afcf23f38a2737fdf11061389f67c" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af58b3e24778f08afcc38333c5f8b65ec" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a309d86fe0936e5568fbaab2935df2c34" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af642c3171a81d4c882f3faae64436845" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a0cae683a08a13fa7011ef18d0adfc941" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ace3668185e49027f7947da1f54e5c810" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6bf8afd70409d3200aa082570eaf4bbe" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a006b54d15a15e1e63fe0c8f8d31f53ac" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6677b0b0edce78a13a445b4f6c18b730" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae52fea4d7bf677519cea43e60817201b" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aef94789320776a4f70825168435a012f" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy_vars</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afc506aff3d625dcdd97c938e81110f18" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>lazy_vars</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ae929858410bb0eb3d5629a65dee794a4" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>m_continuous_relaxation</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a10f58e7f7491d9c2c7415abd456c0a6a" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>m_env</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a7a32a4c6a725441db03133ed69fe6ea7" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>m_gurobi_callback</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ad89368c1cceaa5285ad8f5c093d03f7b" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>m_model</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ac197641a79c96107c47c0b20e849d2c3" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>model</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1afc475c9ec4fb82e6834da2cbcb0b5aec" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>model</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1adf06668fcc3794891267a55e6496f67b" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>name</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a4834d37d53abf84d3d9fc5e82021fc17" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5c42f414626cecc01a239cd33e821c67" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5ae6a5791fa6aedef8387dc3cf50ee65" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1adddb50b20a799ab42a66b5aa033fd731" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>operator[]</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>optimize</name></member>
      <member refid="classidol_1_1Optimizer_1a8793c25aaba434c6b7e9a85bcca48e16" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>Optimizer</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a7bf7b4a5701c3ecb8dd24900b83511fc" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>OptimizerWithLazyUpdates</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>parent</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ac746152460a1a693b349158e7f6c6711" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>read_from_file</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a1a7cb07f04700f1201e8e5582c77896c" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a722b4d13c44fc48634e5455f6b5e8334" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a85690c369dd198e9aa2ba265a980c18a" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a8a55f664263836b645bc624701e620f4" prot="private" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>s_global_env</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a64b4ccb0327b76cc0ad529f67b0bffd5" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_lazy_cut</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a485d9c89aec222e2201eb6e647c414d6" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_max_n_solution_in_pool</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a11ca673abf5ddf1144f1739f5bacee06" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_objective_as_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a327b4587f09989707669fbdd9cb6c3a4" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_objective_to_be_updated</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a73054b8acf6a0664434d0998a3cd3d04" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a32529b235ab1a6f5b672b5d3f572a462" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a06cec1a335cecefa10d91365eccfc012" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_best_bound_stop</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a4b56aa363f7563f0ca8a56c4e53374b9" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_best_obj_stop</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ad74b099bb65667a81d117cef470058e1" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_iteration_limit</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a529ca155adff98d7422a8ce24d752ff1" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_logs</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aeee8716b23e81312cb98f3592b16a686" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_presolve</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aab93f37ed1935bb910e960f8f154a624" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_threads</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1ab9dae3fb489153a964c3b9e5c493cd44" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_param_time_limit</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1acd9d0bbe49db1c4545a2d69d5b2b8109" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_rhs_as_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a704351d769bd3464f55eecef9997b50c" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a1afb4f54cf2507f8c2024e28141a2e7b" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_solution_index</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a3b03101cf613f63f222e9c6abe5402c6" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_tol_feasibility</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1aee69b69800ee55fa4d11a3a8c4ce1e19" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_tol_integer</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a4abc0ef54ea1a7e181b776b996ed0257" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a88280645ce1379a569f5c4ab9647c6cd" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a1403ed7cb1cc90e9539227ae38f9e1d9" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>set_tol_optimality</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>terminate</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>time</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a036d978c29e99ab33b64f6dcbdd23969" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a8b1ec93b5e4882c819d46b41fd557b54" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_ctr_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afb8ad7be7c76b615c208dd3350b64c99" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_ctr_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9e779d8f2bd1c01ff5bbaa42a03c757f" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_mat_coeff</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aecbceed05a1697acb2de727182e55656" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_obj</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae4facf4fab6fdfa8f7723d0e4f0c4d76" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_obj_constant</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6f9883562fa7ef834bcdfb661141f490" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_obj_sense</name></member>
      <member refid="classidol_1_1Optimizers_1_1Gurobi_1a88c45df8ab4b8c2e9cd29102c2b86664" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_objective_constant</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ac5083ad9bce94d8d0fc398e65e05ecb7" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aaabad07bfd172794f320fc25340ca8dd" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_var_lb</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aa2d573d4de095236ecf3bf23ad994386" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_var_obj</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aee58ad2e9eb81b9bed6257316e1d133c" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_var_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ae8c96a36adda78e467de03f50017b1c3" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>update_var_ub</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afe001d934289f73d5027667a2ad724d3" prot="protected" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>write</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a87f1a4dcd75963657f0577387bfa3dea" prot="public" virt="virtual"><scope>idol::Optimizers::Gurobi</scope><name>~Optimizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
