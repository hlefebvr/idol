<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DefaultNodeUpdator" kind="class" language="C++" prot="public">
    <compoundname>idol::DefaultNodeUpdator</compoundname>
    <basecompoundref refid="classidol_1_1NodeUpdator" prot="public" virt="non-virtual">idol::NodeUpdator&lt; NodeInfoT &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class NodeInfoT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1DefaultNodeUpdator_1a2cc0a6e61f400bd2661ba8dad60d699b" prot="private" static="no" mutable="no">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="23" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeUpdator_1a75af45a77a8d9dfb8732b15e0977793e" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model&amp; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::m_relaxation</definition>
        <argsstring></argsstring>
        <name>m_relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="24" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeUpdator_1a6a67a609621d21dd11bab090541d57a0" prot="private" static="no" mutable="no">
        <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, double &gt;</type>
        <definition>Map&lt;Var, double&gt; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::m_changed_lower_bounds</definition>
        <argsstring></argsstring>
        <name>m_changed_lower_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="26" column="9" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeUpdator_1a425fb16e4fcf05aa5596134661a4f4c3" prot="private" static="no" mutable="no">
        <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, double &gt;</type>
        <definition>Map&lt;Var, double&gt; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::m_changed_upper_bounds</definition>
        <argsstring></argsstring>
        <name>m_changed_upper_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="27" column="9" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DefaultNodeUpdator_1a7dae4285c5292907eb05cc1e55b7f31c" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &gt;</type>
        <definition>std::list&lt;Ctr&gt; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::m_added_constraints</definition>
        <argsstring></argsstring>
        <name>m_added_constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="28" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a5f07bf8341d388451609a4f07ec88c61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::apply_variable_branching_decisions</definition>
        <argsstring>(const Node&lt; NodeInfoT &gt; &amp;t_node, Map&lt; Var, double &gt; &amp;t_changed_lower_bounds, Map&lt; Var, double &gt; &amp;t_changed_upper_bounds)</argsstring>
        <name>apply_variable_branching_decisions</name>
        <param>
          <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
          <declname>t_node</declname>
        </param>
        <param>
          <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, double &gt; &amp;</type>
          <declname>t_changed_lower_bounds</declname>
        </param>
        <param>
          <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, double &gt; &amp;</type>
          <declname>t_changed_upper_bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="30" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="116" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a2a00d8177a7f0189ee18f8d359aa03e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::apply_variable_branching_decision</definition>
        <argsstring>(const VarBranchingDecision &amp;t_branching_decision, Map&lt; Var, double &gt; &amp;t_current_changed_bounds, Map&lt; Var, double &gt; &amp;t_changed_bounds)</argsstring>
        <name>apply_variable_branching_decision</name>
        <param>
          <type>const <ref refid="structidol_1_1VarBranchingDecision" kindref="compound">VarBranchingDecision</ref> &amp;</type>
          <declname>t_branching_decision</declname>
        </param>
        <param>
          <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, double &gt; &amp;</type>
          <declname>t_current_changed_bounds</declname>
        </param>
        <param>
          <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, double &gt; &amp;</type>
          <declname>t_changed_bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="34" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="145" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a46b880a4058d0a6b9b7ba3637ad20450" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::apply_constraint_branching_decisions</definition>
        <argsstring>(const Node&lt; NodeInfoT &gt; &amp;t_node)</argsstring>
        <name>apply_constraint_branching_decisions</name>
        <param>
          <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
          <declname>t_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="38" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="58" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a0137311bf5667cc9cab1420a22880498" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::DefaultNodeUpdator&lt; NodeT &gt;::DefaultNodeUpdator</definition>
        <argsstring>(const Model &amp;t_parent, Model &amp;t_relaxation)</argsstring>
        <name>DefaultNodeUpdator</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_parent</declname>
        </param>
        <param>
          <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_relaxation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="40" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a8100fadca3616ff9f7c4862b5292c2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::DefaultNodeUpdator</definition>
        <argsstring>(const DefaultNodeUpdator &amp;)=delete</argsstring>
        <name>DefaultNodeUpdator</name>
        <param>
          <type>const <ref refid="classidol_1_1DefaultNodeUpdator" kindref="compound">DefaultNodeUpdator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1afddbee41e5727b4b5c06976471c8de36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="classidol_1_1NodeUpdator_1ae8d3d20ca5a30986986dad5fea64fd75">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="44" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1ae17f6831c6cda32417c79c65e7c58ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::prepare</definition>
        <argsstring>(const Node&lt; NodeInfoT &gt; &amp;t_node) override</argsstring>
        <name>prepare</name>
        <reimplements refid="classidol_1_1NodeUpdator_1a3d3feb5359b21a9b0aae2636380400c7">prepare</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
          <declname>t_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="46" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a7978e323ece5e28f3b1f8a7f645f2f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="classidol_1_1NodeUpdator_1adbd492819770b2bedbcf6bd2c488d7f9">clear</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="48" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="80" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1a7bfd4afe4ecc775174016b98b1e9e4d3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model&amp; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::relaxation</definition>
        <argsstring>()</argsstring>
        <name>relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="51" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DefaultNodeUpdator_1aa3ca20b0c72aa9e907fa005b4f5d09c1" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; idol::DefaultNodeUpdator&lt; NodeInfoT &gt;::relaxation</definition>
        <argsstring>() const</argsstring>
        <name>relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="53" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="53" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::DefaultNodeUpdator&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1DefaultNodeUpdator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::NodeUpdator&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeUpdator"/>
      </node>
      <node id="2">
        <label>idol::NodeUpdator&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1NodeUpdator"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NodeInfoT &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::DefaultNodeUpdator&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1DefaultNodeUpdator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::NodeUpdator&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeUpdator"/>
      </node>
      <node id="2">
        <label>idol::NodeUpdator&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1NodeUpdator"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; NodeInfoT &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" line="21" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h" bodystart="21" bodyend="54"/>
    <listofallmembers>
      <member refid="classidol_1_1DefaultNodeUpdator_1a46b880a4058d0a6b9b7ba3637ad20450" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>apply_constraint_branching_decisions</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a2a00d8177a7f0189ee18f8d359aa03e5" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>apply_variable_branching_decision</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a5f07bf8341d388451609a4f07ec88c61" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>apply_variable_branching_decisions</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a7978e323ece5e28f3b1f8a7f645f2f06" prot="public" virt="virtual"><scope>idol::DefaultNodeUpdator</scope><name>clear</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a0137311bf5667cc9cab1420a22880498" prot="public" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>DefaultNodeUpdator</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a8100fadca3616ff9f7c4862b5292c2bc" prot="public" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>DefaultNodeUpdator</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1afddbee41e5727b4b5c06976471c8de36" prot="public" virt="virtual"><scope>idol::DefaultNodeUpdator</scope><name>initialize</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a7dae4285c5292907eb05cc1e55b7f31c" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>m_added_constraints</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a6a67a609621d21dd11bab090541d57a0" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>m_changed_lower_bounds</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a425fb16e4fcf05aa5596134661a4f4c3" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>m_changed_upper_bounds</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a2cc0a6e61f400bd2661ba8dad60d699b" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>m_parent</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a75af45a77a8d9dfb8732b15e0977793e" prot="private" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>m_relaxation</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1ae17f6831c6cda32417c79c65e7c58ae9" prot="public" virt="virtual"><scope>idol::DefaultNodeUpdator</scope><name>prepare</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1a7bfd4afe4ecc775174016b98b1e9e4d3" prot="protected" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>relaxation</name></member>
      <member refid="classidol_1_1DefaultNodeUpdator_1aa3ca20b0c72aa9e907fa005b4f5d09c1" prot="protected" virt="non-virtual"><scope>idol::DefaultNodeUpdator</scope><name>relaxation</name></member>
      <member refid="classidol_1_1NodeUpdator_1a3609a4134b1e53db0ddf7e2557dba2fe" prot="public" virt="virtual"><scope>idol::DefaultNodeUpdator</scope><name>~NodeUpdator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
