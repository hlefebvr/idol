<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1BranchAndBoundCallbackI" kind="class" language="C++" prot="public">
    <compoundname>idol::BranchAndBoundCallbackI</compoundname>
    <basecompoundref refid="classidol_1_1AbstractBranchAndBoundCallbackI" prot="public" virt="non-virtual">idol::AbstractBranchAndBoundCallbackI&lt; NodeInfoT &gt;</basecompoundref>
    <includes refid="BranchAndBoundCallback_8h" local="no">BranchAndBoundCallback.h</includes>
    <templateparamlist>
      <param>
        <type>class NodeInfoT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classidol_1_1BranchAndBoundCallbackI_1a70ae6298a0c58a571dd7b146ca17f09e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BranchAndBoundCallback&lt; NodeInfoT &gt;</definition>
        <argsstring></argsstring>
        <name>BranchAndBoundCallback&lt; NodeInfoT &gt;</name>
        <param>
          <type><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback</ref>&lt; NodeInfoT &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="398" column="36" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1BranchAndBoundCallbackI_1a259f9918f433d15a349722eabcd5e46a" prot="private" static="no" mutable="no">
        <type>std::list&lt; std::unique_ptr&lt; <ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback</ref>&lt; NodeInfoT &gt; &gt; &gt;</type>
        <definition>std::list&lt;std::unique_ptr&lt;BranchAndBoundCallback&lt;NodeInfoT&gt; &gt; &gt; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::m_callbacks</definition>
        <argsstring></argsstring>
        <name>m_callbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="30" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1BranchAndBoundCallbackI_1a1b7e1a7a46596c2a2882e3ef0ed116ec" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; *</type>
        <definition>Optimizers::BranchAndBound&lt;NodeInfoT&gt;* idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="32" column="32" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1BranchAndBoundCallbackI_1af2c9dfb2ef17834a61235dfca3f1449b" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &gt;</type>
        <definition>std::optional&lt;Node&lt;NodeInfoT&gt; &gt; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::m_node</definition>
        <argsstring></argsstring>
        <name>m_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="33" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1BranchAndBoundCallbackI_1a749bcea5b4bc3f79f7b44e994414b8d6" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> *</type>
        <definition>Model* idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::m_relaxation</definition>
        <argsstring></argsstring>
        <name>m_relaxation</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="34" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1BranchAndBoundCallbackI_1adc112edb5de8db35d33b5b974d095ac2" prot="private" static="no" mutable="no">
        <type><ref refid="structidol_1_1SideEffectRegistry" kindref="compound">SideEffectRegistry</ref> *</type>
        <definition>SideEffectRegistry* idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::m_registry</definition>
        <argsstring></argsstring>
        <name>m_registry</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="35" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a0d12b66b511e52bc715937efd1f5b098" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::~BranchAndBoundCallbackI</definition>
        <argsstring>()=default</argsstring>
        <name>~BranchAndBoundCallbackI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="38" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a7ac7aab7b05884b48ca6a02b39d04439" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::add_user_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_user_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="40" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1ace57aaf27ced478c603e8e251119d4ad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::add_lazy_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_lazy_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="42" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a7a085c5ec7d20b1f42d7fb75ea7c1b3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::add_local_variable_branching</definition>
        <argsstring>(const idol::Var &amp;t_var, CtrType t_type, double t_rhs)</argsstring>
        <name>add_local_variable_branching</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">idol::Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="44" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a8e46fcb56359e635cb9a6f3f66767b75" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
        <definition>const idol::Node&lt; NodeInfoT &gt; &amp; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::node</definition>
        <argsstring>() const</argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="46" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="384" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a0a83395d3abec5aec8b24f46277cada5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const idol::Model &amp; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::relaxation</definition>
        <argsstring>() const</argsstring>
        <name>relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="48" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="376" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a06eb343c0c317bac30019991cfb43961" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const idol::Model &amp; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::original_model</definition>
        <argsstring>() const</argsstring>
        <name>original_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="50" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="368" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a54f6b3f967f8ef11abd25459ebdaf508" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const idol::Timer &amp; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="52" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1aad06bc90c1406d0d3f2b2d4e42ebdca0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structidol_1_1SideEffectRegistry" kindref="compound">SideEffectRegistry</ref> &amp;</type>
        <definition>const idol::SideEffectRegistry &amp; idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::side_effect_registry</definition>
        <argsstring>() const</argsstring>
        <name>side_effect_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="54" column="31" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a44da1a13fc086cc476bdc4e69ff651c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::submit_heuristic_solution</definition>
        <argsstring>(NodeInfoT *t_info)</argsstring>
        <name>submit_heuristic_solution</name>
        <param>
          <type>NodeInfoT *</type>
          <declname>t_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="56" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="360" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1abd8cd0862e5b6ee515102f4143fab9f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::submit_bound</definition>
        <argsstring>(double t_bound)</argsstring>
        <name>submit_bound</name>
        <param>
          <type>double</type>
          <declname>t_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="58" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="352" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a9a6f2de926a7039e1d3004a0330cb36b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::best_bound</definition>
        <argsstring>() const</argsstring>
        <name>best_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="60" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1af536383118ab182a3cec2f0632c2a33e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::best_obj</definition>
        <argsstring>() const</argsstring>
        <name>best_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="62" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1aff69fa3adbc2921b3dcc84b295ac48d9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="64" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a4b865a1af501c6acf03d550da5e2e3f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structidol_1_1SideEffectRegistry" kindref="compound">SideEffectRegistry</ref></type>
        <definition>idol::SideEffectRegistry idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::operator()</definition>
        <argsstring>(Optimizers::BranchAndBound&lt; NodeInfoT &gt; *t_parent, CallbackEvent t_event, const Node&lt; NodeInfoT &gt; &amp;t_current_node, Model *t_relaxation) override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1AbstractBranchAndBoundCallbackI_1ae83aa447c1db18961eb866e7409f3141">operator()</reimplements>
        <param>
          <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; *</type>
          <declname>t_parent</declname>
        </param>
        <param>
          <type>CallbackEvent</type>
          <declname>t_event</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
          <declname>t_current_node</declname>
        </param>
        <param>
          <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> *</type>
          <declname>t_relaxation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="66" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="306" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1aed848d624b25acf8f3f5cb5d64929f2e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::add_callback</definition>
        <argsstring>(BranchAndBoundCallback&lt; NodeInfoT &gt; *t_cb) override</argsstring>
        <name>add_callback</name>
        <reimplements refid="classidol_1_1AbstractBranchAndBoundCallbackI_1a9c61590858595bb8462ab80730700771">add_callback</reimplements>
        <param>
          <type><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback</ref>&lt; NodeInfoT &gt; *</type>
          <declname>t_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="72" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a3fa12f736a0b28558012f8c099572f8f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::initialize</definition>
        <argsstring>(Optimizers::BranchAndBound&lt; NodeInfoT &gt; *t_parent) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classidol_1_1AbstractBranchAndBoundCallbackI_1a7aeb8f84557528cfd166e9769cc15beb">initialize</reimplements>
        <param>
          <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; *</type>
          <declname>t_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="74" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="337" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackI_1a4ae2d19f3fb897365e083ecfe597ffeb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;::log_after_termination</definition>
        <argsstring>() override</argsstring>
        <name>log_after_termination</name>
        <reimplements refid="classidol_1_1AbstractBranchAndBoundCallbackI_1acafce33ac1243b2877e7b5437fc6cece">log_after_termination</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="76" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="101" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NodeInfoT</parametername>
</parameternamelist>
<parameterdescription>
<para>the class used to store each branch-and-tree node&apos;s information </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::AbstractBranchAndBoundCallbackI&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1AbstractBranchAndBoundCallbackI"/>
      </node>
      <node id="1">
        <label>idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackI"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>idol::AbstractBranchAndBoundCallbackI&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1AbstractBranchAndBoundCallbackI"/>
      </node>
      <node id="1">
        <label>idol::BranchAndBoundCallbackI&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackI"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="27" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="27" bodyend="77"/>
    <listofallmembers>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1aed848d624b25acf8f3f5cb5d64929f2e" prot="protected" virt="virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>add_callback</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1ace57aaf27ced478c603e8e251119d4ad" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>add_lazy_cut</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a7a085c5ec7d20b1f42d7fb75ea7c1b3b" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>add_local_variable_branching</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a7ac7aab7b05884b48ca6a02b39d04439" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>add_user_cut</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a9a6f2de926a7039e1d3004a0330cb36b" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>best_bound</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1af536383118ab182a3cec2f0632c2a33e" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>best_obj</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a70ae6298a0c58a571dd7b146ca17f09e" prot="private" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>BranchAndBoundCallback&lt; NodeInfoT &gt;</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a3fa12f736a0b28558012f8c099572f8f" prot="protected" virt="virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>initialize</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a4ae2d19f3fb897365e083ecfe597ffeb" prot="protected" virt="virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>log_after_termination</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a259f9918f433d15a349722eabcd5e46a" prot="private" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>m_callbacks</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1af2c9dfb2ef17834a61235dfca3f1449b" prot="private" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>m_node</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a1b7e1a7a46596c2a2882e3ef0ed116ec" prot="private" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>m_parent</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1adc112edb5de8db35d33b5b974d095ac2" prot="private" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>m_registry</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a749bcea5b4bc3f79f7b44e994414b8d6" prot="private" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>m_relaxation</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a8e46fcb56359e635cb9a6f3f66767b75" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>node</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a4b865a1af501c6acf03d550da5e2e3f4" prot="protected" virt="virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>operator()</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a06eb343c0c317bac30019991cfb43961" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>original_model</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a0a83395d3abec5aec8b24f46277cada5" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>relaxation</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1aad06bc90c1406d0d3f2b2d4e42ebdca0" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>side_effect_registry</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1abd8cd0862e5b6ee515102f4143fab9f4" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>submit_bound</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a44da1a13fc086cc476bdc4e69ff651c8" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>submit_heuristic_solution</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1aff69fa3adbc2921b3dcc84b295ac48d9" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>terminate</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a54f6b3f967f8ef11abd25459ebdaf508" prot="protected" virt="non-virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>time</name></member>
      <member refid="classidol_1_1AbstractBranchAndBoundCallbackI_1a90935acf56a7717ec508d7b459509caa" prot="public" virt="virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>~AbstractBranchAndBoundCallbackI</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackI_1a0d12b66b511e52bc715937efd1f5b098" prot="public" virt="virtual"><scope>idol::BranchAndBoundCallbackI</scope><name>~BranchAndBoundCallbackI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
