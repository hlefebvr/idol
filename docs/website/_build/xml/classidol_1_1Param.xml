<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Param" kind="class" language="C++" prot="public">
    <compoundname>idol::Param</compoundname>
    <includes refid="Param_8h" local="no">Param.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Param_1a5d77e3a047102568987f531542e2ed73" prot="private" static="no" mutable="no">
        <type>std::variant&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &gt;</type>
        <definition>std::variant&lt;Var, Ctr&gt; idol::Param::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="36" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Param_1abddc89cb7892eb4841efd6c219f8cfc1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Param::Param</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>Param</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para>Creates a new parameter associated to a variable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_var</parametername>
</parameternamelist>
<parameterdescription>
<para>The variable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="44" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1abd6102b12d3fccbf8ea7bdda12beda97" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Param::Param</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>Param</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para>Creates a new parameter associated to a constraint. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_var</parametername>
</parameternamelist>
<parameterdescription>
<para>The constraint. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="52" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1aeaf61eb9ea6b75a37e0ff1554e24358b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Param::Param</definition>
        <argsstring>(const Param &amp;t_param)=default</argsstring>
        <name>Param</name>
        <param>
          <type>const <ref refid="classidol_1_1Param" kindref="compound">Param</ref> &amp;</type>
          <declname>t_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="58" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1a7928ae7e1cd355ab0b3c5ef5442c8d68" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Param::Param</definition>
        <argsstring>(Param &amp;&amp;t_param) noexcept=default</argsstring>
        <name>Param</name>
        <param>
          <type><ref refid="classidol_1_1Param" kindref="compound">Param</ref> &amp;&amp;</type>
          <declname>t_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1a9a48a5908c5ae06e0ccacb5b4ba2aa53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Param" kindref="compound">Param</ref> &amp;</type>
        <definition>Param&amp; idol::Param::operator=</definition>
        <argsstring>(const Param &amp;t_param)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classidol_1_1Param" kindref="compound">Param</ref> &amp;</type>
          <declname>t_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy-assignment operator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>*this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="71" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1ae34b10595739f230546d52a533625dca" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classidol_1_1Param" kindref="compound">Param</ref> &amp;</type>
        <definition>Param&amp; idol::Param::operator=</definition>
        <argsstring>(Param &amp;&amp;t_param) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classidol_1_1Param" kindref="compound">Param</ref> &amp;&amp;</type>
          <declname>t_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move-assignment operator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>*this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="78" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1a3a60236e5a635f6611c172b74777d93a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool idol::Param::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the parameter represents on object of the class <computeroutput>T</computeroutput>, false otherwise. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to be tested. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the parameter represents on object of the class <computeroutput>T</computeroutput>, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="85" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1a219e93e421a4cb640896c8e9a73cfea7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T idol::Param::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the optimization object behind the parameter.</para>
<para><bold>Example</bold>: <programlisting filename=".cpp"><codeline><highlight class="normal">Var<sp/>x<sp/>=<sp/>model.add_var(0.,<sp/>1.,<sp/>Continuous,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classidol_1_1Param_1abddc89cb7892eb4841efd6c219f8cfc1" kindref="member">Param</ref><sp/>param<sp/>=<sp/>!x;</highlight></codeline>
<codeline><highlight class="normal">Var<sp/>var<sp/>=<sp/>param.as&lt;Var&gt;();<sp/></highlight><highlight class="comment">//<sp/>&quot;x&quot;</highlight></codeline>
</programlisting> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The optimization object behind the parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="99" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1a41243b2248da219ea1467bb0898e025a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Param::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the id of the object behind the parameter. <simplesect kind="return"><para>The id of the object behind the parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="105" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Param_1a9d55706afcb122e012922fdbec7f707a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; idol::Param::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the name of the object behind the parameter. <simplesect kind="return"><para>The name of the object behind the parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="111" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Parameter modeling-old object.</para>
<para>This class is used to model parameters for optimization models. More precisely, it represents a variable, or a constraint, from a model <computeroutput>A</computeroutput> which is considered constant in another model <computeroutput>B</computeroutput>.</para>
<para>Parameters are created using the <computeroutput><ref refid="classidol_1_1Param" kindref="compound">Param</ref></computeroutput> constructors or by prepending a variable, or a constraint, by the <computeroutput>!</computeroutput> symbol.</para>
<para><bold>Example</bold>: <programlisting filename=".cpp"><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parametrized_expression<sp/>=<sp/>2<sp/>*<sp/>!x<sp/>*<sp/>y;<sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>x<sp/>is<sp/>viewed<sp/>as<sp/>a<sp/>constant</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>idol::Param</label>
        <link refid="classidol_1_1Param"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" line="35" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/parameters/Param.h" bodystart="35" bodyend="112"/>
    <listofallmembers>
      <member refid="classidol_1_1Param_1a219e93e421a4cb640896c8e9a73cfea7" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>as</name></member>
      <member refid="classidol_1_1Param_1a41243b2248da219ea1467bb0898e025a" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>id</name></member>
      <member refid="classidol_1_1Param_1a3a60236e5a635f6611c172b74777d93a" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>is</name></member>
      <member refid="classidol_1_1Param_1a5d77e3a047102568987f531542e2ed73" prot="private" virt="non-virtual"><scope>idol::Param</scope><name>m_value</name></member>
      <member refid="classidol_1_1Param_1a9d55706afcb122e012922fdbec7f707a" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>name</name></member>
      <member refid="classidol_1_1Param_1a9a48a5908c5ae06e0ccacb5b4ba2aa53" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>operator=</name></member>
      <member refid="classidol_1_1Param_1ae34b10595739f230546d52a533625dca" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>operator=</name></member>
      <member refid="classidol_1_1Param_1abddc89cb7892eb4841efd6c219f8cfc1" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>Param</name></member>
      <member refid="classidol_1_1Param_1abd6102b12d3fccbf8ea7bdda12beda97" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>Param</name></member>
      <member refid="classidol_1_1Param_1aeaf61eb9ea6b75a37e0ff1554e24358b" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>Param</name></member>
      <member refid="classidol_1_1Param_1a7928ae7e1cd355ab0b3c5ef5442c8d68" prot="public" virt="non-virtual"><scope>idol::Param</scope><name>Param</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
