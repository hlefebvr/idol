<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::DantzigWolfe::DualPriceSmoothingStabilization</compoundname>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1Neame" prot="public" virt="non-virtual">idol::DantzigWolfe::Neame</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1NoStabilization" prot="public" virt="non-virtual">idol::DantzigWolfe::NoStabilization</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1Wentges" prot="public" virt="non-virtual">idol::DantzigWolfe::Wentges</derivedcompoundref>
    <innerclass refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy" prot="public">idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1a9297387ee0dd0eb20b85f7c8b6f72ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::DantzigWolfe::DualPriceSmoothingStabilization::~DualPriceSmoothingStabilization</definition>
        <argsstring>()=default</argsstring>
        <name>~DualPriceSmoothingStabilization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="16" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1a720effa06e6f5befd7e055ecd3882537" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy" kindref="compound">Strategy</ref> *</type>
        <definition>virtual Strategy* idol::DantzigWolfe::DualPriceSmoothingStabilization::operator()</definition>
        <argsstring>() const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Neame_1a8018a75912c648a1ad034c45f4654a2b">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1afa7c0657cc9003d5ca540b60605f1cd2">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Wentges_1af474a31a163928118f8696297688de9c">operator()</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="29" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1a790f93b44bab32e04cb30ec6b7374ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization" kindref="compound">DualPriceSmoothingStabilization</ref> *</type>
        <definition>virtual DualPriceSmoothingStabilization* idol::DantzigWolfe::DualPriceSmoothingStabilization::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Neame_1ae0fc60e622e94b4b2076e0521a966fc8">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1a714b0851f6fa0255af55ac4176ed1483">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Wentges_1a01364e0f03fdbc85c40dd38d83c1ae77">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="31" column="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::DantzigWolfe::DualPriceSmoothingStabilization</label>
        <link refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization"/>
      </node>
      <node id="2">
        <label>idol::DantzigWolfe::Neame</label>
        <link refid="classidol_1_1DantzigWolfe_1_1Neame"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::DantzigWolfe::NoStabilization</label>
        <link refid="classidol_1_1DantzigWolfe_1_1NoStabilization"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>idol::DantzigWolfe::Wentges</label>
        <link refid="classidol_1_1DantzigWolfe_1_1Wentges"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::DantzigWolfe::DualPriceSmoothingStabilization</label>
        <link refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="14" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" bodystart="14" bodyend="32"/>
    <listofallmembers>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1a790f93b44bab32e04cb30ec6b7374ebe" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization</scope><name>clone</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1a720effa06e6f5befd7e055ecd3882537" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization</scope><name>operator()</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1a9297387ee0dd0eb20b85f7c8b6f72ae3" prot="public" virt="virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization</scope><name>~DualPriceSmoothingStabilization</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
