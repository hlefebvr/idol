<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy" kind="class" language="C++" prot="public">
    <compoundname>idol::Cuts::KnapsackCover::Strategy</compoundname>
    <basecompoundref refid="classidol_1_1BranchAndBoundCallback" prot="public" virt="non-virtual">idol::BranchAndBoundCallback&lt; NodeInfoT &gt;</basecompoundref>
    <innerclass refid="structidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1_1KnapsackStructure" prot="private">idol::Cuts::KnapsackCover::Strategy::KnapsackStructure</innerclass>
    <innerclass refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1_1SetOfItems" prot="private">idol::Cuts::KnapsackCover::Strategy::SetOfItems</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a26499a262de13ef949a6c4cdcb1c7ed7" prot="private" static="no">
        <type>typename std::vector&lt; typename <ref refid="structidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1_1KnapsackStructure_1_1Item" kindref="compound">KnapsackStructure::Item</ref> &gt;::iterator</type>
        <definition>using idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::ItemIterator =  typename std::vector&lt;typename KnapsackStructure::Item&gt;::iterator</definition>
        <argsstring></argsstring>
        <name>ItemIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="108" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a5753d77335f43efa046750ac11769f93" prot="private" static="no" mutable="no">
        <type>std::list&lt; KnapsackStructure &gt;</type>
        <definition>std::list&lt;KnapsackStructure&gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_knapsack_structures</definition>
        <argsstring></argsstring>
        <name>m_knapsack_structures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="123" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ab10c082577dac6fac1f8b1f3fbbee8bb" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_lifting</definition>
        <argsstring></argsstring>
        <name>m_lifting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="124" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ab7508c8f6779291c1f138b0771908b61" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_apply_to_tree_nodes</definition>
        <argsstring></argsstring>
        <name>m_apply_to_tree_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="125" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ada87881ba270a95dd911294c95527057" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_max_pass_root_node</definition>
        <argsstring></argsstring>
        <name>m_max_pass_root_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="126" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a34784c016d0d73aa3fc25effcafb5f8f" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_max_cuts_factor</definition>
        <argsstring></argsstring>
        <name>m_max_cuts_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="127" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ae2d5a7789ebf38319cce94d372bc483c" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_max_cuts</definition>
        <argsstring></argsstring>
        <name>m_max_cuts</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="128" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1afda88b2f9f0896308cfd595cba00fb7d" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_n_cuts</definition>
        <argsstring></argsstring>
        <name>m_n_cuts</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="129" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1abe8fd2ebe0a8c080931fc85c1fbb908f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::m_n_separations</definition>
        <argsstring></argsstring>
        <name>m_n_separations</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="130" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a81489131d8191e8cb04d5b29371fb743" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::detect_knapsack_structure</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>detect_knapsack_structure</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="133" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="264" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ad1b320612ff1c9af36e60387bd736de5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::add_knapsack_structure</definition>
        <argsstring>(const Row &amp;t_row, CtrType t_type)</argsstring>
        <name>add_knapsack_structure</name>
        <param>
          <type>const Row &amp;</type>
          <declname>t_row</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="134" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="292" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a8ace0a78417f97399dffe84b7b1e974d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::has_only_binary_variables</definition>
        <argsstring>(const Row &amp;t_row)</argsstring>
        <name>has_only_binary_variables</name>
        <param>
          <type>const Row &amp;</type>
          <declname>t_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="135" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="312" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a488b51cf9e0a00ca508cd9baed81dc05" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::has_only_single_signed_coefficients</definition>
        <argsstring>(const Row &amp;t_row)</argsstring>
        <name>has_only_single_signed_coefficients</name>
        <param>
          <type>const Row &amp;</type>
          <declname>t_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="136" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="328" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ad4227a4f92c511bb528575f58f4f2156" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::separate_cut</definition>
        <argsstring>(const KnapsackStructure &amp;t_knapsack_structure)</argsstring>
        <name>separate_cut</name>
        <param>
          <type>const KnapsackStructure &amp;</type>
          <declname>t_knapsack_structure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="139" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="381" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1af107c9b86cc20d85c9ff75449f591e6b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; SetOfItems, SetOfItems, SetOfItems &gt;</type>
        <definition>std::tuple&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::fix_variables_equal_to_one_or_zero</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items)</argsstring>
        <name>fix_variables_equal_to_one_or_zero</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="140" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="705" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ae0eabc798e97d2a51161d5f80ecf7466" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::set_current_values</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items)</argsstring>
        <name>set_current_values</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="141" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="689" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a5f484d3d4534a2eaec97de26f8e0c79b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::sum_of_weights</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items)</argsstring>
        <name>sum_of_weights</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="142" column="9" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="737" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a2b549c6a9272bc04a00d61480921d60e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SetOfItems, SetOfItems &gt;</type>
        <definition>std::pair&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::compute_initial_cover</definition>
        <argsstring>(const SetOfItems &amp;t_N_1, const SetOfItems &amp;t_N_free, const SetOfItems &amp;t_N_0, int t_capacity)</argsstring>
        <name>compute_initial_cover</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_N_1</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_N_free</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_N_0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="143" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="753" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a5280fb3e05f6f3089207caef27fa634a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SetOfItems, SetOfItems &gt;</type>
        <definition>std::pair&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::solve_knapsack_approximately</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items, int t_capacity)</argsstring>
        <name>solve_knapsack_approximately</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="144" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="830" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1add4cff339ab0b8a8119396bab7ea9567" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SetOfItems, SetOfItems &gt;</type>
        <definition>std::pair&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::swap_items</definition>
        <argsstring>(const SetOfItems &amp;t_a, const SetOfItems &amp;t_b)</argsstring>
        <name>swap_items</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="145" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="877" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1adad13fdc82ef49bb8efd0b073982adb1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SetOfItems, SetOfItems &gt;</type>
        <definition>std::pair&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::compute_minimal_cover</definition>
        <argsstring>(const SetOfItems &amp;t_initial_cover, int t_capacity)</argsstring>
        <name>compute_minimal_cover</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_initial_cover</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="146" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="898" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a4593c5e02e873c3421b7d406347871a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SetOfItems, SetOfItems &gt;</type>
        <definition>std::pair&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::partition_minimal_cover</definition>
        <argsstring>(const SetOfItems &amp;t_minimal_cover)</argsstring>
        <name>partition_minimal_cover</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_minimal_cover</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="147" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="776" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a8d32b18b08dbf113f5eebda5f42d164a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; SetOfItems, SetOfItems &gt;</type>
        <definition>std::pair&lt; typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems, typename idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::SetOfItems &gt; idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::partition_remaining_items</definition>
        <argsstring>(const SetOfItems &amp;t_remaining_items)</argsstring>
        <name>partition_remaining_items</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_remaining_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="148" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="803" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aef3ef0f416bf7270feaa075dc6d5cd96" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::sort_by_non_decreasing_weights</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items)</argsstring>
        <name>sort_by_non_decreasing_weights</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="149" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="680" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ab7bdafe43d999b11d3984f40b89ecdf7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::sort_by_non_increasing_weights</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items)</argsstring>
        <name>sort_by_non_increasing_weights</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="150" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="671" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aa0c161ed1b4349af0c7d9df2d1f16952" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::sequential_up_and_down_lifting</definition>
        <argsstring>(const SetOfItems &amp;t_C1, const SetOfItems &amp;t_C2, const SetOfItems &amp;t_F, const SetOfItems &amp;t_R, int t_capacity)</argsstring>
        <name>sequential_up_and_down_lifting</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_C1</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_C2</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_F</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_R</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="151" column="9" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="486" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aa7986863ec9e1ab8cd5324e0116d34e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::compute_cut_activity</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items, int t_right_hand_side)</argsstring>
        <name>compute_cut_activity</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_right_hand_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="152" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="468" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aa35dfcc204477dbd641f078dd1507c49" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref></type>
        <definition>idol::TempCtr idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::create_cut</definition>
        <argsstring>(const SetOfItems &amp;t_set_of_items, int t_right_hand_side)</argsstring>
        <name>create_cut</name>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_right_hand_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="153" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="450" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a575761ba260b7379699a495edcb9b9ba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::debug</definition>
        <argsstring>(const std::string &amp;t_name, const SetOfItems &amp;t_set_of_items, bool t_with_values=false, bool t_with_cut=false)</argsstring>
        <name>debug</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const SetOfItems &amp;</type>
          <declname>t_set_of_items</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_with_values</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>t_with_cut</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="155" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="191" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ac3b637513554dd08621768a8dfd79dff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="classidol_1_1BranchAndBoundCallback_1acfa261050e03bf300457218a38be51d6">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called at the very beginning of the Branch-and-Bound algorithm </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="157" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="245" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a6afecb6f46a6e8971419386f516ff60f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::operator()</definition>
        <argsstring>(CallbackEvent t_event) override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1BranchAndBoundCallback_1a01527d4fc8e048e4f54d3c79348e6653">operator()</reimplements>
        <param>
          <type>CallbackEvent</type>
          <declname>t_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is left for the user to write and consists in the main execution block of the callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event triggering the callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="159" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="351" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a9d7eb2f9d86ef09d1566789b78659f8a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::log_after_termination</definition>
        <argsstring>() override</argsstring>
        <name>log_after_termination</name>
        <reimplements refid="classidol_1_1BranchAndBoundCallback_1ad2b568d30b2ea4b47f885b3ad9119196">log_after_termination</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="161" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a232c9cf4520ea95bbd142fd56959ef1b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::add_user_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_user_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a user cut to the relaxation <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>the cut to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="153" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a3bfb09e103d540c1bf8a1abff252cd04" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::add_lazy_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_lazy_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a lazy cut to the relaxation <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>the cut to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="159" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a949f1fb81c728a38db4cf241e7fcfb01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::add_local_variable_branching</definition>
        <argsstring>(const Var &amp;t_var, CtrType t_type, double t_rhs)</argsstring>
        <name>add_local_variable_branching</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="161" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a325b191475a118d605957ad57b9895de" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
        <definition>const idol::Node&lt; NodeInfoT &gt; &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::node</definition>
        <argsstring>() const</argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the node which is currently explored <simplesect kind="return"><para>the node which is currently explored </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="167" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a26670d598d1dd75498199087a0bf1a5d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const idol::Model &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::relaxation</definition>
        <argsstring>() const</argsstring>
        <name>relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current node&apos;s model being solved <simplesect kind="return"><para>the current node&apos;s model being solved </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="173" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1afce1fb1ed69b32f4450a91f05a105062" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const idol::Model &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::original_model</definition>
        <argsstring>() const</argsstring>
        <name>original_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the original model from which the branch-and-bound algorithm started (i.e., the original non-relaxed model) <simplesect kind="return"><para>the original model </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="179" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a20f80c0b74e78b6bc7ee8cc8ef8c174d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::submit_heuristic_solution</definition>
        <argsstring>(NodeInfoT *t_info)</argsstring>
        <name>submit_heuristic_solution</name>
        <param>
          <type>NodeInfoT *</type>
          <declname>t_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a new solution to the branch-and-bound tree algorithm.</para>
<para>The solution is checked for validity according to the branch-and-bound tree branching rule and is set as incumbent if and only if it is valid and improves the current best objective. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_info</parametername>
</parameternamelist>
<parameterdescription>
<para>a node information storing the solution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="188" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1ae81dfc23113d406f7be2e4ecba59b0e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::submit_bound</definition>
        <argsstring>(double t_bound)</argsstring>
        <name>submit_bound</name>
        <param>
          <type>double</type>
          <declname>t_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a new proven bound.</para>
<para>The given bound is set as best bound if and only if it improves the current best bound. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>a proven bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="196" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a2dd664ba2acaffb86a06475b64ec1492" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structidol_1_1SideEffectRegistry" kindref="compound">SideEffectRegistry</ref> &amp;</type>
        <definition>const idol::SideEffectRegistry &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::side_effect_registry</definition>
        <argsstring>() const</argsstring>
        <name>side_effect_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the side effect registry <simplesect kind="return"><para>the side effect registry </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="202" column="31" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1ad08bbcb3686b854a91ad7c3f78cb4746" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const idol::Timer &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="204" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a7810cef6906de798464e9bdfbcdb03c9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::best_bound</definition>
        <argsstring>() const</argsstring>
        <name>best_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="206" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a04814f290af3d6c54dce2f96eba340b3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::best_obj</definition>
        <argsstring>() const</argsstring>
        <name>best_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="208" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a8dc2d16f64f736ca5404970b95e3ab3d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="210" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="238" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1af0cc2d8a4876d1224e0f81567432694b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy::Strategy</definition>
        <argsstring>(bool t_use_lifting, bool t_apply_to_tree_nodes, unsigned int t_max_pass_root_node, double t_max_cuts_factor)</argsstring>
        <name>Strategy</name>
        <param>
          <type>bool</type>
          <declname>t_use_lifting</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_apply_to_tree_nodes</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>t_max_pass_root_node</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_max_cuts_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="164" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="179" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy</label>
        <link refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::BranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallback"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;::Strategy</label>
        <link refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::BranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallback"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" line="85" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h" bodystart="85" bodyend="168"/>
    <listofallmembers>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ad1b320612ff1c9af36e60387bd736de5" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>add_knapsack_structure</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a3bfb09e103d540c1bf8a1abff252cd04" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>add_lazy_cut</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a949f1fb81c728a38db4cf241e7fcfb01" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>add_local_variable_branching</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a232c9cf4520ea95bbd142fd56959ef1b" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>add_user_cut</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a7810cef6906de798464e9bdfbcdb03c9" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>best_bound</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a04814f290af3d6c54dce2f96eba340b3" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>best_obj</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aa7986863ec9e1ab8cd5324e0116d34e1" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>compute_cut_activity</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a2b549c6a9272bc04a00d61480921d60e" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>compute_initial_cover</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1adad13fdc82ef49bb8efd0b073982adb1" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>compute_minimal_cover</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aa35dfcc204477dbd641f078dd1507c49" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>create_cut</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a575761ba260b7379699a495edcb9b9ba" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>debug</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a81489131d8191e8cb04d5b29371fb743" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>detect_knapsack_structure</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1af107c9b86cc20d85c9ff75449f591e6b" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>fix_variables_equal_to_one_or_zero</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a8ace0a78417f97399dffe84b7b1e974d" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>has_only_binary_variables</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a488b51cf9e0a00ca508cd9baed81dc05" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>has_only_single_signed_coefficients</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ac3b637513554dd08621768a8dfd79dff" prot="protected" virt="virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>initialize</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a26499a262de13ef949a6c4cdcb1c7ed7" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>ItemIterator</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a9d7eb2f9d86ef09d1566789b78659f8a" prot="protected" virt="virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>log_after_termination</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ab7508c8f6779291c1f138b0771908b61" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_apply_to_tree_nodes</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a5753d77335f43efa046750ac11769f93" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_knapsack_structures</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ab10c082577dac6fac1f8b1f3fbbee8bb" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_lifting</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ae2d5a7789ebf38319cce94d372bc483c" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_max_cuts</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a34784c016d0d73aa3fc25effcafb5f8f" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_max_cuts_factor</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ada87881ba270a95dd911294c95527057" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_max_pass_root_node</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1afda88b2f9f0896308cfd595cba00fb7d" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_n_cuts</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1abe8fd2ebe0a8c080931fc85c1fbb908f" prot="private" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>m_n_separations</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a325b191475a118d605957ad57b9895de" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>node</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a6afecb6f46a6e8971419386f516ff60f" prot="protected" virt="virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>operator()</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1afce1fb1ed69b32f4450a91f05a105062" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>original_model</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a4593c5e02e873c3421b7d406347871a8" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>partition_minimal_cover</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a8d32b18b08dbf113f5eebda5f42d164a" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>partition_remaining_items</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a26670d598d1dd75498199087a0bf1a5d" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>relaxation</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ad4227a4f92c511bb528575f58f4f2156" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>separate_cut</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aa0c161ed1b4349af0c7d9df2d1f16952" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>sequential_up_and_down_lifting</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ae0eabc798e97d2a51161d5f80ecf7466" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>set_current_values</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a2dd664ba2acaffb86a06475b64ec1492" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>side_effect_registry</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a5280fb3e05f6f3089207caef27fa634a" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>solve_knapsack_approximately</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1aef3ef0f416bf7270feaa075dc6d5cd96" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>sort_by_non_decreasing_weights</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ab7bdafe43d999b11d3984f40b89ecdf7" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>sort_by_non_increasing_weights</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1af0cc2d8a4876d1224e0f81567432694b" prot="public" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>Strategy</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1ae81dfc23113d406f7be2e4ecba59b0e4" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>submit_bound</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a20f80c0b74e78b6bc7ee8cc8ef8c174d" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>submit_heuristic_solution</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a5f484d3d4534a2eaec97de26f8e0c79b" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>sum_of_weights</name></member>
      <member refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1add4cff339ab0b8a8119396bab7ea9567" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>swap_items</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a8dc2d16f64f736ca5404970b95e3ab3d" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>terminate</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1ad08bbcb3686b854a91ad7c3f78cb4746" prot="protected" virt="non-virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>time</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a0ddaa095cb312768b212ab177488a31f" prot="public" virt="virtual"><scope>idol::Cuts::KnapsackCover::Strategy</scope><name>~BranchAndBoundCallback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
