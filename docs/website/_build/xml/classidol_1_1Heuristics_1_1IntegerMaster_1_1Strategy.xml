<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy" kind="class" language="C++" prot="public">
    <compoundname>idol::Heuristics::IntegerMaster::Strategy</compoundname>
    <basecompoundref refid="classidol_1_1BranchAndBoundCallback" prot="public" virt="non-virtual">idol::BranchAndBoundCallback&lt; NodeInfoT &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1aecb5b446ad18d038e0c98ad9e23ebf3e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref> &gt;</type>
        <definition>std::unique_ptr&lt;OptimizerFactory&gt; idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_optimizer_factory</definition>
        <argsstring></argsstring>
        <name>m_optimizer_factory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="38" column="25" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a37feea0fb8e4727adde186fd33962c81" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_integer_columns</definition>
        <argsstring></argsstring>
        <name>m_integer_columns</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="39" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a022b346a8e5d708311ca8f49fa0775b5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_time_limit</definition>
        <argsstring></argsstring>
        <name>m_time_limit</name>
        <initializer>= std::numeric_limits&lt;double&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="40" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a6035f6023b897c2623ad0bf3a73443cf" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_iteration_limit</definition>
        <argsstring></argsstring>
        <name>m_iteration_limit</name>
        <initializer>= std::numeric_limits&lt;unsigned int&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="41" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1acf25a506b7923e5cf26a2ade0c0af35f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_max_depth</definition>
        <argsstring></argsstring>
        <name>m_max_depth</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="42" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1ad2cd6a74236ebbd3ad801a9a2613b953" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_frequency</definition>
        <argsstring></argsstring>
        <name>m_frequency</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="43" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a581343aa43a4f118737334338b67c697" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::m_n_relevant_calls</definition>
        <argsstring></argsstring>
        <name>m_n_relevant_calls</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="44" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a7f6e5b141cccd4511946ebea8937fefc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::operator()</definition>
        <argsstring>(CallbackEvent t_event) override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1BranchAndBoundCallback_1a01527d4fc8e048e4f54d3c79348e6653">operator()</reimplements>
        <param>
          <type>CallbackEvent</type>
          <declname>t_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is left for the user to write and consists in the main execution block of the callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event triggering the callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="46" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="176" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1acfa261050e03bf300457218a38be51d6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1ac3b637513554dd08621768a8dfd79dff">initialize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called at the very beginning of the Branch-and-Bound algorithm </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="139" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1ad2b568d30b2ea4b47f885b3ad9119196" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::log_after_termination</definition>
        <argsstring>()</argsstring>
        <name>log_after_termination</name>
        <reimplementedby refid="classidol_1_1Cuts_1_1KnapsackCover_1_1Strategy_1a9d7eb2f9d86ef09d1566789b78659f8a">log_after_termination</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="147" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a232c9cf4520ea95bbd142fd56959ef1b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::add_user_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_user_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a user cut to the relaxation <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>the cut to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="153" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a3bfb09e103d540c1bf8a1abff252cd04" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::add_lazy_cut</definition>
        <argsstring>(const TempCtr &amp;t_cut)</argsstring>
        <name>add_lazy_cut</name>
        <param>
          <type>const <ref refid="classidol_1_1TempCtr" kindref="compound">TempCtr</ref> &amp;</type>
          <declname>t_cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a lazy cut to the relaxation <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_cut</parametername>
</parameternamelist>
<parameterdescription>
<para>the cut to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="159" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a949f1fb81c728a38db4cf241e7fcfb01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::add_local_variable_branching</definition>
        <argsstring>(const Var &amp;t_var, CtrType t_type, double t_rhs)</argsstring>
        <name>add_local_variable_branching</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="161" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a325b191475a118d605957ad57b9895de" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &amp;</type>
        <definition>const idol::Node&lt; NodeInfoT &gt; &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::node</definition>
        <argsstring>() const</argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the node which is currently explored <simplesect kind="return"><para>the node which is currently explored </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="167" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a26670d598d1dd75498199087a0bf1a5d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const idol::Model &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::relaxation</definition>
        <argsstring>() const</argsstring>
        <name>relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current node&apos;s model being solved <simplesect kind="return"><para>the current node&apos;s model being solved </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="173" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1afce1fb1ed69b32f4450a91f05a105062" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const idol::Model &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::original_model</definition>
        <argsstring>() const</argsstring>
        <name>original_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the original model from which the branch-and-bound algorithm started (i.e., the original non-relaxed model) <simplesect kind="return"><para>the original model </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="179" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a20f80c0b74e78b6bc7ee8cc8ef8c174d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::submit_heuristic_solution</definition>
        <argsstring>(NodeInfoT *t_info)</argsstring>
        <name>submit_heuristic_solution</name>
        <param>
          <type>NodeInfoT *</type>
          <declname>t_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a new solution to the branch-and-bound tree algorithm.</para>
<para>The solution is checked for validity according to the branch-and-bound tree branching rule and is set as incumbent if and only if it is valid and improves the current best objective. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_info</parametername>
</parameternamelist>
<parameterdescription>
<para>a node information storing the solution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="188" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1ae81dfc23113d406f7be2e4ecba59b0e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::submit_bound</definition>
        <argsstring>(double t_bound)</argsstring>
        <name>submit_bound</name>
        <param>
          <type>double</type>
          <declname>t_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a new proven bound.</para>
<para>The given bound is set as best bound if and only if it improves the current best bound. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>a proven bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="196" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a2dd664ba2acaffb86a06475b64ec1492" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structidol_1_1SideEffectRegistry" kindref="compound">SideEffectRegistry</ref> &amp;</type>
        <definition>const idol::SideEffectRegistry &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::side_effect_registry</definition>
        <argsstring>() const</argsstring>
        <name>side_effect_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the side effect registry <simplesect kind="return"><para>the side effect registry </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="202" column="31" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1ad08bbcb3686b854a91ad7c3f78cb4746" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const idol::Timer &amp; idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="204" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a7810cef6906de798464e9bdfbcdb03c9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::best_bound</definition>
        <argsstring>() const</argsstring>
        <name>best_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="206" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a04814f290af3d6c54dce2f96eba340b3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::best_obj</definition>
        <argsstring>() const</argsstring>
        <name>best_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="208" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallback_1a8dc2d16f64f736ca5404970b95e3ab3d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::BranchAndBoundCallback&lt; NodeInfoT &gt;::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" line="210" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h" bodystart="238" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a0e208db56a7110ac420e9655cc45d761" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::Strategy</definition>
        <argsstring>(const OptimizerFactory &amp;t_optimizer)</argsstring>
        <name>Strategy</name>
        <param>
          <type>const <ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref> &amp;</type>
          <declname>t_optimizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="48" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a40334bb85b0c10593927737f9453c07f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::with_integer_columns</definition>
        <argsstring>() const</argsstring>
        <name>with_integer_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="50" column="15" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a0cb95f2f2cf602050df0e479d584102e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::set_integer_columns</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_integer_columns</name>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="52" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a3f1115852f2143978bd58318522ddef1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::set_time_limit</definition>
        <argsstring>(double t_time_limit)</argsstring>
        <name>set_time_limit</name>
        <param>
          <type>double</type>
          <declname>t_time_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="54" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1aadda387751c10b230fc92a40851e7ece" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::set_iteration_limit</definition>
        <argsstring>(unsigned int t_iteration_limit)</argsstring>
        <name>set_iteration_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>t_iteration_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="56" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a30c278b8b7ec5f50888cd05be514473c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::set_max_depth</definition>
        <argsstring>(unsigned int t_max_depth)</argsstring>
        <name>set_max_depth</name>
        <param>
          <type>unsigned int</type>
          <declname>t_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="58" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a932c775258f6e10c434e652b1c0246f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy::set_frequency</definition>
        <argsstring>(unsigned int t_frequency)</argsstring>
        <name>set_frequency</name>
        <param>
          <type>unsigned int</type>
          <declname>t_frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="60" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy</label>
        <link refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::BranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallback"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;::Strategy</label>
        <link refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::BranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallback"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" line="37" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h" bodystart="37" bodyend="61"/>
    <listofallmembers>
      <member refid="classidol_1_1BranchAndBoundCallback_1a3bfb09e103d540c1bf8a1abff252cd04" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>add_lazy_cut</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a949f1fb81c728a38db4cf241e7fcfb01" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>add_local_variable_branching</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a232c9cf4520ea95bbd142fd56959ef1b" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>add_user_cut</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a7810cef6906de798464e9bdfbcdb03c9" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>best_bound</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a04814f290af3d6c54dce2f96eba340b3" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>best_obj</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1acfa261050e03bf300457218a38be51d6" prot="protected" virt="virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>initialize</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1ad2b568d30b2ea4b47f885b3ad9119196" prot="protected" virt="virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>log_after_termination</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1ad2cd6a74236ebbd3ad801a9a2613b953" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_frequency</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a37feea0fb8e4727adde186fd33962c81" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_integer_columns</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a6035f6023b897c2623ad0bf3a73443cf" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_iteration_limit</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1acf25a506b7923e5cf26a2ade0c0af35f" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_max_depth</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a581343aa43a4f118737334338b67c697" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_n_relevant_calls</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1aecb5b446ad18d038e0c98ad9e23ebf3e" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_optimizer_factory</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a022b346a8e5d708311ca8f49fa0775b5" prot="private" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>m_time_limit</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a325b191475a118d605957ad57b9895de" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>node</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a7f6e5b141cccd4511946ebea8937fefc" prot="protected" virt="virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>operator()</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1afce1fb1ed69b32f4450a91f05a105062" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>original_model</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a26670d598d1dd75498199087a0bf1a5d" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>relaxation</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a932c775258f6e10c434e652b1c0246f1" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>set_frequency</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a0cb95f2f2cf602050df0e479d584102e" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>set_integer_columns</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1aadda387751c10b230fc92a40851e7ece" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>set_iteration_limit</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a30c278b8b7ec5f50888cd05be514473c" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>set_max_depth</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a3f1115852f2143978bd58318522ddef1" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>set_time_limit</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a2dd664ba2acaffb86a06475b64ec1492" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>side_effect_registry</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a0e208db56a7110ac420e9655cc45d761" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>Strategy</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1ae81dfc23113d406f7be2e4ecba59b0e4" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>submit_bound</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a20f80c0b74e78b6bc7ee8cc8ef8c174d" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>submit_heuristic_solution</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a8dc2d16f64f736ca5404970b95e3ab3d" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>terminate</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1ad08bbcb3686b854a91ad7c3f78cb4746" prot="protected" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>time</name></member>
      <member refid="classidol_1_1Heuristics_1_1IntegerMaster_1_1Strategy_1a40334bb85b0c10593927737f9453c07f" prot="public" virt="non-virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>with_integer_columns</name></member>
      <member refid="classidol_1_1BranchAndBoundCallback_1a0ddaa095cb312768b212ab177488a31f" prot="public" virt="virtual"><scope>idol::Heuristics::IntegerMaster::Strategy</scope><name>~BranchAndBoundCallback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
