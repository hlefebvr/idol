<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DantzigWolfe_1_1Formulation" kind="class" language="C++" prot="public">
    <compoundname>idol::DantzigWolfe::Formulation</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classidol_1_1DantzigWolfe_1_1Formulation_1a1a3ee65275ced6b36f8fa13d8ba6a8fe" prot="private" static="no">
        <type>std::list&lt; std::pair&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp; &gt; &gt;</type>
        <definition>using idol::DantzigWolfe::Formulation::PresentGeneratorsList =  std::list&lt;std::pair&lt;Var, const PrimalPoint&amp;&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PresentGeneratorsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="18" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1ab5c1edfa74d1515bc1dfc842139bac90" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Annotation" kindref="compound">Annotation</ref>&lt; unsigned int &gt;</type>
        <definition>Annotation&lt;unsigned int&gt; idol::DantzigWolfe::Formulation::m_decomposition</definition>
        <argsstring></argsstring>
        <name>m_decomposition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="20" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1a3c83186acacb0c1daa4ae73cf4a23069" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>Model idol::DantzigWolfe::Formulation::m_master</definition>
        <argsstring></argsstring>
        <name>m_master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="22" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1afdd0aa494e6b38bf4906743857f02385" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &gt;</type>
        <definition>std::vector&lt;Model&gt; idol::DantzigWolfe::Formulation::m_sub_problems</definition>
        <argsstring></argsstring>
        <name>m_sub_problems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="23" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1a206e5c5ef8f3bd6aba61f1fd907d909b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1GenerationPattern" kindref="compound">GenerationPattern</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &gt;</type>
        <definition>std::vector&lt;GenerationPattern&lt;Var&gt; &gt; idol::DantzigWolfe::Formulation::m_generation_patterns</definition>
        <argsstring></argsstring>
        <name>m_generation_patterns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="24" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1a41e8d7074c770e41369065dcdb4af548" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1GeneratorPool" kindref="compound">GeneratorPool</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &gt;</type>
        <definition>std::vector&lt;GeneratorPool&lt;Var&gt; &gt; idol::DantzigWolfe::Formulation::m_pools</definition>
        <argsstring></argsstring>
        <name>m_pools</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="25" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1a5af51abb38d08c90ee1a75722d77b1d5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; PresentGeneratorsList &gt;</type>
        <definition>std::vector&lt;PresentGeneratorsList&gt; idol::DantzigWolfe::Formulation::m_present_generators</definition>
        <argsstring></argsstring>
        <name>m_present_generators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="26" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1a4e7fe4dd2f9ab73fb79ff97855f52dc9" prot="private" static="no" mutable="no">
        <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &gt;</type>
        <definition>Map&lt;Var, Ctr&gt; idol::DantzigWolfe::Formulation::m_soft_branching_lower_bound_constraints</definition>
        <argsstring></argsstring>
        <name>m_soft_branching_lower_bound_constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="28" column="9" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1DantzigWolfe_1_1Formulation_1a84fec23ef2f1344bd3aaa12f12e7da8a" prot="private" static="no" mutable="no">
        <type>Map&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref>, <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &gt;</type>
        <definition>Map&lt;Var, Ctr&gt; idol::DantzigWolfe::Formulation::m_soft_branching_upper_bound_constraints</definition>
        <argsstring></argsstring>
        <name>m_soft_branching_upper_bound_constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="29" column="9" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a7949b8b09690e6c25e28b08f9e02b197" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::DantzigWolfe::Formulation::compute_n_sub_problems</definition>
        <argsstring>(const Model &amp;t_original_formulation)</argsstring>
        <name>compute_n_sub_problems</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="31" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1aa48d08748ca1d2823a91328f39e3664e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::set_decomposition_by_var</definition>
        <argsstring>(const Model &amp;t_original_formulation)</argsstring>
        <name>set_decomposition_by_var</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="32" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1abb528e402b02ef0819ff9da041f11f83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::initialize_sub_problems</definition>
        <argsstring>(unsigned int t_n_sub_problems)</argsstring>
        <name>initialize_sub_problems</name>
        <param>
          <type>unsigned int</type>
          <declname>t_n_sub_problems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="33" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a57eb840b68a94f019dbb3604dd092ab0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::initialize_generation_patterns</definition>
        <argsstring>(unsigned int t_n_sub_problems)</argsstring>
        <name>initialize_generation_patterns</name>
        <param>
          <type>unsigned int</type>
          <declname>t_n_sub_problems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a1ecfb52bb5b669846530741fd3f89877" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::initialize_pools</definition>
        <argsstring>(unsigned int t_n_sub_problems)</argsstring>
        <name>initialize_pools</name>
        <param>
          <type>unsigned int</type>
          <declname>t_n_sub_problems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="35" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1abe47134c573be5752a43160ba44a937e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::initialize_present_generators</definition>
        <argsstring>(unsigned int t_n_sub_problems)</argsstring>
        <name>initialize_present_generators</name>
        <param>
          <type>unsigned int</type>
          <declname>t_n_sub_problems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="36" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ac6c0c4790f4dc34474398149ad0db17e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::dispatch_variables</definition>
        <argsstring>(const Model &amp;t_original_formulation)</argsstring>
        <name>dispatch_variables</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1aa8726e8505bb1585ee2a59704c9c23d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::dispatch_constraints</definition>
        <argsstring>(const Model &amp;t_original_formulation)</argsstring>
        <name>dispatch_constraints</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a466c535b0394a59c95bad7a33d4d28e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::dispatch_linking_constraint</definition>
        <argsstring>(const Ctr &amp;t_original_ctr, const LinExpr&lt; Var &gt; &amp;t_row, CtrType t_type, double t_rhs)</argsstring>
        <name>dispatch_linking_constraint</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_original_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>t_row</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1adcbfa5a00f0e91c2a8e1bfcc2da8aa6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;, std::vector&lt; <ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &gt; &gt;</type>
        <definition>std::pair&lt;LinExpr&lt;Var&gt;, std::vector&lt;LinExpr&lt;Var&gt; &gt; &gt; idol::DantzigWolfe::Formulation::decompose_expression</definition>
        <argsstring>(const LinExpr&lt; Var &gt; &amp;t_linear)</argsstring>
        <name>decompose_expression</name>
        <param>
          <type>const <ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>t_linear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="40" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ae42250984c6e532496718ba01044239e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::dispatch_objective_function</definition>
        <argsstring>(const Model &amp;t_original_formulation)</argsstring>
        <name>dispatch_objective_function</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="41" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ae597875adca0a2705bfddea2deecbb97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::DantzigWolfe::Formulation::is_feasible</definition>
        <argsstring>(const PrimalPoint &amp;t_primal, unsigned int t_sub_problem_id)</argsstring>
        <name>is_feasible</name>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
          <declname>t_primal</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="42" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a6f5b829f394c338f73c72be8c36dc689" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::apply_sub_problem_bound_on_master</definition>
        <argsstring>(bool t_is_lb, const idol::Var &amp;t_var, unsigned int t_sub_problem_id, double t_value)</argsstring>
        <name>apply_sub_problem_bound_on_master</name>
        <param>
          <type>bool</type>
          <declname>t_is_lb</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">idol::Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1aefaa74e44b5fe01dc0f5d767f4315804" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>LinExpr&lt;Var&gt; idol::DantzigWolfe::Formulation::reformulate_sub_problem_variable</definition>
        <argsstring>(const Var &amp;t_var, unsigned int t_sub_problem_id)</argsstring>
        <name>reformulate_sub_problem_variable</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="45" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ad4ac3695fec11dc9bf385bb95d18cf80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::DantzigWolfe::Formulation::Formulation</definition>
        <argsstring>(const Model &amp;t_original_formulation, const Annotation&lt; unsigned int &gt; &amp;t_decomposition)</argsstring>
        <name>Formulation</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_original_formulation</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Annotation" kindref="compound">Annotation</ref>&lt; unsigned int &gt; &amp;</type>
          <declname>t_decomposition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="47" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1af4af6272382b9cebe4d13c388d9cd2f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model&amp; idol::DantzigWolfe::Formulation::master</definition>
        <argsstring>()</argsstring>
        <name>master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="49" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1acd8274f5c3b2135db0df25847613ca10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; idol::DantzigWolfe::Formulation::master</definition>
        <argsstring>() const</argsstring>
        <name>master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="50" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a0dbd7d9ba22c5d9a361ab2f7d9a3b45f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto idol::DantzigWolfe::Formulation::sub_problems</definition>
        <argsstring>()</argsstring>
        <name>sub_problems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="52" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a42901ee7189c6d75a9b609e1a260ede4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto idol::DantzigWolfe::Formulation::sub_problems</definition>
        <argsstring>() const</argsstring>
        <name>sub_problems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="53" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1adc4033fa670e3c00ca0875ba45ef73e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto idol::DantzigWolfe::Formulation::present_generators</definition>
        <argsstring>(unsigned int t_id) const</argsstring>
        <name>present_generators</name>
        <param>
          <type>unsigned int</type>
          <declname>t_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="55" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ae2bef92ac1fef6970f3d4cbe7cf69071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model&amp; idol::DantzigWolfe::Formulation::sub_problem</definition>
        <argsstring>(unsigned int t_id)</argsstring>
        <name>sub_problem</name>
        <param>
          <type>unsigned int</type>
          <declname>t_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="57" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a239dcdfd0e14cc46ae9e5e8264a89b4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; idol::DantzigWolfe::Formulation::sub_problem</definition>
        <argsstring>(unsigned int t_id) const</argsstring>
        <name>sub_problem</name>
        <param>
          <type>unsigned int</type>
          <declname>t_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="58" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a741fd2d08c07d1b28d5cc0a94aae7f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model&amp; idol::DantzigWolfe::Formulation::get_model</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>get_model</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="60" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a327301ac77b66ebb1620bedd11497ce2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; idol::DantzigWolfe::Formulation::get_model</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>get_model</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="61" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a8e606593b040098d13385f2eb9ba4e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model&amp; idol::DantzigWolfe::Formulation::get_model</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>get_model</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="63" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ac83ab906599fcbd0b4178852fdd0385d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; idol::DantzigWolfe::Formulation::get_model</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>get_model</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="64" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1acd2d1d8dd535d4237ed05cce27feed2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Annotation" kindref="compound">Annotation</ref>&lt; unsigned int &gt; &amp;</type>
        <definition>const Annotation&lt;unsigned int&gt;&amp; idol::DantzigWolfe::Formulation::decomposition</definition>
        <argsstring>() const</argsstring>
        <name>decomposition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="66" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ac216eefa4092a98d4b4aaa2ecbc60b05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1GeneratorPool" kindref="compound">GeneratorPool</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
        <definition>const GeneratorPool&lt;Var&gt;&amp; idol::DantzigWolfe::Formulation::column_pool</definition>
        <argsstring>(unsigned int t_sub_problem_id) const</argsstring>
        <name>column_pool</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="68" column="25" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a04642abd18a4ea97c63095509108e58a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::DantzigWolfe::Formulation::n_sub_problems</definition>
        <argsstring>() const</argsstring>
        <name>n_sub_problems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="70" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ad655a7a3bc629c33f5d17d39fb16d090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::add_aggregation_constraint</definition>
        <argsstring>(unsigned int t_sub_problem_id, double t_lower_multiplicity, double t_upper_multiplicity)</argsstring>
        <name>add_aggregation_constraint</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_lower_multiplicity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_upper_multiplicity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a38bc44e2d28b909a1e27be7a9dc24206" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1AffExpr" kindref="compound">AffExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>AffExpr&lt;Var&gt; idol::DantzigWolfe::Formulation::compute_sub_problem_objective</definition>
        <argsstring>(unsigned int t_sub_problem_id, const DualPoint &amp;t_master_dual, bool t_use_farkas=false) const</argsstring>
        <name>compute_sub_problem_objective</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref> &amp;</type>
          <declname>t_master_dual</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_use_farkas</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="74" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1af3db3964c60784f631f83ff29ce04838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::update_sub_problem_objective</definition>
        <argsstring>(unsigned int t_sub_problem_id, const DualPoint &amp;t_master_dual, bool t_use_farkas=false)</argsstring>
        <name>update_sub_problem_objective</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref> &amp;</type>
          <declname>t_master_dual</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_use_farkas</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a803b24f666fb9fc0675fff6f60575f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::generate_column</definition>
        <argsstring>(unsigned int t_sub_problem_id, PrimalPoint t_generator)</argsstring>
        <name>generate_column</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type><ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref></type>
          <declname>t_generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1afd88941e79586ed0285a4285d586d432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::DantzigWolfe::Formulation::compute_reduced_cost</definition>
        <argsstring>(unsigned int t_sub_problem_id, const DualPoint &amp;t_master_dual, const PrimalPoint &amp;t_generator)</argsstring>
        <name>compute_reduced_cost</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref> &amp;</type>
          <declname>t_master_dual</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
          <declname>t_generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="80" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a232485cb96f4ba01a177d758aecc60e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classidol_1_1GenerationPattern" kindref="compound">GenerationPattern</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
        <definition>const GenerationPattern&lt;Var&gt;&amp; idol::DantzigWolfe::Formulation::generation_pattern</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>generation_pattern</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="82" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a58bf9b1496e3971d0679f507fe622ace" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::DantzigWolfe::Formulation::get_original_space_var_primal</definition>
        <argsstring>(const Var &amp;t_var, const PrimalPoint &amp;t_master_primal) const</argsstring>
        <name>get_original_space_var_primal</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;</type>
          <declname>t_master_primal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="84" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1aa3d5ff9fbecb5698ab3356df16b1d44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::update_var_lb</definition>
        <argsstring>(const Var &amp;t_var, double t_lb, bool t_hard, bool t_remove_infeasible_columns)</argsstring>
        <name>update_var_lb</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_lb</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_hard</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_remove_infeasible_columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="86" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1af8d25fd0033e7797296554df80cd248a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::update_var_ub</definition>
        <argsstring>(const Var &amp;t_var, double t_ub, bool t_hard, bool t_remove_infeasible_columns)</argsstring>
        <name>update_var_ub</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_hard</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_remove_infeasible_columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="88" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a11ab7f18208563a75d0d05e21ca4335c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::remove_column_if</definition>
        <argsstring>(unsigned int t_sub_problem_id, const std::function&lt; bool(const Var &amp;, const PrimalPoint &amp;)&gt; &amp;t_indicator_for_removal)</argsstring>
        <name>remove_column_if</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;, const <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &amp;)&gt; &amp;</type>
          <declname>t_indicator_for_removal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="90" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a2c31e9b76b28311d205f3db86d584f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::update_obj</definition>
        <argsstring>(const QuadExpr&lt; Var &gt; &amp;t_expr)</argsstring>
        <name>update_obj</name>
        <param>
          <type>const <ref refid="classidol_1_1QuadExpr" kindref="compound">QuadExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>t_expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="92" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a13d29e17021e1ee2441cf258c1567a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::update_var_obj</definition>
        <argsstring>(const Var &amp;t_var, double t_obj)</argsstring>
        <name>update_var_obj</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="94" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a01d1314dc179329ff475aad841bfa930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::clean_up</definition>
        <argsstring>(unsigned int t_sub_problem_id, double t_ratio)</argsstring>
        <name>clean_up</name>
        <param>
          <type>unsigned int</type>
          <declname>t_sub_problem_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a7bd3279497e2ac53c4d43abec0c0f5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::add</definition>
        <argsstring>(const Var &amp;t_var, double t_lb, double t_ub, VarType t_type, const LinExpr&lt; Ctr &gt; &amp;t_column)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_lb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_ub</declname>
        </param>
        <param>
          <type>VarType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &gt; &amp;</type>
          <declname>t_column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ad4d733f4f0b9ab43832e9f8713360e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::add</definition>
        <argsstring>(const Ctr &amp;t_ctr, CtrType t_type, const LinExpr&lt; Var &gt; &amp;t_row)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>CtrType</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1LinExpr" kindref="compound">LinExpr</ref>&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>t_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ab1ce52a09f0319f438a0587b658dff15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::remove</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a24ab5e5e824f6473d43d540a3847dc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::remove</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a6c9b3258c55cafca739e030e259a3b3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::DantzigWolfe::Formulation::get_n_present_generators</definition>
        <argsstring>() const</argsstring>
        <name>get_n_present_generators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="106" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1ad64934046f8feae61f41c8743a67f779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::load_columns_from_pool</definition>
        <argsstring>()</argsstring>
        <name>load_columns_from_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1Formulation_1a31c4468b93048cfe19e38467bac7ff20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::DantzigWolfe::Formulation::add_sub_problem</definition>
        <argsstring>()</argsstring>
        <name>add_sub_problem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="110" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>idol::DantzigWolfe::Formulation</label>
        <link refid="classidol_1_1DantzigWolfe_1_1Formulation"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" line="17" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h" bodystart="17" bodyend="111"/>
    <listofallmembers>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a7bd3279497e2ac53c4d43abec0c0f5e8" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>add</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ad4d733f4f0b9ab43832e9f8713360e7b" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>add</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ad655a7a3bc629c33f5d17d39fb16d090" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>add_aggregation_constraint</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a31c4468b93048cfe19e38467bac7ff20" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>add_sub_problem</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a6f5b829f394c338f73c72be8c36dc689" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>apply_sub_problem_bound_on_master</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a01d1314dc179329ff475aad841bfa930" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>clean_up</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ac216eefa4092a98d4b4aaa2ecbc60b05" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>column_pool</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a7949b8b09690e6c25e28b08f9e02b197" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>compute_n_sub_problems</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1afd88941e79586ed0285a4285d586d432" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>compute_reduced_cost</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a38bc44e2d28b909a1e27be7a9dc24206" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>compute_sub_problem_objective</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1adcbfa5a00f0e91c2a8e1bfcc2da8aa6e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>decompose_expression</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1acd2d1d8dd535d4237ed05cce27feed2c" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>decomposition</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1aa8726e8505bb1585ee2a59704c9c23d0" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>dispatch_constraints</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a466c535b0394a59c95bad7a33d4d28e6" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>dispatch_linking_constraint</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ae42250984c6e532496718ba01044239e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>dispatch_objective_function</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ac6c0c4790f4dc34474398149ad0db17e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>dispatch_variables</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ad4ac3695fec11dc9bf385bb95d18cf80" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>Formulation</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a803b24f666fb9fc0675fff6f60575f9d" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>generate_column</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a232485cb96f4ba01a177d758aecc60e0" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>generation_pattern</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a741fd2d08c07d1b28d5cc0a94aae7f93" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>get_model</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a327301ac77b66ebb1620bedd11497ce2" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>get_model</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a8e606593b040098d13385f2eb9ba4e14" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>get_model</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ac83ab906599fcbd0b4178852fdd0385d" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>get_model</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a6c9b3258c55cafca739e030e259a3b3c" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>get_n_present_generators</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a58bf9b1496e3971d0679f507fe622ace" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>get_original_space_var_primal</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a57eb840b68a94f019dbb3604dd092ab0" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>initialize_generation_patterns</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a1ecfb52bb5b669846530741fd3f89877" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>initialize_pools</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1abe47134c573be5752a43160ba44a937e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>initialize_present_generators</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1abb528e402b02ef0819ff9da041f11f83" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>initialize_sub_problems</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ae597875adca0a2705bfddea2deecbb97" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>is_feasible</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ad64934046f8feae61f41c8743a67f779" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>load_columns_from_pool</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ab5c1edfa74d1515bc1dfc842139bac90" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_decomposition</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a206e5c5ef8f3bd6aba61f1fd907d909b" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_generation_patterns</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a3c83186acacb0c1daa4ae73cf4a23069" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_master</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a41e8d7074c770e41369065dcdb4af548" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_pools</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a5af51abb38d08c90ee1a75722d77b1d5" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_present_generators</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a4e7fe4dd2f9ab73fb79ff97855f52dc9" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_soft_branching_lower_bound_constraints</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a84fec23ef2f1344bd3aaa12f12e7da8a" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_soft_branching_upper_bound_constraints</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1afdd0aa494e6b38bf4906743857f02385" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>m_sub_problems</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1af4af6272382b9cebe4d13c388d9cd2f3" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>master</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1acd8274f5c3b2135db0df25847613ca10" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>master</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a04642abd18a4ea97c63095509108e58a" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>n_sub_problems</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1adc4033fa670e3c00ca0875ba45ef73e5" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>present_generators</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a1a3ee65275ced6b36f8fa13d8ba6a8fe" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>PresentGeneratorsList</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1aefaa74e44b5fe01dc0f5d767f4315804" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>reformulate_sub_problem_variable</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ab1ce52a09f0319f438a0587b658dff15" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>remove</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a24ab5e5e824f6473d43d540a3847dc42" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>remove</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a11ab7f18208563a75d0d05e21ca4335c" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>remove_column_if</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1aa48d08748ca1d2823a91328f39e3664e" prot="private" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>set_decomposition_by_var</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1ae2bef92ac1fef6970f3d4cbe7cf69071" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>sub_problem</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a239dcdfd0e14cc46ae9e5e8264a89b4c" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>sub_problem</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a0dbd7d9ba22c5d9a361ab2f7d9a3b45f" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>sub_problems</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a42901ee7189c6d75a9b609e1a260ede4" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>sub_problems</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a2c31e9b76b28311d205f3db86d584f75" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>update_obj</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1af3db3964c60784f631f83ff29ce04838" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>update_sub_problem_objective</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1aa3d5ff9fbecb5698ab3356df16b1d44d" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>update_var_lb</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1a13d29e17021e1ee2441cf258c1567a5f" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>update_var_obj</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1Formulation_1af8d25fd0033e7797296554df80cd248a" prot="public" virt="non-virtual"><scope>idol::DantzigWolfe::Formulation</scope><name>update_var_ub</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
