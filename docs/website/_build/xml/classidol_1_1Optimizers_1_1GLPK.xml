<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Optimizers_1_1GLPK" kind="class" language="C++" prot="public">
    <compoundname>idol::Optimizers::GLPK</compoundname>
    <basecompoundref refid="classidol_1_1OptimizerWithLazyUpdates" prot="public" virt="non-virtual">idol::OptimizerWithLazyUpdates&lt; int, int, int, int &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1aca21e65a62837e19739be2734c7ca4aa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::Optimizers::GLPK::m_continuous_relaxation</definition>
        <argsstring></argsstring>
        <name>m_continuous_relaxation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="21" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a71aa90447c0f2f7cce6dd94af0e17d03" prot="private" static="no" mutable="no">
        <type>glp_prob *</type>
        <definition>glp_prob* idol::Optimizers::GLPK::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="23" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a5c9c5ed7e81b7cacc31806015aff06c8" prot="private" static="no" mutable="no">
        <type>glp_smcp</type>
        <definition>glp_smcp idol::Optimizers::GLPK::m_simplex_parameters</definition>
        <argsstring></argsstring>
        <name>m_simplex_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="24" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1ae207a23a4826627e0154bc381814d526" prot="private" static="no" mutable="no">
        <type>glp_iocp</type>
        <definition>glp_iocp idol::Optimizers::GLPK::m_mip_parameters</definition>
        <argsstring></argsstring>
        <name>m_mip_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="25" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a87ef2c7bf40028333a651bbc9b2d4246" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::Optimizers::GLPK::m_solved_as_mip</definition>
        <argsstring></argsstring>
        <name>m_solved_as_mip</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="26" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1adb01f899f2dcd057cd9e8aeae47f7d92" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idol::Optimizers::GLPK::m_rebuild_basis</definition>
        <argsstring></argsstring>
        <name>m_rebuild_basis</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="27" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1ac415ba690194d8b37e6d081c6d7d26d1" prot="private" static="no" mutable="no">
        <type>SolutionStatus</type>
        <definition>SolutionStatus idol::Optimizers::GLPK::m_solution_status</definition>
        <argsstring></argsstring>
        <name>m_solution_status</name>
        <initializer>= Loaded</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="29" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a366777cfb3b79acafda5aa3fdf85af6e" prot="private" static="no" mutable="no">
        <type>SolutionReason</type>
        <definition>SolutionReason idol::Optimizers::GLPK::m_solution_reason</definition>
        <argsstring></argsstring>
        <name>m_solution_reason</name>
        <initializer>= NotSpecified</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="30" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a7473aca265cd63ee1952440183104135" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classidol_1_1Point" kindref="compound">PrimalPoint</ref> &gt;</type>
        <definition>std::optional&lt;PrimalPoint&gt; idol::Optimizers::GLPK::m_unbounded_ray</definition>
        <argsstring></argsstring>
        <name>m_unbounded_ray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="31" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1ae9ea219371c2da7af337da33f4e05118" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref> &gt;</type>
        <definition>std::optional&lt;DualPoint&gt; idol::Optimizers::GLPK::m_farkas_certificate</definition>
        <argsstring></argsstring>
        <name>m_farkas_certificate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="32" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a34a4f9cc0e55f92b6b1db08198e73cf3" prot="private" static="no" mutable="no">
        <type>std::stack&lt; int &gt;</type>
        <definition>std::stack&lt;int&gt; idol::Optimizers::GLPK::m_deleted_variables</definition>
        <argsstring></argsstring>
        <name>m_deleted_variables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="34" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1GLPK_1a36713daa09c8a0ec880528c279046074" prot="private" static="no" mutable="no">
        <type>std::stack&lt; int &gt;</type>
        <definition>std::stack&lt;int&gt; idol::Optimizers::GLPK::m_deleted_constraints</definition>
        <argsstring></argsstring>
        <name>m_deleted_constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="35" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a0984882a35f2e94c46187a8ec86f4f23" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_build</definition>
        <argsstring>() override</argsstring>
        <name>hook_build</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ad220e172ed738a3fdbae864b4b7aebfb">hook_build</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a14d425fc69a704408076b51891823280" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_optimize</definition>
        <argsstring>() override</argsstring>
        <name>hook_optimize</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aac4fef8007f641e8226be51f92075fde">hook_optimize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a471d623050020b088eeee69455910968" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_write</definition>
        <argsstring>(const std::string &amp;t_name) override</argsstring>
        <name>hook_write</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a0ed5ef0c109cb918f720d89b48c63b1c">hook_write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="41" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1af0edd4d24f67ca1a6472b92847357e7c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idol::Optimizers::GLPK::hook_add</definition>
        <argsstring>(const Var &amp;t_var, bool t_add_column) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a98820f611fabb1cade45dfb26a164f3c">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_add_column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aed5e2909e5c91f5494e9be7120a5cda6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idol::Optimizers::GLPK::hook_add</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a94048c212f094e69f2fb4218d106f719">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="45" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1afbc5854b26fcc7359b087bf47fe0c7e6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idol::Optimizers::GLPK::hook_add</definition>
        <argsstring>(const QCtr &amp;t_ctr) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1aefb67b89108f757dc774c93bd7f9e82c">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="47" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a08275b258488b0e93d35497d58b1faa9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idol::Optimizers::GLPK::hook_add</definition>
        <argsstring>(const SOSCtr &amp;t_ctr) override</argsstring>
        <name>hook_add</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a1d80bcb3a2cddca9b6a20337f7c8e818">hook_add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="49" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a234a2bc04cc682b9025ddef23f49a0c1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update_objective_sense</definition>
        <argsstring>() override</argsstring>
        <name>hook_update_objective_sense</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1af9eba15b8b1cd3429b9edc0034fcfeed">hook_update_objective_sense</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a8094d944273e17ac9d92f92789b49470" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update_matrix</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var, double t_constant) override</argsstring>
        <name>hook_update_matrix</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a4c1dd91ff344e343f7ec685717e75643">hook_update_matrix</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a5545818b6149b11b4c03e32547350ec6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update</definition>
        <argsstring>() override</argsstring>
        <name>hook_update</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1aaf92407cd44453f6bf48e91654792653">hook_update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="55" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a52a013b5eaff8d0550113247b8bb0ec7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>hook_update</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ad775a4b3cd429c16a4fe03872e4bab2e">hook_update</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a7ede4e7195acea6c465afe4f7d3972d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>hook_update</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1aeb836b3d2be7ee5d6e840b00b52e45a3">hook_update</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ae7a9751168e004b653a0891a31f4be16" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update_objective</definition>
        <argsstring>() override</argsstring>
        <name>hook_update_objective</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ac7bd33e431907e6007aaf6fc16c8dfc3">hook_update_objective</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a3de68b9952212175d451c4d38a002bfa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_update_rhs</definition>
        <argsstring>() override</argsstring>
        <name>hook_update_rhs</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1ae7e7e8e29ad638646b6285d11a834f04">hook_update_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aee8daced67727c2eb764b2c7e7303711" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_remove</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a2a43c210dd3f36cf159390ee0c411b7b">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a34a0e35392164d40172876d1ee4cc905" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_remove</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a4d2ca455a16cc39e49854a83c68ac893">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aa109e1c6250d5dd12c6fded8faf07f32" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_remove</definition>
        <argsstring>(const QCtr &amp;t_ctr) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1a6d0f1541cddb1827e6b1b7eca6623e8a">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ac14f92a005307dd902ae3a1121652237" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::hook_remove</definition>
        <argsstring>(const SOSCtr &amp;t_ctr) override</argsstring>
        <name>hook_remove</name>
        <reimplements refid="classidol_1_1OptimizerWithLazyUpdates_1aa761182c2300d53d5b365a88146a1e76">hook_remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a87c2c8ed191d5765febfb057fdffc1a1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_var_attr</definition>
        <argsstring>(int t_index, int t_type, double t_lb, double t_ub, double t_obj)</argsstring>
        <name>set_var_attr</name>
        <param>
          <type>int</type>
          <declname>t_index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_lb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_ub</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a424a2cfb46e5436c624154b8a3cb42c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_ctr_attr</definition>
        <argsstring>(int t_index, int t_type, double t_rhs)</argsstring>
        <name>set_ctr_attr</name>
        <param>
          <type>int</type>
          <declname>t_index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aa436a5d51dceaf22d7cb479a9d29b42d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::save_simplex_solution_status</definition>
        <argsstring>()</argsstring>
        <name>save_simplex_solution_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aa119a166c91f024abd58735efe9d9830" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::compute_farkas_certificate</definition>
        <argsstring>()</argsstring>
        <name>compute_farkas_certificate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1af51ed55124a0178e59aa3f1b598624ff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::compute_unbounded_ray</definition>
        <argsstring>()</argsstring>
        <name>compute_unbounded_ray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1af3bd30d8414a7140736b7914eecee9fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::save_milp_solution_status</definition>
        <argsstring>()</argsstring>
        <name>save_milp_solution_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aeaade1737d050ec049ce4ef9757475f7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SolutionStatus</type>
        <definition>SolutionStatus idol::Optimizers::GLPK::get_status</definition>
        <argsstring>() const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aba3f84c3dcd1f69e91c85606ef893b16">get_status</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="82" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ab537c2436e707a076017e228a541be6d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SolutionReason</type>
        <definition>SolutionReason idol::Optimizers::GLPK::get_reason</definition>
        <argsstring>() const override</argsstring>
        <name>get_reason</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afceabfe55118b54e898d766914186e77">get_reason</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="83" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1af4a9c9d694ea8dc3207a5a62fd7220e2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_best_obj</definition>
        <argsstring>() const override</argsstring>
        <name>get_best_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a3ddcd68d96101c4df494693cf883337c">get_best_obj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="84" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a0f52311a3e35d6f790b84ac5a91c68f1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_best_bound</definition>
        <argsstring>() const override</argsstring>
        <name>get_best_bound</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5eec9cc5da973fc5db74b4b6fb5ecd61">get_best_bound</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="85" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a903ae8eab93a3107554417ea2ddeb1d9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_var_primal</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_primal</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a4067491b572c01dbd56944809c2ee26f">get_var_primal</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="86" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a18d4476d07a78d82315f60eec49e7cd6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_var_reduced_cost</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_reduced_cost</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a251f4d7d32c83135d3997d72d1ed719c">get_var_reduced_cost</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="87" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a33828ee342e273526c8b99fc7d641505" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_var_ray</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_ray</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ad21a943630920c4e618b7f7450d2668b">get_var_ray</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="88" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a72ab9fa0e6f4a481bda466b68a8b4feb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_ctr_dual</definition>
        <argsstring>(const Ctr &amp;t_ctr) const override</argsstring>
        <name>get_ctr_dual</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a146aa552ab6c5442d7ca49d29d806427">get_ctr_dual</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="89" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a48987d4edf871767d810fc3c6bfda8e8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_ctr_farkas</definition>
        <argsstring>(const Ctr &amp;t_ctr) const override</argsstring>
        <name>get_ctr_farkas</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae0cf7244a71914ddbb08ba8e0baba9ca">get_ctr_farkas</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="90" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a076055a4571b43b007ffadd98f763340" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_relative_gap</definition>
        <argsstring>() const override</argsstring>
        <name>get_relative_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a17d096d345b47194e85cc210351f45d5">get_relative_gap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="91" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a148a2c7ea03bf2e3353c72f95a918cb8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::GLPK::get_absolute_gap</definition>
        <argsstring>() const override</argsstring>
        <name>get_absolute_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a266eddfc1b3aa4ee9a9231ecdf568337">get_absolute_gap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="92" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a407b4e8684bfc81bc0b3186dc8dbc225" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Optimizers::GLPK::get_n_solutions</definition>
        <argsstring>() const override</argsstring>
        <name>get_n_solutions</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a0e98fd1255617e98e988ee41ca896e71">get_n_solutions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="93" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a660e19b0aaa5b7efd7319fc14386d87a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Optimizers::GLPK::get_solution_index</definition>
        <argsstring>() const override</argsstring>
        <name>get_solution_index</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a4d4eb6b7c7885ecdfbae4c87da8d0661">get_solution_index</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="94" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ae8ad6a3d9b98b623473acd8137e03e4a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_solution_index</definition>
        <argsstring>(unsigned int t_index) override</argsstring>
        <name>set_solution_index</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a9ad3e14177821752eb86c58195f1df46">set_solution_index</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>t_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="95" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ac6d2ca51fccd54725b953b00648cd0cc" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::build</definition>
        <argsstring>() final</argsstring>
        <name>build</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8b1cfad93e3eb77c214aa2ff343fcb64">build</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="84" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="254" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6e7e481c584e219797f6f192513aba5a" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::write</definition>
        <argsstring>(const std::string &amp;t_name) final</argsstring>
        <name>write</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a799b0b5d874b3558c48e4d1cef6013a8">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="87" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6b04405ac487c1efa2c6a3591381c1cc" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::add</definition>
        <argsstring>(const Var &amp;t_var) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ac5e35eec35d2dea0b90fcabd30485179">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="90" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="469" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ad6e123a70389780dae4c6537aa62d06c" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::add</definition>
        <argsstring>(const Ctr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae1266859ae2679d14d22bb7449dbbe8b">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="93" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="431" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aabf41c65984959c6993488354a1732e7" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::add</definition>
        <argsstring>(const QCtr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afa9e27c1db69ebe4688fd4ba37ba3121">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="96" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="443" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a486aca612e6750e004ac078a9dea0d43" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::add</definition>
        <argsstring>(const SOSCtr &amp;t_ctr) final</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a86735e064591fb4f00c3499a4b51de87">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="99" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="456" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ad47d7ea59893bd1180d9355920489458" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update</definition>
        <argsstring>() final</argsstring>
        <name>update</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a96d15823685c0e6d2966ef35b26a9503">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="105" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="291" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a2a2f242f99524cbe48ad5fcfac27d450" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::remove</definition>
        <argsstring>(const Var &amp;t_var) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a922c443d01523ee75f16f8cba99ee159">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="114" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="481" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a27e412484d11fcfd55f02dce3edff22b" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::remove</definition>
        <argsstring>(const Ctr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5c021fd9b686acbb6d3b8ee38c7eff9c">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="117" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="496" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5ed4534df7f62284ead3aeedf54140ba" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::remove</definition>
        <argsstring>(const QCtr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8f30740f64bd1bac13b7de206e781c7b">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="120" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="511" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a0552e16fd81c78e261f7031cfeb20d92" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::remove</definition>
        <argsstring>(const SOSCtr &amp;t_ctr) final</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a29b91a6040358d614f50b592917baf39">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="123" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="526" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ab4e10ddc08c02ed073b31a99205b4e71" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::has_lazy</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="126" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ab12c285979af07cae6b14953a91f6cd8" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::has_lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="131" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aebe51241ed97ed09004f4bb12eeed0e6" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::has_lazy</definition>
        <argsstring>(const QCtr &amp;t_qctr) const</argsstring>
        <name>has_lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_qctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="136" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aeb0e3d76d429aec0bf004d859973c9bc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="141" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ade5b6d1eaad61574e229d23d8173cbd0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="142" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a797cc628c79ce7ad7a67f60f4797c693" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="144" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ad1e64e27c7f957cf3bbdf099f9709c2e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="145" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a052bf480aa3bcc8fd289f266c40a1cd8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const QCtr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="147" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a278d66a2ab58636ad41d8c84e73a6276" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const QCtr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="148" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a3ae053f87d41f156148fe5111f07ead7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const SOSCtr &amp;t_ctr)</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="150" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1afca8eb67a4a0eab655460bb121808883" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy</definition>
        <argsstring>(const SOSCtr &amp;t_ctr) const</argsstring>
        <name>lazy</name>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="151" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a2ada47a5777892c3f3eaf44ad3c2ed69" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_vars</definition>
        <argsstring>()</argsstring>
        <name>lazy_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="153" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a74c59ceac9228f11fcb343a813ace27e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_vars</definition>
        <argsstring>() const</argsstring>
        <name>lazy_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="154" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a999a3ced9f58f993d6b7cd3e31460223" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_ctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="156" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a6eeaed40fdb8b6789efa47e915a23494" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_ctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_ctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="157" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a15ffd984d17711d5216b116187781b4a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_qctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="159" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a1b026978aa8c710af68afc6bccdaa1e1" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_qctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_qctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="160" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1abcf83021a63f02773494fb286c0d1d05" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_sosctrs</definition>
        <argsstring>()</argsstring>
        <name>lazy_sosctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="162" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ad9635c1c97ad864a7637250364c7a8c6" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto&amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::lazy_sosctrs</definition>
        <argsstring>() const</argsstring>
        <name>lazy_sosctrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="163" column="16" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a32185d2aacf63a72c9efdc1e7471081f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::set_objective_to_be_updated</definition>
        <argsstring>()</argsstring>
        <name>set_objective_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="165" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a5d97af670cd90cbf79bd54a0f2087232" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::is_objective_to_be_updated</definition>
        <argsstring>() const</argsstring>
        <name>is_objective_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="166" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a412037595f2455772188b4f53b3b599f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::set_objective_as_updated</definition>
        <argsstring>()</argsstring>
        <name>set_objective_as_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="167" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aec626141fa369dbe95840f168e1d2fca" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::set_rhs_to_be_updated</definition>
        <argsstring>()</argsstring>
        <name>set_rhs_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="169" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ab1e00bef62bdeda91857f07ffb5c51a7" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::is_rhs_to_be_updated</definition>
        <argsstring>() const</argsstring>
        <name>is_rhs_to_be_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="170" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a78446a40d25acd488ade53a8090e868d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::set_rhs_as_updated</definition>
        <argsstring>()</argsstring>
        <name>set_rhs_as_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="171" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9a0b7ab294656fc1b5885c4cd0195ec4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_obj_sense</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_sense</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a25a53345053496a7fadd9648df49d254">update_obj_sense</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="173" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a379439d595fe61e4eafa50c04c6745a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_obj</definition>
        <argsstring>() override</argsstring>
        <name>update_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab0f43a11a4c92dbd420df4083f074fd5">update_obj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="174" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a9946479443d34b183d31c8a92de0e80a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_rhs</definition>
        <argsstring>() override</argsstring>
        <name>update_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1cbf5571c1dec27a41a6e9f0e19db124">update_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="175" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aadada370164034f9cb7e303ae0bceec7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_obj_constant</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_constant</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a649970fd70f822ff3565118b23503a18">update_obj_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="176" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1ac784b860e68c0fdc00479fcc58e493ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_mat_coeff</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var) override</argsstring>
        <name>update_mat_coeff</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbbeaecd791d91037912dbea1cc3abe4">update_mat_coeff</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="177" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a04d104e84c5e3abd5f23334c146b8219" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_ctr_type</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a052484a0897b8994517805c284b12cb6">update_ctr_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="178" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1adf46c5ada88ac610b74c9b0c42475a6d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_ctr_rhs</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbdd8996efcaf9e25066f38ceb6d1a94">update_ctr_rhs</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="179" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a577b41037b1b6a0e6d7388c8593af95d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_var_type</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a06c4c149d5a16be2a7bf436e3c94cdc2">update_var_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="180" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a2a25e54be0be97c2de3072b7c89f1045" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_var_lb</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_lb</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aef3dabf3018202b60d9ae6254c481700">update_var_lb</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="181" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1af80a9f62a386edae5113ed565ef4507a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_var_ub</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_ub</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aa6384ec94a6006df19907e140b8e3f67">update_var_ub</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="182" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1aae63066627a541a213f78ec46e539a42" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::update_var_obj</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae226b270b4aafede630156e30f41fea7">update_var_obj</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="183" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_before_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_before_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a6011ffe600f70985dbb808dda523ac73">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a4956a2c6102aebf3a9484d0ff7f96e46">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a4a855c27efcffefc8f78fd16dc9fe7ad">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Benders_1af06758e58c0c572bfa327c62b18913ab">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a4850843cd6b61588860a559650aac54d">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1aab8be367942c63dc38b8d9b1a8d62fac">hook_before_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="74" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_after_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_after_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1ab5e0516fa7a86d515d196c48f62d4444">hook_after_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a8678db892a87725f66c114c19443e07e">hook_after_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="78" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a9586f94c16ffe3b53e4e481abb9e9443" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>static Model idol::Optimizers::GLPK::read_from_glpk</definition>
        <argsstring>(idol::Env &amp;t_env, glp_prob *t_model)</argsstring>
        <name>read_from_glpk</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">idol::Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>glp_prob *</type>
          <declname>t_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="97" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ad96fadf3d1638642705c70681454ba72" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>static Model idol::Optimizers::GLPK::read_from_lp_file</definition>
        <argsstring>(Env &amp;t_env, const std::string &amp;t_filename)</argsstring>
        <name>read_from_lp_file</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="98" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1aadbda1977ea2ca5d5aff00e923b43e31" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>static Model idol::Optimizers::GLPK::read_from_mps_file</definition>
        <argsstring>(Env &amp;t_env, const std::string &amp;t_filename)</argsstring>
        <name>read_from_mps_file</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="99" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ae8aec84a1ecabcaa650f2e6948408de5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Optimizers::GLPK::GLPK</definition>
        <argsstring>(const Model &amp;t_model, bool t_continuous_relaxation)</argsstring>
        <name>GLPK</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_continuous_relaxation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="101" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1afae0cbe96d1e7b74c39e4900cc07ef0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string idol::Optimizers::GLPK::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1f208d4de2375b957812c36009a9a900">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="103" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a264054fd0e97f9c83eef48e430cdc8b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_param_time_limit</definition>
        <argsstring>(double t_time_limit) override</argsstring>
        <name>set_param_time_limit</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab21a570955c865a255914bb1627053bb">set_param_time_limit</reimplements>
        <param>
          <type>double</type>
          <declname>t_time_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1ad3e1a184a67679e3dd031661b693f2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_param_best_obj_stop</definition>
        <argsstring>(double t_best_obj_stop) override</argsstring>
        <name>set_param_best_obj_stop</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5babaec019d640cd7828b5ef213ec335">set_param_best_obj_stop</reimplements>
        <param>
          <type>double</type>
          <declname>t_best_obj_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="107" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a8e12c71d452ae482bfafb4e5939b5d0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_param_best_bound_stop</definition>
        <argsstring>(double t_best_bound_stop) override</argsstring>
        <name>set_param_best_bound_stop</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab60bc3d2dd159d5f061b997771c91887">set_param_best_bound_stop</reimplements>
        <param>
          <type>double</type>
          <declname>t_best_bound_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a68257d803dcde8606946909894eab118" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_param_presolve</definition>
        <argsstring>(bool t_value) override</argsstring>
        <name>set_param_presolve</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ac673045c5d062878f2b75f3b09711f00">set_param_presolve</reimplements>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1af2ba152cf0597c5a727fd8679ede40c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::GLPK::set_param_logs</definition>
        <argsstring>(bool t_value) override</argsstring>
        <name>set_param_logs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a990981b38cd7f9338ab12ab383061861">set_param_logs</reimplements>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a47127b18cabcb123dace383f82c8f1bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int &amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::operator[]</definition>
        <argsstring>(const Var &amp;t_var)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="185" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a70560c744e8d937d4a39a1e994335a17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>const int &amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::operator[]</definition>
        <argsstring>(const Var &amp;t_var) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="186" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a8a25b8db3bbbed680bb980ed27289a52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int &amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::operator[]</definition>
        <argsstring>(const Ctr &amp;t_ctr)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="188" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerWithLazyUpdates_1a3952313864fe61735838745145e3030e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>const int &amp; idol::OptimizerWithLazyUpdates&lt; int , int , int , int  &gt;::operator[]</definition>
        <argsstring>(const Ctr &amp;t_ctr) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" line="189" column="20" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const ::<ref refid="classidol_1_1Model" kindref="compound">idol::Model</ref> &amp;</type>
        <definition>virtual const ::idol::Model&amp; idol::impl::Optimizer::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="110" column="34" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_logs</definition>
        <argsstring>() const</argsstring>
        <name>get_param_logs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="138" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_time_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_time_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="142" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_thread_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_thread_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="146" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_threads</definition>
        <argsstring>(unsigned int t_threads)</argsstring>
        <name>set_param_threads</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aab93f37ed1935bb910e960f8f154a624">set_param_threads</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>t_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="148" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_obj_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_obj_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="150" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_bound_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_bound_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="154" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_relative_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_relative_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="158" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_mip_relative_gap</definition>
        <argsstring>(double t_tol_mip_relative_gap)</argsstring>
        <name>set_tol_mip_relative_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a88280645ce1379a569f5c4ab9647c6cd">set_tol_mip_relative_gap</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_mip_relative_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="160" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_absolute_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_absolute_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="162" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_mip_absolute_gap</definition>
        <argsstring>(double t_mip_tol_absolute_gap)</argsstring>
        <name>set_tol_mip_absolute_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a4abc0ef54ea1a7e181b776b996ed0257">set_tol_mip_absolute_gap</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_mip_tol_absolute_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="164" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_feasibility</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_feasibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="166" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_feasibility</definition>
        <argsstring>(double t_tol_feasibility)</argsstring>
        <name>set_tol_feasibility</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a3b03101cf613f63f222e9c6abe5402c6">set_tol_feasibility</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_feasibility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="168" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_optimality</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_optimality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="170" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_optimality</definition>
        <argsstring>(double t_tol_optimality)</argsstring>
        <name>set_tol_optimality</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a1403ed7cb1cc90e9539227ae38f9e1d9">set_tol_optimality</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_optimality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="172" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_integer</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="174" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_integer</definition>
        <argsstring>(double t_tol_integer)</argsstring>
        <name>set_tol_integer</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aee69b69800ee55fa4d11a3a8c4ce1e19">set_tol_integer</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="176" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_iteration_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_iteration_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="178" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::set_param_iteration_limit</definition>
        <argsstring>(unsigned int t_iteration_limit)</argsstring>
        <name>set_param_iteration_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>t_iteration_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="180" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_presolve</definition>
        <argsstring>() const</argsstring>
        <name>get_param_presolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="182" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_infeasible_or_unbounded_info</definition>
        <argsstring>() const</argsstring>
        <name>get_param_infeasible_or_unbounded_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="186" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_infeasible_or_unbounded_info</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_infeasible_or_unbounded_info</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ad74b099bb65667a81d117cef470058e1">set_param_infeasible_or_unbounded_info</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="188" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const Timer&amp; idol::impl::Optimizer::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="190" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_remaining_time</definition>
        <argsstring>() const</argsstring>
        <name>get_remaining_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="192" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is_terminated</definition>
        <argsstring>() const</argsstring>
        <name>is_terminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="194" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a4468720781d9278f1e2d6628a3a00e7b">terminate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="196" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>()</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="198" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="206" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="214" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="214" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1GLPK_1a0489655131206755aa3a31455ee4aba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1Model" kindref="compound">Model</ref></type>
        <definition>static Model idol::Optimizers::GLPK::read_from_file</definition>
        <argsstring>(Env &amp;t_env, const std::string &amp;t_filename)</argsstring>
        <name>read_from_file</name>
        <param>
          <type><ref refid="classidol_1_1Env" kindref="compound">Env</ref> &amp;</type>
          <declname>t_env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="115" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="2">
        <label>idol::OptimizerWithLazyUpdates&lt; int, int, int, int &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; int, int, int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>idol::Optimizers::GLPK</label>
        <link refid="classidol_1_1Optimizers_1_1GLPK"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT, SOSCtrImplT &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="2">
        <label>idol::OptimizerWithLazyUpdates&lt; int, int, int, int &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; int, int, int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>idol::Optimizers::GLPK</label>
        <link refid="classidol_1_1Optimizers_1_1GLPK"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::OptimizerWithLazyUpdates&lt; VarImplT, CtrImplT, QCtrImplT, SOSCtrImplT &gt;</label>
        <link refid="classidol_1_1OptimizerWithLazyUpdates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" line="19" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h" bodystart="19" bodyend="116"/>
    <listofallmembers>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6b04405ac487c1efa2c6a3591381c1cc" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ad6e123a70389780dae4c6537aa62d06c" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aabf41c65984959c6993488354a1732e7" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>add</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a486aca612e6750e004ac078a9dea0d43" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>add</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>as</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>as</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ac6d2ca51fccd54725b953b00648cd0cc" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>build</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aa119a166c91f024abd58735efe9d9830" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>compute_farkas_certificate</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1af51ed55124a0178e59aa3f1b598624ff" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>compute_unbounded_ray</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a148a2c7ea03bf2e3353c72f95a918cb8" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_absolute_gap</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a0f52311a3e35d6f790b84ac5a91c68f1" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_best_bound</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1af4a9c9d694ea8dc3207a5a62fd7220e2" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_best_obj</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a72ab9fa0e6f4a481bda466b68a8b4feb" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_ctr_dual</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a48987d4edf871767d810fc3c6bfda8e8" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_ctr_farkas</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a407b4e8684bfc81bc0b3186dc8dbc225" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_n_solutions</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_best_bound_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_iteration_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_logs</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_thread_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_param_time_limit</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ab537c2436e707a076017e228a541be6d" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_reason</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a076055a4571b43b007ffadd98f763340" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_remaining_time</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a660e19b0aaa5b7efd7319fc14386d87a" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_solution_index</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aeaade1737d050ec049ce4ef9757475f7" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_status</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>get_tol_optimality</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a903ae8eab93a3107554417ea2ddeb1d9" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_var_primal</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a33828ee342e273526c8b99fc7d641505" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_var_ray</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a18d4476d07a78d82315f60eec49e7cd6" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>get_var_reduced_cost</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ae8aec84a1ecabcaa650f2e6948408de5" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>GLPK</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ab4e10ddc08c02ed073b31a99205b4e71" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ab12c285979af07cae6b14953a91f6cd8" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aebe51241ed97ed09004f4bb12eeed0e6" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>has_lazy</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1af0edd4d24f67ca1a6472b92847357e7c" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_add</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aed5e2909e5c91f5494e9be7120a5cda6" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_add</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1afbc5854b26fcc7359b087bf47fe0c7e6" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_add</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a08275b258488b0e93d35497d58b1faa9" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_add</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_after_optimize</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_before_optimize</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a0984882a35f2e94c46187a8ec86f4f23" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_build</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a14d425fc69a704408076b51891823280" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_optimize</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aee8daced67727c2eb764b2c7e7303711" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a34a0e35392164d40172876d1ee4cc905" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aa109e1c6250d5dd12c6fded8faf07f32" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ac14f92a005307dd902ae3a1121652237" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a5545818b6149b11b4c03e32547350ec6" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a52a013b5eaff8d0550113247b8bb0ec7" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a7ede4e7195acea6c465afe4f7d3972d3" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a8094d944273e17ac9d92f92789b49470" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update_matrix</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ae7a9751168e004b653a0891a31f4be16" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update_objective</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a234a2bc04cc682b9025ddef23f49a0c1" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update_objective_sense</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a3de68b9952212175d451c4d38a002bfa" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_update_rhs</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a471d623050020b088eeee69455910968" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>hook_write</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>is</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5d97af670cd90cbf79bd54a0f2087232" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>is_objective_to_be_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ab1e00bef62bdeda91857f07ffb5c51a7" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>is_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>is_terminated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aeb0e3d76d429aec0bf004d859973c9bc" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ade5b6d1eaad61574e229d23d8173cbd0" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a797cc628c79ce7ad7a67f60f4797c693" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ad1e64e27c7f957cf3bbdf099f9709c2e" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a052bf480aa3bcc8fd289f266c40a1cd8" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a278d66a2ab58636ad41d8c84e73a6276" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a3ae053f87d41f156148fe5111f07ead7" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1afca8eb67a4a0eab655460bb121808883" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a999a3ced9f58f993d6b7cd3e31460223" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6eeaed40fdb8b6789efa47e915a23494" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_ctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a15ffd984d17711d5216b116187781b4a" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a1b026978aa8c710af68afc6bccdaa1e1" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_qctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1abcf83021a63f02773494fb286c0d1d05" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_sosctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ad9635c1c97ad864a7637250364c7a8c6" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_sosctrs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a2ada47a5777892c3f3eaf44ad3c2ed69" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_vars</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a74c59ceac9228f11fcb343a813ace27e" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>lazy_vars</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aca21e65a62837e19739be2734c7ca4aa" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_continuous_relaxation</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a36713daa09c8a0ec880528c279046074" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_deleted_constraints</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a34a4f9cc0e55f92b6b1db08198e73cf3" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_deleted_variables</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ae9ea219371c2da7af337da33f4e05118" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_farkas_certificate</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ae207a23a4826627e0154bc381814d526" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_mip_parameters</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a71aa90447c0f2f7cce6dd94af0e17d03" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_model</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1adb01f899f2dcd057cd9e8aeae47f7d92" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_rebuild_basis</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a5c9c5ed7e81b7cacc31806015aff06c8" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_simplex_parameters</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a366777cfb3b79acafda5aa3fdf85af6e" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_solution_reason</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ac415ba690194d8b37e6d081c6d7d26d1" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_solution_status</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a87ef2c7bf40028333a651bbc9b2d4246" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_solved_as_mip</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a7473aca265cd63ee1952440183104135" prot="private" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>m_unbounded_ray</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1afae0cbe96d1e7b74c39e4900cc07ef0b" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>name</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a47127b18cabcb123dace383f82c8f1bd" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a70560c744e8d937d4a39a1e994335a17" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a8a25b8db3bbbed680bb980ed27289a52" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>operator[]</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a3952313864fe61735838745145e3030e" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>operator[]</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>optimize</name></member>
      <member refid="classidol_1_1Optimizer_1a8793c25aaba434c6b7e9a85bcca48e16" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>Optimizer</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a43239c0704275f50477c454a1902c549" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>OptimizerWithLazyUpdates</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>parent</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a0489655131206755aa3a31455ee4aba6" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>read_from_file</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a9586f94c16ffe3b53e4e481abb9e9443" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>read_from_glpk</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ad96fadf3d1638642705c70681454ba72" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>read_from_lp_file</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aadbda1977ea2ca5d5aff00e923b43e31" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>read_from_mps_file</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a2a2f242f99524cbe48ad5fcfac27d450" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a27e412484d11fcfd55f02dce3edff22b" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a5ed4534df7f62284ead3aeedf54140ba" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>remove</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a0552e16fd81c78e261f7031cfeb20d92" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1af3bd30d8414a7140736b7914eecee9fb" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>save_milp_solution_status</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1aa436a5d51dceaf22d7cb479a9d29b42d" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>save_simplex_solution_status</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a424a2cfb46e5436c624154b8a3cb42c3" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_ctr_attr</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a412037595f2455772188b4f53b3b599f" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_objective_as_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a32185d2aacf63a72c9efdc1e7471081f" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_objective_to_be_updated</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a8e12c71d452ae482bfafb4e5939b5d0f" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_best_bound_stop</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ad3e1a184a67679e3dd031661b693f2b0" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_iteration_limit</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1af2ba152cf0597c5a727fd8679ede40c5" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_logs</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a68257d803dcde8606946909894eab118" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_threads</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a264054fd0e97f9c83eef48e430cdc8b3" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_param_time_limit</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a78446a40d25acd488ade53a8090e868d" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_rhs_as_updated</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aec626141fa369dbe95840f168e1d2fca" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_rhs_to_be_updated</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1ae8ad6a3d9b98b623473acd8137e03e4a" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_solution_index</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>set_tol_optimality</name></member>
      <member refid="classidol_1_1Optimizers_1_1GLPK_1a87c2c8ed191d5765febfb057fdffc1a1" prot="protected" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>set_var_attr</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>terminate</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" virt="non-virtual"><scope>idol::Optimizers::GLPK</scope><name>time</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ad47d7ea59893bd1180d9355920489458" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1adf46c5ada88ac610b74c9b0c42475a6d" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_ctr_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a04d104e84c5e3abd5f23334c146b8219" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_ctr_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1ac784b860e68c0fdc00479fcc58e493ec" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_mat_coeff</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a379439d595fe61e4eafa50c04c6745a8" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_obj</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aadada370164034f9cb7e303ae0bceec7" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_obj_constant</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9a0b7ab294656fc1b5885c4cd0195ec4" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_obj_sense</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a9946479443d34b183d31c8a92de0e80a" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_rhs</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a2a25e54be0be97c2de3072b7c89f1045" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_var_lb</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1aae63066627a541a213f78ec46e539a42" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_var_obj</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a577b41037b1b6a0e6d7388c8593af95d" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_var_type</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1af80a9f62a386edae5113ed565ef4507a" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>update_var_ub</name></member>
      <member refid="classidol_1_1OptimizerWithLazyUpdates_1a6e7e481c584e219797f6f192513aba5a" prot="protected" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>write</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a87f1a4dcd75963657f0577387bfa3dea" prot="public" virt="virtual"><scope>idol::Optimizers::GLPK</scope><name>~Optimizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
