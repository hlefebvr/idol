<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::DantzigWolfe::InfeasibilityStrategyFactory</compoundname>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts" prot="public" virt="non-virtual">idol::DantzigWolfe::ArtificialCosts</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1FarkasPricing" prot="public" virt="non-virtual">idol::DantzigWolfe::FarkasPricing</derivedcompoundref>
    <innerclass refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy" prot="public">idol::DantzigWolfe::InfeasibilityStrategyFactory::Strategy</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1a08028cfb0b71ccb7c5bd77f3b545b125" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::DantzigWolfe::InfeasibilityStrategyFactory::~InfeasibilityStrategyFactory</definition>
        <argsstring>()=default</argsstring>
        <name>~InfeasibilityStrategyFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="21" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1a88f18e5471d2736e544c0f6182810877" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1_1Strategy" kindref="compound">Strategy</ref> *</type>
        <definition>virtual Strategy* idol::DantzigWolfe::InfeasibilityStrategyFactory::operator()</definition>
        <argsstring>() const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1a7c658d313257705d1ef831d1b98450ce">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1FarkasPricing_1af4a52f1fa77f8ffab350f7b20733d483">operator()</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="55" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1aabb90a4238a480ae8bf72c01ff9efa56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory" kindref="compound">InfeasibilityStrategyFactory</ref> *</type>
        <definition>virtual InfeasibilityStrategyFactory* idol::DantzigWolfe::InfeasibilityStrategyFactory::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts_1a8eb39da7440f994e106a28e7badf782d">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1FarkasPricing_1af5ec2a08f436f22bc8bd51a73bc59594">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="57" column="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::DantzigWolfe::ArtificialCosts</label>
        <link refid="classidol_1_1DantzigWolfe_1_1ArtificialCosts"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::DantzigWolfe::FarkasPricing</label>
        <link refid="classidol_1_1DantzigWolfe_1_1FarkasPricing"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::DantzigWolfe::InfeasibilityStrategyFactory</label>
        <link refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::DantzigWolfe::InfeasibilityStrategyFactory</label>
        <link refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" line="19" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/DantzigWolfeInfeasibilityStrategy.h" bodystart="19" bodyend="58"/>
    <listofallmembers>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1aabb90a4238a480ae8bf72c01ff9efa56" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::InfeasibilityStrategyFactory</scope><name>clone</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1a88f18e5471d2736e544c0f6182810877" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::InfeasibilityStrategyFactory</scope><name>operator()</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1InfeasibilityStrategyFactory_1a08028cfb0b71ccb7c5bd77f3b545b125" prot="public" virt="virtual"><scope>idol::DantzigWolfe::InfeasibilityStrategyFactory</scope><name>~InfeasibilityStrategyFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
