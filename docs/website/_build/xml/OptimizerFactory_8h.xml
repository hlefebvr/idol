<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="OptimizerFactory_8h" kind="file" language="C++">
    <compoundname>OptimizerFactory.h</compoundname>
    <includes refid="Optimizer_8h" local="yes">Optimizer.h</includes>
    <includes local="no">optional</includes>
    <includes local="no">functional</includes>
    <includedby refid="BranchAndCut_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/BranchAndCut.h</includedby>
    <includedby refid="bilevel_2optimizers_2KKT_2KKT_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/KKT/KKT.h</includedby>
    <includedby refid="MinMax__Dualize_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/MinMaxDualize/MinMax_Dualize.h</includedby>
    <includedby refid="Optimizers__PessimisticAsOptimistic_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/PessimisticAsOptimistic/Optimizers_PessimisticAsOptimistic.h</includedby>
    <includedby refid="PessimisticAsOptimistic_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/PessimisticAsOptimistic/PessimisticAsOptimistic.h</includedby>
    <includedby refid="StrongDuality_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/StrongDuality/StrongDuality.h</includedby>
    <includedby refid="MibS_8h" local="yes">/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/wrappers/MibS/MibS.h</includedby>
    <includedby refid="Model_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/models/Model.h</includedby>
    <includedby refid="BranchAndBound_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/BranchAndBound.h</includedby>
    <includedby refid="Optimizers__BranchAndBound_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/Optimizers_BranchAndBound.h</includedby>
    <includedby refid="LocalBranching_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/LocalBranching.h</includedby>
    <includedby refid="RENS_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/RENS.h</includedby>
    <includedby refid="DantzigWolfeDecomposition_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/DantzigWolfeDecomposition.h</includedby>
    <includedby refid="dantzig-wolfe_2SubProblem_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/SubProblem.h</includedby>
    <includedby refid="PADM_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PADM.h</includedby>
    <includedby refid="PenaltyMethod_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyMethod.h</includedby>
    <includedby refid="padm_2SubProblem_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/SubProblem.h</includedby>
    <includedby refid="Cplex_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Cplex/Cplex.h</includedby>
    <includedby refid="GLPK_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/GLPK.h</includedby>
    <includedby refid="Gurobi_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Gurobi.h</includedby>
    <includedby refid="HiGHS_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/HiGHS/HiGHS.h</includedby>
    <includedby refid="JuMP_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/JuMP/JuMP.h</includedby>
    <includedby refid="Mosek_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Mosek/Mosek.h</includedby>
    <includedby refid="Osi_8h" local="yes">/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Osi/Osi.h</includedby>
    <includedby refid="AffineDecisionRule_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/affine-decision-rule/AffineDecisionRule.h</includedby>
    <includedby refid="Optimizers__AffineDecisionRule_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/affine-decision-rule/Optimizers_AffineDecisionRule.h</includedby>
    <includedby refid="Benders_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/benders/Benders.h</includedby>
    <includedby refid="ColumnAndConstraintGeneration_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/column-and-constraint-generation/ColumnAndConstraintGeneration.h</includedby>
    <includedby refid="Optimizers__ColumnAndConstraintGeneration_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/column-and-constraint-generation/Optimizers_ColumnAndConstraintGeneration.h</includedby>
    <includedby refid="Deterministic_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/deterministic/Deterministic.h</includedby>
    <includedby refid="Optimizers__Deterministic_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/deterministic/Optimizers_Deterministic.h</includedby>
    <includedby refid="Optimizers__ScenarioBasedKAdaptabilityProblemSolver_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/KAdaptabilityBranchAndBound/Optimizers_ScenarioBasedKAdaptabilityProblemSolver.h</includedby>
    <includedby refid="ScenarioBasedKAdaptabilityProblemSolver_8h" local="yes">/home/henri/Research/idol/lib/include/idol/robust/optimizers/KAdaptabilityBranchAndBound/ScenarioBasedKAdaptabilityProblemSolver.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>Optimizer.h</label>
        <link refid="Optimizer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h</label>
        <link refid="OptimizerFactory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stdexcept</label>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="7">
        <label>idol/general/numericals.h</label>
        <link refid="numericals_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ostream</label>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="13">
        <label>idol/mixed-integer/modeling/Types.h</label>
        <link refid="Types_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="5">
        <label>Timer.h</label>
        <link refid="Timer_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>idol/general/utils/exceptions/Exception.h</label>
        <link refid="Exception_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>idol/general/utils/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="47">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/UniformlyRandom.h</label>
        <link refid="factories_2UniformlyRandom_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/models/Model.h</label>
        <link refid="Model_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/henri/Research/idol/lib/include/idol/solvers.h</label>
        <link refid="solvers_8h_source"/>
      </node>
      <node id="26">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/Optimizers_GLPK.h</label>
        <link refid="Optimizers__GLPK_8h_source"/>
      </node>
      <node id="51">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/logs/Info.h</label>
        <link refid="branch-and-bound_2logs_2Info_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Optimizers_DantzigWolfeDecomposition.h</label>
        <link refid="Optimizers__DantzigWolfeDecomposition_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/CutSeparation.h</label>
        <link refid="CutSeparation_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyMethod.h</label>
        <link refid="PenaltyMethod_8h_source"/>
      </node>
      <node id="29">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/JuMP/Optimizers_Coluna.h</label>
        <link refid="Optimizers__Coluna_8h_source"/>
      </node>
      <node id="31">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/objects/Versions.h</label>
        <link refid="Versions_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/SubProblem.h</label>
        <link refid="padm_2SubProblem_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Osi/Osi.h</label>
        <link refid="Osi_8h_source"/>
      </node>
      <node id="61">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/LazyCutCallback.h</label>
        <link refid="LazyCutCallback_8h_source"/>
      </node>
      <node id="10">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/modeling/Description.h</label>
        <link refid="bilevel_2modeling_2Description_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/KKT/KKT.h</label>
        <link refid="bilevel_2optimizers_2KKT_2KKT_8h_source"/>
      </node>
      <node id="56">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/IntegerMaster.h</label>
        <link refid="IntegerMaster_8h_source"/>
      </node>
      <node id="7">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/StrongDuality/StrongDuality.h</label>
        <link refid="StrongDuality_8h_source"/>
      </node>
      <node id="22">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/column-and-constraint-generation/Optimizers_ColumnAndConstraintGeneration.h</label>
        <link refid="Optimizers__ColumnAndConstraintGeneration_8h_source"/>
      </node>
      <node id="58">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/watchers/ExportBranchAndBoundTreeToCSV.h</label>
        <link refid="ExportBranchAndBoundTreeToCSV_8h_source"/>
      </node>
      <node id="6">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/PessimisticAsOptimistic/PessimisticAsOptimistic.h</label>
        <link refid="PessimisticAsOptimistic_8h_source"/>
      </node>
      <node id="30">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/models/KKT.h</label>
        <link refid="mixed-integer_2modeling_2models_2KKT_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/Formulation.h</label>
        <link refid="mixed-integer_2optimizers_2dantzig-wolfe_2Formulation_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/VariableBranching.h</label>
        <link refid="factories_2VariableBranching_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/affine-decision-rule/Optimizers_AffineDecisionRule.h</label>
        <link refid="Optimizers__AffineDecisionRule_8h_source"/>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h</label>
        <link refid="OptimizerFactory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeUpdator.h</label>
        <link refid="DefaultNodeUpdator_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/JuMP/JuMP.h</label>
        <link refid="JuMP_8h_source"/>
      </node>
      <node id="62">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/UserCutCallback.h</label>
        <link refid="UserCutCallback_8h_source"/>
      </node>
      <node id="46">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/StrongBranching.h</label>
        <link refid="impls_2StrongBranching_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/MinMaxDualize/MinMax_Dualize.h</label>
        <link refid="MinMax__Dualize_8h_source"/>
      </node>
      <node id="17">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/benders/Benders.h</label>
        <link refid="Benders_8h_source"/>
      </node>
      <node id="67">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/infeasibility-strategies/ArtificialCosts.h</label>
        <link refid="ArtificialCosts_8h_source"/>
      </node>
      <node id="49">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/BranchAndBound.h</label>
        <link refid="BranchAndBound_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/column-and-constraint-generation/AdversarialProblemSolver.h</label>
        <link refid="AdversarialProblemSolver_8h_source"/>
      </node>
      <node id="8">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/wrappers/MibS/MibS.h</label>
        <link refid="MibS_8h_source"/>
      </node>
      <node id="14">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/KKT/Optimizers_KKT.h</label>
        <link refid="Optimizers__KKT_8h_source"/>
      </node>
      <node id="16">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/StrongDuality/Optimizers_StrongDuality.h</label>
        <link refid="Optimizers__StrongDuality_8h_source"/>
      </node>
      <node id="72">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PenaltyUpdates.h</label>
        <link refid="PenaltyUpdates_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>/home/henri/Research/idol/lib/include/idol/robust/modeling/Description.h</label>
        <link refid="robust_2modeling_2Description_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h</label>
        <link refid="Optimizers__BranchAndCut_8h_source"/>
      </node>
      <node id="64">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/DantzigWolfeDecomposition.h</label>
        <link refid="DantzigWolfeDecomposition_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/PessimisticAsOptimistic/Optimizers_PessimisticAsOptimistic.h</label>
        <link refid="Optimizers__PessimisticAsOptimistic_8h_source"/>
      </node>
      <node id="78">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/LocalBranching.h</label>
        <link refid="LocalBranching_8h_source"/>
      </node>
      <node id="41">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/FirstInfeasibleFound.h</label>
        <link refid="factories_2FirstInfeasibleFound_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/affine-decision-rule/AffineDecisionRule.h</label>
        <link refid="AffineDecisionRule_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/PseudoCost.h</label>
        <link refid="factories_2PseudoCost_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/MostInfeasible.h</label>
        <link refid="factories_2MostInfeasible_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h</label>
        <link refid="DefaultNodeInfo_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/modeling/objects/Env.h</label>
        <link refid="Env_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/deterministic/Deterministic.h</label>
        <link refid="Deterministic_8h_source"/>
      </node>
      <node id="20">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/column-and-constraint-generation/Formulation.h</label>
        <link refid="robust_2optimizers_2column-and-constraint-generation_2Formulation_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/heuristics/RENS.h</label>
        <link refid="RENS_8h_source"/>
      </node>
      <node id="84">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Mosek/Mosek.h</label>
        <link refid="Mosek_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/HiGHS/HiGHS.h</label>
        <link refid="HiGHS_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h</label>
        <link refid="BranchAndBoundCallback_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/KAdaptabilityBranchAndBound/ScenarioBasedKAdaptabilityProblemSolver.h</label>
        <link refid="ScenarioBasedKAdaptabilityProblemSolver_8h_source"/>
      </node>
      <node id="52">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/Optimizers_BranchAndBound.h</label>
        <link refid="Optimizers__BranchAndBound_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/StrongBranching.h</label>
        <link refid="factories_2StrongBranching_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/GLPK/GLPK.h</label>
        <link refid="GLPK_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/LeastInfeasible.h</label>
        <link refid="factories_2LeastInfeasible_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/logs/Factory.h</label>
        <link refid="branch-and-bound_2logs_2Factory_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Optimizers_Gurobi.h</label>
        <link refid="Optimizers__Gurobi_8h_source"/>
      </node>
      <node id="11">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/modeling/read_from_file.h</label>
        <link refid="read__from__file_8h_source"/>
      </node>
      <node id="18">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/benders/Optimizers_Benders.h</label>
        <link refid="Optimizers__Benders_8h_source"/>
      </node>
      <node id="57">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/ReducedCostFixing.h</label>
        <link refid="ReducedCostFixing_8h_source"/>
      </node>
      <node id="80">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/SubProblem.h</label>
        <link refid="dantzig-wolfe_2SubProblem_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/Formulation.h</label>
        <link refid="mixed-integer_2optimizers_2padm_2Formulation_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/JuMP/Optimizers_JuMP.h</label>
        <link refid="Optimizers__JuMP_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/PADM.h</label>
        <link refid="PADM_8h_source"/>
      </node>
      <node id="2">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/BranchAndCut.h</label>
        <link refid="BranchAndCut_8h_source"/>
      </node>
      <node id="37">
        <label>/home/henri/Research/idol/lib/include/idol/modeling.h</label>
        <link refid="modeling_8h_source"/>
      </node>
      <node id="19">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/column-and-constraint-generation/ColumnAndConstraintGeneration.h</label>
        <link refid="ColumnAndConstraintGeneration_8h_source"/>
      </node>
      <node id="55">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/callbacks/cutting-planes/KnapsackCover.h</label>
        <link refid="KnapsackCover_8h_source"/>
      </node>
      <node id="36">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Gurobi/Gurobi.h</label>
        <link refid="Gurobi_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/deterministic/Optimizers_Deterministic.h</label>
        <link refid="Optimizers__Deterministic_8h_source"/>
      </node>
      <node id="39">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/BranchingWithPriority.h</label>
        <link refid="factories_2BranchingWithPriority_8h_source"/>
      </node>
      <node id="54">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h</label>
        <link refid="CallbackAsBranchAndBoundCallback_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerWithLazyUpdates.h</label>
        <link refid="OptimizerWithLazyUpdates_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/henri/Research/idol/lib/include/idol/robust/optimizers/KAdaptabilityBranchAndBound/Optimizers_ScenarioBasedKAdaptabilityProblemSolver.h</label>
        <link refid="Optimizers__ScenarioBasedKAdaptabilityProblemSolver_8h_source"/>
      </node>
      <node id="40">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/Diver.h</label>
        <link refid="factories_2Diver_8h_source"/>
      </node>
      <node id="33">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/wrappers/Cplex/Cplex.h</label>
        <link refid="Cplex_8h_source"/>
      </node>
      <node id="12">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/modeling/write_to_file.h</label>
        <link refid="write__to__file_8h_source"/>
      </node>
      <node id="69">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/padm/Optimizers_PADM.h</label>
        <link refid="Optimizers__PADM_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/MinMaxDualize/Optimizers_MinMax_Dualize.h</label>
        <link refid="Optimizers__MinMax__Dualize_8h_source"/>
      </node>
      <node id="66">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/ColumnGeneration.h</label>
        <link refid="ColumnGeneration_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classidol_1_1OptimizerFactory" prot="public">idol::OptimizerFactory</innerclass>
    <innerclass refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public">idol::OptimizerFactoryWithDefaultParameters</innerclass>
    <innernamespace refid="namespaceidol">idol</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>henri<sp/>on<sp/>21/03/23.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IDOL_OPTIMIZERFACTORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDOL_OPTIMIZERFACTORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Optimizer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">idol<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Model;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OptimizerFactory;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OptimizerFactoryWithDefaultParameters;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classidol_1_1OptimizerFactory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1OptimizerFactory" kindref="compound">idol::OptimizerFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classidol_1_1OptimizerFactory_1a6363ef08653c866a17e474a1dc8c0f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref>*<sp/><ref refid="classidol_1_1OptimizerFactory_1a6363ef08653c866a17e474a1dc8c0f0a" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Model" kindref="compound">Model</ref>&amp;<sp/>t_model)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classidol_1_1OptimizerFactory_1af42e193fdac6920f4dfda602a98bf4a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>*<sp/><ref refid="classidol_1_1OptimizerFactory_1af42e193fdac6920f4dfda602a98bf4a1" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>T&amp;<sp/>as()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Optimizer<sp/>factory<sp/>could<sp/>not<sp/>be<sp/>cast<sp/>to<sp/>desired<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>as()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Optimizer<sp/>factory<sp/>could<sp/>not<sp/>be<sp/>cast<sp/>to<sp/>desired<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="66" refid="classidol_1_1OptimizerFactoryWithDefaultParameters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" kindref="compound">idol::OptimizerFactoryWithDefaultParameters</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>m_logs;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>m_time_limit;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_thread_limit;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_iteration_count_limit;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>m_best_bound_stop;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>m_best_obj_stop;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>m_relative_gap_tolerance;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/>m_absolute_gap_tolerance;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>m_presolve;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>m_infeasible_or_unbounded_info;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/>crtp()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">CRTP&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CRTP&amp;<sp/>crtp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">CRTP&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_default_parameters(<ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref>*<sp/>t_optimizer)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a495f616340209e28fde87270f69ce28f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a495f616340209e28fde87270f69ce28f" kindref="member">with_logs</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a192ee8cb58e8e1b2d33b0d58df3b0123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a192ee8cb58e8e1b2d33b0d58df3b0123" kindref="member">with_time_limit</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_time_limit);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a62819967487a06cacad8ca03d0891090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a62819967487a06cacad8ca03d0891090" kindref="member">with_thread_limit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_max_n_threads);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ac342238df14873996a25d1182b5a2a7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ac342238df14873996a25d1182b5a2a7d" kindref="member">with_iteration_limit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_iteration_count_limit);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a10a7490342b8cb9a0719f150ad70513d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a10a7490342b8cb9a0719f150ad70513d" kindref="member">with_best_bound_stop</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_best_bound_stop);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad3e0bc7a6d07853f2f54b4b47aec52ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad3e0bc7a6d07853f2f54b4b47aec52ce" kindref="member">with_best_obj_stop</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_user_best_obj);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad18892029116d8e33e6731f0041be83d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad18892029116d8e33e6731f0041be83d" kindref="member">with_relative_gap_tolerance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_relative_gap_tolerance);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a799ede043bde76795f7f4fd9fac0880c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a799ede043bde76795f7f4fd9fac0880c" kindref="member">with_absolute_gap_tolerance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_absolute_gap_tolerance);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a31b5bc10c1e96a84b4617b35bf137ea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a31b5bc10c1e96a84b4617b35bf137ea2" kindref="member">with_presolve</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae015603918a608ffe8ef04e6145e40e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae015603918a608ffe8ef04e6145e40e0" kindref="member">with_infeasible_or_unbounded_info</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a3197aa27445d62fd0491104238275c97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a3197aa27445d62fd0491104238275c97" kindref="member">conditional</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_conditional_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CRTP&amp;)&gt;&amp;<sp/>t_if);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae8fb4db490981b38547b5b6b86b3d6f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRTP&amp;<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae8fb4db490981b38547b5b6b86b3d6f3" kindref="member">conditional</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_conditional_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CRTP&amp;)&gt;&amp;<sp/>t_if,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CRTP&amp;)&gt;&amp;<sp/>t_else);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">CRTP<sp/>&amp;</highlight></codeline>
<codeline lineno="266" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae8fb4db490981b38547b5b6b86b3d6f3" refkind="member"><highlight class="normal"><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a3197aa27445d62fd0491104238275c97" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::conditional</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_conditional_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CRTP&amp;)&gt;&amp;<sp/>t_if,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CRTP&amp;)&gt;&amp;<sp/>t_else)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>t_conditional_value<sp/>?<sp/>t_if(crtp())<sp/>:<sp/>t_else(crtp());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">CRTP<sp/>&amp;</highlight></codeline>
<codeline lineno="273" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a3197aa27445d62fd0491104238275c97" refkind="member"><highlight class="normal"><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a3197aa27445d62fd0491104238275c97" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::conditional</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_conditional_value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CRTP&amp;)&gt;&amp;<sp/>t_if)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conditional(t_conditional_value,<sp/>t_if,<sp/>[](CRTP&amp;){});</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="278" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae015603918a608ffe8ef04e6145e40e0" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ae015603918a608ffe8ef04e6145e40e0" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_infeasible_or_unbounded_info</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_infeasible_or_unbounded_info.has_value())<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>infeasible-or-unbounded-info<sp/>instruction<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>m_infeasible_or_unbounded_info<sp/>=<sp/>t_value;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="290" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a31b5bc10c1e96a84b4617b35bf137ea2" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a31b5bc10c1e96a84b4617b35bf137ea2" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_presolve</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_presolve.has_value())<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>get_param_presolve<sp/>instruction<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>m_presolve<sp/>=<sp/>t_value;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="302" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a799ede043bde76795f7f4fd9fac0880c" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a799ede043bde76795f7f4fd9fac0880c" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_absolute_gap_tolerance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_absolute_gap_tolerance)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_absolute_gap_tolerance.has_value())<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>absolute<sp/>gap<sp/>tolerance<sp/>count<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>m_absolute_gap_tolerance<sp/>=<sp/>t_absolute_gap_tolerance;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="314" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad18892029116d8e33e6731f0041be83d" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad18892029116d8e33e6731f0041be83d" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_relative_gap_tolerance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_relative_gap_tolerance)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_relative_gap_tolerance.has_value())<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>relative<sp/>gap<sp/>tolerance<sp/>count<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>m_relative_gap_tolerance<sp/>=<sp/>t_relative_gap_tolerance;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="326" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad3e0bc7a6d07853f2f54b4b47aec52ce" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ad3e0bc7a6d07853f2f54b4b47aec52ce" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_best_obj_stop</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_user_best_obj)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_best_obj_stop.has_value())<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>user<sp/>best<sp/>obj<sp/>count<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>m_best_obj_stop<sp/>=<sp/>t_user_best_obj;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="338" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a10a7490342b8cb9a0719f150ad70513d" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a10a7490342b8cb9a0719f150ad70513d" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_best_bound_stop</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_user_best_bound)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_best_bound_stop.has_value())<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>user<sp/>best<sp/>bound<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>m_best_bound_stop<sp/>=<sp/>t_user_best_bound;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="350" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ac342238df14873996a25d1182b5a2a7d" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1ac342238df14873996a25d1182b5a2a7d" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_iteration_limit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_iteration_count_limit)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iteration_count_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>iteration<sp/>count<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iteration_count_limit<sp/>=<sp/>t_iteration_count_limit;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="362" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a62819967487a06cacad8ca03d0891090" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a62819967487a06cacad8ca03d0891090" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_thread_limit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_max_n_threads)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_thread_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>thread<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>m_thread_limit<sp/>=<sp/>t_max_n_threads;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="374" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a192ee8cb58e8e1b2d33b0d58df3b0123" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a192ee8cb58e8e1b2d33b0d58df3b0123" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_time_limit</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_time_limit)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_time_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>time<sp/>limit<sp/>has<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>m_time_limit<sp/>=<sp/>t_time_limit;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="386" refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a495f616340209e28fde87270f69ce28f" refkind="member"><highlight class="normal">CRTP<sp/>&amp;<ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters_1a495f616340209e28fde87270f69ce28f" kindref="member">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::with_logs</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t_value)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_logs.has_value())<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Logging<sp/>settings<sp/>have<sp/>already<sp/>been<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>m_logs<sp/>=<sp/>t_value;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crtp();</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CRTP&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" kindref="compound">idol::OptimizerFactoryWithDefaultParameters&lt;CRTP&gt;::handle_default_parameters</ref>(<ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref><sp/>*t_optimizer)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_logs.has_value())<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_logs(m_logs.value());</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_time_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_time_limit(m_time_limit.value());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_thread_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_threads(m_thread_limit.value());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_best_bound_stop.has_value())<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_best_bound_stop(m_best_bound_stop.value());</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_best_obj_stop.has_value())<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_best_obj_stop(m_best_obj_stop.value());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_relative_gap_tolerance.has_value())<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_tol_mip_relative_gap(m_relative_gap_tolerance.value());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_absolute_gap_tolerance.has_value())<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_tol_mip_absolute_gap(m_absolute_gap_tolerance.value());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iteration_count_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_iteration_limit(m_iteration_count_limit.value());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_presolve.has_value())<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_presolve(m_presolve.value());</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_infeasible_or_unbounded_info.has_value())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_optimizer-&gt;set_param_infeasible_or_unbounded_info(m_infeasible_or_unbounded_info.value());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//IDOL_OPTIMIZERFACTORY_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h"/>
  </compounddef>
</doxygen>
