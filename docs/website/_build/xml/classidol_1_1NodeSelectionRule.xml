<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1NodeSelectionRule" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::NodeSelectionRule</compoundname>
    <templateparamlist>
      <param>
        <type>class NodeInfoT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1NodeSelectionRule_1ad5c0e61de13989aa14aa5ba4fb95ef85" prot="private" static="no" mutable="no">
        <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; *</type>
        <definition>Optimizers::BranchAndBound&lt;NodeInfoT&gt;* idol::NodeSelectionRule&lt; NodeInfoT &gt;::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="22" column="32" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1NodeSelectionRule_1a0ab01269f18682c17a86f4b97eecc255" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::NodeSelectionRule&lt; NodeInfoT &gt;::NodeSelectionRule</definition>
        <argsstring>(Optimizers::BranchAndBound&lt; NodeInfoT &gt; &amp;t_parent)</argsstring>
        <name>NodeSelectionRule</name>
        <param>
          <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; &amp;</type>
          <declname>t_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="24" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeSelectionRule_1ace7da89e4298eeee7f3887c48d5996f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::NodeSelectionRule&lt; NodeInfoT &gt;::~NodeSelectionRule</definition>
        <argsstring>()=default</argsstring>
        <name>~NodeSelectionRule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="26" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeSelectionRule_1a4b8999ffcc66ceb1ed3c3455117cb65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1NodeSet" kindref="compound">NodeSet</ref>&lt; <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt; &gt;::const_iterator</type>
        <definition>virtual NodeSet&lt;Node&lt;NodeInfoT&gt; &gt;::const_iterator idol::NodeSelectionRule&lt; NodeInfoT &gt;::operator()</definition>
        <argsstring>(const NodeSet&lt; Node&lt; NodeInfoT &gt;&gt; &amp;t_active_nodes)=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1NodeSelectionRules_1_1BestBound_1a0b241f314c0830e586d28ccc399f3e85">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1NodeSelectionRules_1_1BestEstimate_1a2ce6a4eca8ede438139a01f4aeb108e1">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1NodeSelectionRules_1_1BreadthFirst_1a77eca48eb56e248939d5fbe47bc4569e">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1NodeSelectionRules_1_1DepthFirst_1a5bbcc1a563082a5620f14d7b7271e12f">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1NodeSelectionRules_1_1WorstBound_1a189a33a974e22299742fbaee1ea04f9f">operator()</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1NodeSet" kindref="compound">NodeSet</ref>&lt; <ref refid="classidol_1_1Node" kindref="compound">Node</ref>&lt; NodeInfoT &gt;&gt; &amp;</type>
          <declname>t_active_nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="28" column="47"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeSelectionRule_1a2fa1c1f1edd02885160333fc50a6ce68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; &amp;</type>
        <definition>Optimizers::BranchAndBound&lt;NodeInfoT&gt;&amp; idol::NodeSelectionRule&lt; NodeInfoT &gt;::parent</definition>
        <argsstring>()</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="30" column="32" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeSelectionRule_1a11d7ca5311d8ca16e9b1f0e4c2e606d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound</ref>&lt; NodeInfoT &gt; &amp;</type>
        <definition>const Optimizers::BranchAndBound&lt;NodeInfoT&gt;&amp; idol::NodeSelectionRule&lt; NodeInfoT &gt;::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="32" column="38" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::NodeSelectionRule&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRule"/>
      </node>
      <node id="7">
        <label>idol::NodeSelectionRules::WorstBound&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRules_1_1WorstBound"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>idol::NodeSelectionRules::DepthFirst&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRules_1_1DepthFirst"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>idol::NodeSelectionRules::BestEstimate&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRules_1_1BestEstimate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::NodeSelectionRules::BestBound&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRules_1_1BestBound"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::NodeSelectionRule&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRule"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NodeT &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>idol::NodeSelectionRules::BreadthFirst&lt; NodeT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRules_1_1BreadthFirst"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::NodeSelectionRule&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1NodeSelectionRule"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" line="21" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h" bodystart="21" bodyend="33"/>
    <listofallmembers>
      <member refid="classidol_1_1NodeSelectionRule_1ad5c0e61de13989aa14aa5ba4fb95ef85" prot="private" virt="non-virtual"><scope>idol::NodeSelectionRule</scope><name>m_parent</name></member>
      <member refid="classidol_1_1NodeSelectionRule_1a0ab01269f18682c17a86f4b97eecc255" prot="public" virt="non-virtual"><scope>idol::NodeSelectionRule</scope><name>NodeSelectionRule</name></member>
      <member refid="classidol_1_1NodeSelectionRule_1a4b8999ffcc66ceb1ed3c3455117cb65d" prot="public" virt="pure-virtual"><scope>idol::NodeSelectionRule</scope><name>operator()</name></member>
      <member refid="classidol_1_1NodeSelectionRule_1a2fa1c1f1edd02885160333fc50a6ce68" prot="public" virt="non-virtual"><scope>idol::NodeSelectionRule</scope><name>parent</name></member>
      <member refid="classidol_1_1NodeSelectionRule_1a11d7ca5311d8ca16e9b1f0e4c2e606d4" prot="public" virt="non-virtual"><scope>idol::NodeSelectionRule</scope><name>parent</name></member>
      <member refid="classidol_1_1NodeSelectionRule_1ace7da89e4298eeee7f3887c48d5996f9" prot="public" virt="virtual"><scope>idol::NodeSelectionRule</scope><name>~NodeSelectionRule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
