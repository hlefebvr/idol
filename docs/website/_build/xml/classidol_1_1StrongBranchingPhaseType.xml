<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1StrongBranchingPhaseType" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::StrongBranchingPhaseType</compoundname>
    <derivedcompoundref refid="classidol_1_1StrongBranchingPhases_1_1WithIterationLimit" prot="public" virt="non-virtual">idol::StrongBranchingPhases::WithIterationLimit</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1StrongBranchingPhases_1_1WithNodeOptimizer" prot="public" virt="non-virtual">idol::StrongBranchingPhases::WithNodeOptimizer</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1StrongBranchingPhaseType_1a6680c676f26ee103640624ca429ac7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::StrongBranchingPhaseType::~StrongBranchingPhaseType</definition>
        <argsstring>()=default</argsstring>
        <name>~StrongBranchingPhaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/strong-branching/StrongBranchingPhase.h" line="26" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1StrongBranchingPhaseType_1a4990c556aba0ce4eeeb2b4b75b537c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::StrongBranchingPhaseType::build</definition>
        <argsstring>(Optimizer &amp;t_optimizer)=0</argsstring>
        <name>build</name>
        <reimplementedby refid="classidol_1_1StrongBranchingPhases_1_1WithNodeOptimizer_1a53500c56b3472bce4138f2587578f4bf">build</reimplementedby>
        <reimplementedby refid="classidol_1_1StrongBranchingPhases_1_1WithIterationLimit_1adaa7092b209289556ca4fc35ee83c394">build</reimplementedby>
        <param>
          <type><ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref> &amp;</type>
          <declname>t_optimizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/strong-branching/StrongBranchingPhase.h" line="28" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1StrongBranchingPhaseType_1a783c85bb226a3bdbc23edec7f7c4af57" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::StrongBranchingPhaseType::clean</definition>
        <argsstring>(Optimizer &amp;t_optimizer)=0</argsstring>
        <name>clean</name>
        <reimplementedby refid="classidol_1_1StrongBranchingPhases_1_1WithNodeOptimizer_1adb11c25ffe8842ed013804ea563d62af">clean</reimplementedby>
        <reimplementedby refid="classidol_1_1StrongBranchingPhases_1_1WithIterationLimit_1ac155ca6a287d515d73c45ad944a9fe25">clean</reimplementedby>
        <param>
          <type><ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref> &amp;</type>
          <declname>t_optimizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/strong-branching/StrongBranchingPhase.h" line="30" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1StrongBranchingPhaseType_1a9691d944dc242c1205eaf57660dc61e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1StrongBranchingPhaseType" kindref="compound">StrongBranchingPhaseType</ref> *</type>
        <definition>virtual StrongBranchingPhaseType* idol::StrongBranchingPhaseType::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1StrongBranchingPhases_1_1WithNodeOptimizer_1aec3639a768e99e4ebe9b9f96b8b63b1f">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1StrongBranchingPhases_1_1WithIterationLimit_1a85583f12948bfea1c2e5841dda72e479">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/strong-branching/StrongBranchingPhase.h" line="32" column="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::StrongBranchingPhaseType</label>
        <link refid="classidol_1_1StrongBranchingPhaseType"/>
      </node>
      <node id="3">
        <label>idol::StrongBranchingPhases::WithNodeOptimizer</label>
        <link refid="classidol_1_1StrongBranchingPhases_1_1WithNodeOptimizer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::StrongBranchingPhases::WithIterationLimit</label>
        <link refid="classidol_1_1StrongBranchingPhases_1_1WithIterationLimit"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::StrongBranchingPhaseType</label>
        <link refid="classidol_1_1StrongBranchingPhaseType"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/strong-branching/StrongBranchingPhase.h" line="24" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/strong-branching/StrongBranchingPhase.h" bodystart="24" bodyend="33"/>
    <listofallmembers>
      <member refid="classidol_1_1StrongBranchingPhaseType_1a4990c556aba0ce4eeeb2b4b75b537c82" prot="public" virt="pure-virtual"><scope>idol::StrongBranchingPhaseType</scope><name>build</name></member>
      <member refid="classidol_1_1StrongBranchingPhaseType_1a783c85bb226a3bdbc23edec7f7c4af57" prot="public" virt="pure-virtual"><scope>idol::StrongBranchingPhaseType</scope><name>clean</name></member>
      <member refid="classidol_1_1StrongBranchingPhaseType_1a9691d944dc242c1205eaf57660dc61e7" prot="public" virt="pure-virtual"><scope>idol::StrongBranchingPhaseType</scope><name>clone</name></member>
      <member refid="classidol_1_1StrongBranchingPhaseType_1a6680c676f26ee103640624ca429ac7d2" prot="public" virt="virtual"><scope>idol::StrongBranchingPhaseType</scope><name>~StrongBranchingPhaseType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
