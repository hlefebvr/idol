<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1BranchAndBoundCallbackFactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::BranchAndBoundCallbackFactory</compoundname>
    <derivedcompoundref refid="classidol_1_1CallbackAsBranchAndBoundCallback" prot="public" virt="non-virtual">idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class NodeInfoT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackFactory_1a3975f35ac10323fad20a2fde3a0cecc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;::~BranchAndBoundCallbackFactory</definition>
        <argsstring>()=default</argsstring>
        <name>~BranchAndBoundCallbackFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h" line="19" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackFactory_1a621c12413465f0d279df195f515382d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1BranchAndBoundCallback" kindref="compound">BranchAndBoundCallback</ref>&lt; NodeInfoT &gt; *</type>
        <definition>virtual BranchAndBoundCallback&lt;NodeInfoT&gt;* idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;::operator()</definition>
        <argsstring>()=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1CallbackAsBranchAndBoundCallback_1ae8906e95b09f115f8c8570df67a9caa1">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Cuts_1_1KnapsackCover_1a8f1d293ea24553ce9aa679ff370db774">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Heuristics_1_1IntegerMaster_1a011efb50a751dee1fac7e8a03180ee35">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1ReducedCostFixing_1aaa3769b3954d1d48a4845b900b1c5e22">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Utils_1_1ExportBranchAndBoundTreeToCSV_1ad01a6025d4ccdf690c66dc7cc6f7f735">operator()</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h" line="21" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1BranchAndBoundCallbackFactory_1a068043d97a3a7cf36016eb2e373854ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">BranchAndBoundCallbackFactory</ref>&lt; NodeInfoT &gt; *</type>
        <definition>virtual BranchAndBoundCallbackFactory&lt;NodeInfoT&gt;* idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1CallbackAsBranchAndBoundCallback_1a0b2c2de71a9f761512ba743e22069104">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Cuts_1_1KnapsackCover_1a1cc326ca3fdd9573e4eb3d982eab41f3">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Heuristics_1_1IntegerMaster_1a600ab683dd0bab32fb0a945715dd4068">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1ReducedCostFixing_1aacdbc19c8a740ea4aad736d6aa1ad22f">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Utils_1_1ExportBranchAndBoundTreeToCSV_1a75bd995f0b9b67efbdc810b38c896a79">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h" line="23" column="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackFactory"/>
      </node>
      <node id="2">
        <label>idol::CallbackAsBranchAndBoundCallback&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1CallbackAsBranchAndBoundCallback"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>idol::Cuts::KnapsackCover&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1Cuts_1_1KnapsackCover"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>idol::ReducedCostFixing&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1ReducedCostFixing"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::Heuristics::IntegerMaster&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1Heuristics_1_1IntegerMaster"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::BranchAndBoundCallbackFactory&lt; idol::DefaultNodeInfo &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackFactory"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; idol::DefaultNodeInfo &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>idol::Utils::ExportBranchAndBoundTreeToCSV&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1Utils_1_1ExportBranchAndBoundTreeToCSV"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::BranchAndBoundCallbackFactory&lt; NodeInfoT &gt;</label>
        <link refid="classidol_1_1BranchAndBoundCallbackFactory"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h" line="17" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h" bodystart="17" bodyend="24"/>
    <listofallmembers>
      <member refid="classidol_1_1BranchAndBoundCallbackFactory_1a068043d97a3a7cf36016eb2e373854ba" prot="public" virt="pure-virtual"><scope>idol::BranchAndBoundCallbackFactory</scope><name>clone</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackFactory_1a621c12413465f0d279df195f515382d9" prot="public" virt="pure-virtual"><scope>idol::BranchAndBoundCallbackFactory</scope><name>operator()</name></member>
      <member refid="classidol_1_1BranchAndBoundCallbackFactory_1a3975f35ac10323fad20a2fde3a0cecc2" prot="public" virt="virtual"><scope>idol::BranchAndBoundCallbackFactory</scope><name>~BranchAndBoundCallbackFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
