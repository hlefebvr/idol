<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1NodeScoreFunctions_1_1Linear" kind="class" language="C++" prot="public">
    <compoundname>idol::NodeScoreFunctions::Linear</compoundname>
    <basecompoundref refid="classidol_1_1NodeScoreFunction" prot="public" virt="non-virtual">idol::NodeScoreFunction</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1NodeScoreFunctions_1_1Linear_1aaa06cccf6fdaf4dc89c1e5e1ab70bb71" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double idol::NodeScoreFunctions::Linear::m_parameter</definition>
        <argsstring></argsstring>
        <name>m_parameter</name>
        <initializer>= 1./16.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="30" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1ae539177902142e525907d8c31a7886c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::NodeScoreFunctions::Linear::Linear</definition>
        <argsstring>()=default</argsstring>
        <name>Linear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1a1f094c957b1a8dfd35380236878ded63" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::NodeScoreFunctions::Linear::Linear</definition>
        <argsstring>(double t_parameter)</argsstring>
        <name>Linear</name>
        <param>
          <type>double</type>
          <declname>t_parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="34" column="14" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1a532fe2cd3aacee74f59ef1cb9fc03d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::NodeScoreFunctions::Linear::Linear</definition>
        <argsstring>(const Linear &amp;)=default</argsstring>
        <name>Linear</name>
        <param>
          <type>const <ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1ab355de02e0dc34791d2a30aa89a3effc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::NodeScoreFunctions::Linear::Linear</definition>
        <argsstring>(Linear &amp;&amp;)=default</argsstring>
        <name>Linear</name>
        <param>
          <type><ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1ac555cc312cb7e2a0aa93534e0f5b8c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> &amp;</type>
        <definition>Linear&amp; idol::NodeScoreFunctions::Linear::operator=</definition>
        <argsstring>(const Linear &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1a7cb8cf96fd22b7076b6abfaa31d07e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> &amp;</type>
        <definition>Linear&amp; idol::NodeScoreFunctions::Linear::operator=</definition>
        <argsstring>(Linear &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="40" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1aec94c6e73c3bbb917d4a29209194f35e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double idol::NodeScoreFunctions::Linear::operator()</definition>
        <argsstring>(double t_left, double t_right) override</argsstring>
        <name>operator()</name>
        <reimplements refid="classidol_1_1NodeScoreFunction_1a169fb5cc354bff5eb41cb682286f0e05">operator()</reimplements>
        <param>
          <type>double</type>
          <declname>t_left</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="42" column="12" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1NodeScoreFunctions_1_1Linear_1ab0aa057f30f00310d8fad0d11af91e08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classidol_1_1NodeScoreFunctions_1_1Linear" kindref="compound">Linear</ref> *</type>
        <definition>Linear* idol::NodeScoreFunctions::Linear::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classidol_1_1NodeScoreFunction_1a0a9f40bd880703f8a4787e55f9b825fa">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="46" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>idol::NodeScoreFunctions::Linear</label>
        <link refid="classidol_1_1NodeScoreFunctions_1_1Linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::NodeScoreFunction</label>
        <link refid="classidol_1_1NodeScoreFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::NodeScoreFunctions::Linear</label>
        <link refid="classidol_1_1NodeScoreFunctions_1_1Linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::NodeScoreFunction</label>
        <link refid="classidol_1_1NodeScoreFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" line="29" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/NodeScoreFunction.h" bodystart="29" bodyend="49"/>
    <listofallmembers>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1ab0aa057f30f00310d8fad0d11af91e08" prot="public" virt="virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>clone</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1ae539177902142e525907d8c31a7886c2" prot="public" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>Linear</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1a1f094c957b1a8dfd35380236878ded63" prot="public" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>Linear</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1a532fe2cd3aacee74f59ef1cb9fc03d34" prot="public" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>Linear</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1ab355de02e0dc34791d2a30aa89a3effc" prot="public" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>Linear</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1aaa06cccf6fdaf4dc89c1e5e1ab70bb71" prot="private" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>m_parameter</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1aec94c6e73c3bbb917d4a29209194f35e" prot="public" virt="virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>operator()</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1ac555cc312cb7e2a0aa93534e0f5b8c21" prot="public" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>operator=</name></member>
      <member refid="classidol_1_1NodeScoreFunctions_1_1Linear_1a7cb8cf96fd22b7076b6abfaa31d07e1f" prot="public" virt="non-virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>operator=</name></member>
      <member refid="classidol_1_1NodeScoreFunction_1ac923999bbd2e28a239e03fdc794034bc" prot="public" virt="virtual"><scope>idol::NodeScoreFunctions::Linear</scope><name>~NodeScoreFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
