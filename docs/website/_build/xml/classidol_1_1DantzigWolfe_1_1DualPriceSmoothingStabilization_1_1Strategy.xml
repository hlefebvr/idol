<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</compoundname>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1Neame_1_1Strategy" prot="public" virt="non-virtual">idol::DantzigWolfe::Neame::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1_1Strategy" prot="public" virt="non-virtual">idol::DantzigWolfe::NoStabilization::Strategy</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1DantzigWolfe_1_1Wentges_1_1Strategy" prot="public" virt="non-virtual">idol::DantzigWolfe::Wentges::Strategy</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1a859cbae1df41c3aae6a826816e36c837" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy::~Strategy</definition>
        <argsstring>()=default</argsstring>
        <name>~Strategy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="20" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1ab6c6253810f343dcc142be3b0a2f93ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy::initialize</definition>
        <argsstring>()=0</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Neame_1_1Strategy_1a63a4f9de08bef142353a3030348b0ade">initialize</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1_1Strategy_1a417f4b01ed0a0f8e435cb7d5e72fa64c">initialize</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Wentges_1_1Strategy_1ad9aa07fa9a9fc692c1dbf37047f64abb">initialize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="22" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1a11d2814fab559095ed6f244359bdda24" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy::update_stability_center</definition>
        <argsstring>(const DualPoint &amp;t_master_dual)=0</argsstring>
        <name>update_stability_center</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Neame_1_1Strategy_1a48f1e59228d3c46ec334b167a8335937">update_stability_center</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1_1Strategy_1aa0d3e49c54826d760c7b45e0edc2321d">update_stability_center</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Wentges_1_1Strategy_1a1ce6446c452607ec82b7ab6dd12535af">update_stability_center</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref> &amp;</type>
          <declname>t_master_dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="24" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1af3b375df13e42dbac1c1bb29f00ce169" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref></type>
        <definition>virtual DualPoint idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy::compute_smoothed_dual_solution</definition>
        <argsstring>(const DualPoint &amp;t_master_dual)=0</argsstring>
        <name>compute_smoothed_dual_solution</name>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Neame_1_1Strategy_1a1ad11933aa89ef696abd15f36b93a14b">compute_smoothed_dual_solution</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1_1Strategy_1a089de6e59a97f46a8fed49b6b55fc77b">compute_smoothed_dual_solution</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfe_1_1Wentges_1_1Strategy_1aeefd5a11f98084657be324dfe71e6d51">compute_smoothed_dual_solution</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Point" kindref="compound">DualPoint</ref> &amp;</type>
          <declname>t_master_dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="26" column="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>idol::DantzigWolfe::NoStabilization::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1NoStabilization_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::DantzigWolfe::Neame::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1Neame_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>idol::DantzigWolfe::Wentges::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1Wentges_1_1Strategy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</label>
        <link refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" line="18" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/dantzig-wolfe/stabilization/DualPriceSmoothingStabilization.h" bodystart="18" bodyend="27"/>
    <listofallmembers>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1af3b375df13e42dbac1c1bb29f00ce169" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</scope><name>compute_smoothed_dual_solution</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1ab6c6253810f343dcc142be3b0a2f93ad" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</scope><name>initialize</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1a11d2814fab559095ed6f244359bdda24" prot="public" virt="pure-virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</scope><name>update_stability_center</name></member>
      <member refid="classidol_1_1DantzigWolfe_1_1DualPriceSmoothingStabilization_1_1Strategy_1a859cbae1df41c3aae6a826816e36c837" prot="public" virt="virtual"><scope>idol::DantzigWolfe::DualPriceSmoothingStabilization::Strategy</scope><name>~Strategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
