<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structidol_1_1Pair" kind="struct" language="C++" prot="public">
    <compoundname>idol::Pair</compoundname>
    <templateparamlist>
      <param>
        <type>class T1</type>
      </param>
      <param>
        <type>class T2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structidol_1_1Pair_1ace9eb670f2f99ee1b4b727187ed07c48" prot="public" static="no" mutable="no">
        <type>T1</type>
        <definition>T1 idol::Pair&lt; T1, T2 &gt;::first</definition>
        <argsstring></argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="17" column="8" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structidol_1_1Pair_1ae0b4417cce65db7e5211c5517f703e8d" prot="public" static="no" mutable="no">
        <type>T2</type>
        <definition>T2 idol::Pair&lt; T1, T2 &gt;::second</definition>
        <argsstring></argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="18" column="8" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structidol_1_1Pair_1a340bf5e242eb7ab1289d8488d5cb9d4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Pair&lt; T1, T2 &gt;::Pair</definition>
        <argsstring>(const T1 &amp;t_1, const T2 &amp;t_2)</argsstring>
        <name>Pair</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>t_1</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>t_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="20" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1a3070d60869131c217a2db617b464e73d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Pair&lt; T1, T2 &gt;::Pair</definition>
        <argsstring>(T1 &amp;&amp;t_1, T2 &amp;&amp;t_2)</argsstring>
        <name>Pair</name>
        <param>
          <type>T1 &amp;&amp;</type>
          <declname>t_1</declname>
        </param>
        <param>
          <type>T2 &amp;&amp;</type>
          <declname>t_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="21" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1a50f7a34d7d796ccaf3efa4269fa0fbf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Pair&lt; T1, T2 &gt;::Pair</definition>
        <argsstring>(const T1 &amp;t_1, T2 &amp;&amp;t_2)</argsstring>
        <name>Pair</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>t_1</declname>
        </param>
        <param>
          <type>T2 &amp;&amp;</type>
          <declname>t_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="22" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1aafd564016d10d5dbd05f55241d11fbee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idol::Pair&lt; T1, T2 &gt;::Pair</definition>
        <argsstring>(T1 &amp;&amp;t_1, const T2 &amp;t_2)</argsstring>
        <name>Pair</name>
        <param>
          <type>T1 &amp;&amp;</type>
          <declname>t_1</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>t_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="23" column="5" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1af23a3159d3fc173728578b67c9f4fcb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Pair&lt; T1, T2 &gt;::Pair</definition>
        <argsstring>(const Pair &amp;)=default</argsstring>
        <name>Pair</name>
        <param>
          <type>const <ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1ab9700c6ac7086d376064ec694c7dbd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Pair&lt; T1, T2 &gt;::Pair</definition>
        <argsstring>(Pair &amp;&amp;)=default</argsstring>
        <name>Pair</name>
        <param>
          <type><ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="26" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1a3e435e3c407c09c51dd59ea383488c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;</type>
        <definition>Pair&amp; idol::Pair&lt; T1, T2 &gt;::operator=</definition>
        <argsstring>(const Pair &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="28" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1a745f26262bccb25c86a8d23f4cc8bc06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;</type>
        <definition>Pair&amp; idol::Pair&lt; T1, T2 &gt;::operator=</definition>
        <argsstring>(Pair &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="29" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structidol_1_1Pair_1a3e120417b6a76184e3b0d492fe8b7256" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::Pair&lt; T1, T2 &gt;::operator==</definition>
        <argsstring>(const Pair &amp;t_rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structidol_1_1Pair" kindref="compound">Pair</ref> &amp;</type>
          <declname>t_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="31" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="31" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>idol::Pair&lt; T, T &gt;</label>
        <link refid="structidol_1_1Pair"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; T, T &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>idol::Pair&lt; T1, T2 &gt;</label>
        <link refid="structidol_1_1Pair"/>
      </node>
      <node id="3">
        <label>idol::CommutativePair&lt; T, CompareT &gt;</label>
        <link refid="structidol_1_1CommutativePair"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::Pair&lt; T1, T2 &gt;</label>
        <link refid="structidol_1_1Pair"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" line="16" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/general/utils/Pair.h" bodystart="16" bodyend="34"/>
    <listofallmembers>
      <member refid="structidol_1_1Pair_1ace9eb670f2f99ee1b4b727187ed07c48" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>first</name></member>
      <member refid="structidol_1_1Pair_1a3e435e3c407c09c51dd59ea383488c17" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>operator=</name></member>
      <member refid="structidol_1_1Pair_1a745f26262bccb25c86a8d23f4cc8bc06" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>operator=</name></member>
      <member refid="structidol_1_1Pair_1a3e120417b6a76184e3b0d492fe8b7256" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>operator==</name></member>
      <member refid="structidol_1_1Pair_1a340bf5e242eb7ab1289d8488d5cb9d4e" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>Pair</name></member>
      <member refid="structidol_1_1Pair_1a3070d60869131c217a2db617b464e73d" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>Pair</name></member>
      <member refid="structidol_1_1Pair_1a50f7a34d7d796ccaf3efa4269fa0fbf7" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>Pair</name></member>
      <member refid="structidol_1_1Pair_1aafd564016d10d5dbd05f55241d11fbee" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>Pair</name></member>
      <member refid="structidol_1_1Pair_1af23a3159d3fc173728578b67c9f4fcb9" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>Pair</name></member>
      <member refid="structidol_1_1Pair_1ab9700c6ac7086d376064ec694c7dbd0b" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>Pair</name></member>
      <member refid="structidol_1_1Pair_1ae0b4417cce65db7e5211c5517f703e8d" prot="public" virt="non-virtual"><scope>idol::Pair</scope><name>second</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
