<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1OptimizerFactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>idol::OptimizerFactory</compoundname>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Deterministic &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; MibS &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Cplex &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; StrongDuality &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Dualize &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Gurobi &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; PessimisticAsOptimistic &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; AffineDecisionRule &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; GLPK &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; ScenarioBasedKAdaptabilityProblemSolver &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; BranchAndBound&lt; idol::DefaultNodeInfo &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Mosek &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; PADM &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; KKT &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Benders &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; BranchAndCut &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; Osi &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; JuMP &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; DantzigWolfeDecomposition &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; ColumnAndConstraintGeneration &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; PenaltyMethod &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; HiGHS &gt;</derivedcompoundref>
    <derivedcompoundref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" prot="public" virt="non-virtual">idol::OptimizerFactoryWithDefaultParameters&lt; CRTP &gt;</derivedcompoundref>
    <includes refid="OptimizerFactory_8h" local="no">OptimizerFactory.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1OptimizerFactory_1aab1c822c36ac4c578bf451e544586c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idol::OptimizerFactory::~OptimizerFactory</definition>
        <argsstring>()=default</argsstring>
        <name>~OptimizerFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="28" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerFactory_1a6363ef08653c866a17e474a1dc8c0f0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref> *</type>
        <definition>virtual Optimizer* idol::OptimizerFactory::operator()</definition>
        <argsstring>(const Model &amp;t_model) const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classidol_1_1Bilevel_1_1BranchAndCut_1a040e394c1771737949fa3660fe764c05">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1KKT_1ac99523cef508bf19fa4e1e7489030551">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1MinMax_1_1Dualize_1ac733d33fe7eb77c85543fe491015c170">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1PessimisticAsOptimistic_1ac3833a3f85113998810c41600a67e6cd">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1StrongDuality_1a5c290149e6710aed0d9c62e733ce0383">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1MibS_1a759f9b3a6f6c9e971079d1f1c60434d2">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1BranchAndBound_1af4f3c1a3e69cd034a733f9c544a0728b">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfeDecomposition_1af86bcfaef285281713b451955435e3a0">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1PADM_1ac2d380a57f3bb44afb683b068a413b06">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1PenaltyMethod_1ae845c5190a696d0d8fd3da7147d318d5">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Cplex_1a05f64c1cc35c9efdcf0488cdcc79646f">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1GLPK_1a6b1158963e494d9a69d9c0d7422ee61d">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Gurobi_1af4e1888d7b0df311a74a7bd07146383b">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1HiGHS_1aa7bef94dfa6d31e04a8f23edc41655c7">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1JuMP_1aeff948b47faded04c33da351ad2a50dd">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Mosek_1ac6fdcf5f31dbcacd00d295dcffc14cfe">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Osi_1a22e7895a9df6a80cb9e35bd162eb4893">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1AffineDecisionRule_1a006a9f44f0e437c3ff128ef09c35c25e">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1Benders_1af042fa67854f27c372f96d91619fbd17">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1ColumnAndConstraintGeneration_1a10cc684387e2c359ab2d1ac6ed1f0e5f">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1Deterministic_1a5ef7f4ccf27de3145f57f956d480a87c">operator()</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1a8541145070a97efab4ffbbd69edbd931">operator()</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates and returns a new optimizer to solve the model given as parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model which the optimizer will solve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new optimizer for the model </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="35" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerFactory_1af42e193fdac6920f4dfda602a98bf4a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref> *</type>
        <definition>virtual OptimizerFactory* idol::OptimizerFactory::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classidol_1_1Bilevel_1_1BranchAndCut_1adc1a19d5b0396af1ea60cac82b8b8016">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1KKT_1a0a533ca659f0966b219b4477acefb866">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1MinMax_1_1Dualize_1a59285bbc53e45c596e6f1e37ebd95019">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1PessimisticAsOptimistic_1ae981926705e5940d80930c5eec5780c0">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1StrongDuality_1a2342647b8a07923fefba9c535bff7a36">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Bilevel_1_1MibS_1ac946ea69a4f3c45af62de29bac2f2b39">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1DantzigWolfeDecomposition_1ad311de4a9ec161333595ae2d78346922">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1PADM_1aad421e528d01607046fdbbcc348f53ac">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1PenaltyMethod_1a50881107f7bea862f47e027397a6748a">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Cplex_1a737832852190eb39ea6069a6b4931302">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1GLPK_1a809d9ca31e9528bb44e74c0cf6b31de3">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Gurobi_1a59b695542c520ae3e659bd754d1aaaff">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1HiGHS_1a98335cd2bd680f89358bed27a0cac805">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1JuMP_1adb4813248aa61d2af8cb0bfe052e8ecc">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Mosek_1a6c9d22f331d48cc46c6016d8980d9a5a">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Osi_1a3595578d4bacf9c9c1e2376f50dc29dc">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1AffineDecisionRule_1a7f6130f11ed9acc79cd3f7510565d965">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1Benders_1ab7090a2daeaf6eeb9cde558aa4a042f4">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1ColumnAndConstraintGeneration_1a7e412a8c938b525e790c5159eb7a82f5">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1Deterministic_1a6ecd5d8ce60aeb8aa9cf24c8761353f2">clone</reimplementedby>
        <reimplementedby refid="classidol_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1ac287cbd81adbfe953b27638fc72f2e14">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates and return a copy of the optimizer factory. This is used for polymorphism. <simplesect kind="return"><para>A copied object of the current object (i.e., *this) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="41" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerFactory_1a997906f3b7db473a7368c48c4be595ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; idol::OptimizerFactory::as</definition>
        <argsstring>()</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="44" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerFactory_1a804f8415a57f2a2ae5c197139de2d236" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; idol::OptimizerFactory::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="52" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1OptimizerFactory_1a8282a87bf2a07d6bf4d5f391632dc423" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool idol::OptimizerFactory::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="60" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" bodystart="60" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref> is the base class for all optimizer factories.</para>
<para>An optimizer Factory is used to create an optimizer when actually needed. They can be seen as customizable &quot;building plans&quot; for actually creating external-mip. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="42">
        <label>idol::DantzigWolfeDecomposition</label>
        <link refid="classidol_1_1DantzigWolfeDecomposition"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>idol::Robust::AffineDecisionRule</label>
        <link refid="classidol_1_1Robust_1_1AffineDecisionRule"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>idol::HiGHS</label>
        <link refid="classidol_1_1HiGHS"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Deterministic &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Deterministic &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; DantzigWolfeDecomposition &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; DantzigWolfeDecomposition &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; PADM &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; PADM &gt;</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; CRTP &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; HiGHS &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; HiGHS &gt;</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>idol::PenaltyMethod</label>
        <link refid="classidol_1_1PenaltyMethod"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; PenaltyMethod &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; PenaltyMethod &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; GLPK &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; GLPK &gt;</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>idol::OsiCplex</label>
        <link refid="classidol_1_1OsiCplex"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; AffineDecisionRule &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; AffineDecisionRule &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Gurobi &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Gurobi &gt;</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>idol::PADM</label>
        <link refid="classidol_1_1PADM"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Robust::Deterministic</label>
        <link refid="classidol_1_1Robust_1_1Deterministic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>idol::Osi</label>
        <link refid="classidol_1_1Osi"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>idol::Bilevel::MibS</label>
        <link refid="classidol_1_1Bilevel_1_1MibS"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>idol::OsiSymphony</label>
        <link refid="classidol_1_1OsiSymphony"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>idol::BranchAndBound&lt; NodeT &gt;</label>
        <link refid="classidol_1_1BranchAndBound"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>idol::OsiClp</label>
        <link refid="classidol_1_1OsiClp"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>idol::Bilevel::MinMax::Dualize</label>
        <link refid="classidol_1_1Bilevel_1_1MinMax_1_1Dualize"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; ColumnAndConstraintGeneration &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; ColumnAndConstraintGeneration &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; MibS &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; MibS &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; PessimisticAsOptimistic &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; PessimisticAsOptimistic &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>idol::Cplex</label>
        <link refid="classidol_1_1Cplex"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>idol::Bilevel::PessimisticAsOptimistic</label>
        <link refid="classidol_1_1Bilevel_1_1PessimisticAsOptimistic"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Cplex &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Cplex &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Benders &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Benders &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Dualize &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Dualize &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>idol::Mosek</label>
        <link refid="classidol_1_1Mosek"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>idol::Robust::ColumnAndConstraintGeneration</label>
        <link refid="classidol_1_1Robust_1_1ColumnAndConstraintGeneration"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; BranchAndCut &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; BranchAndCut &gt;</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>idol::JuMP</label>
        <link refid="classidol_1_1JuMP"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>idol::Robust::ScenarioBasedKAdaptabilityProblemSolver</label>
        <link refid="classidol_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>idol::Bilevel::StrongDuality</label>
        <link refid="classidol_1_1Bilevel_1_1StrongDuality"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Mosek &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Mosek &gt;</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>idol::Robust::Benders</label>
        <link refid="classidol_1_1Robust_1_1Benders"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>idol::Bilevel::BranchAndCut</label>
        <link refid="classidol_1_1Bilevel_1_1BranchAndCut"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; JuMP &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; JuMP &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; BranchAndBound&lt; idol::DefaultNodeInfo &gt; &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; BranchAndBound&lt; idol::DefaultNodeInfo &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>idol::Gurobi</label>
        <link refid="classidol_1_1Gurobi"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>idol::GLPK</label>
        <link refid="classidol_1_1GLPK"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; Osi &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; Osi &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; KKT &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; KKT &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; ScenarioBasedKAdaptabilityProblemSolver &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; ScenarioBasedKAdaptabilityProblemSolver &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>idol::OptimizerFactory</label>
        <link refid="classidol_1_1OptimizerFactory"/>
      </node>
      <node id="29">
        <label>idol::Bilevel::KKT</label>
        <link refid="classidol_1_1Bilevel_1_1KKT"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>idol::OptimizerFactoryWithDefaultParameters&lt; StrongDuality &gt;</label>
        <link refid="classidol_1_1OptimizerFactoryWithDefaultParameters"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="template-instance">
          <edgelabel>&lt; StrongDuality &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>idol::OptimizerFactory</label>
        <link refid="classidol_1_1OptimizerFactory"/>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" line="26" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/OptimizerFactory.h" bodystart="26" bodyend="63"/>
    <listofallmembers>
      <member refid="classidol_1_1OptimizerFactory_1a997906f3b7db473a7368c48c4be595ac" prot="public" virt="non-virtual"><scope>idol::OptimizerFactory</scope><name>as</name></member>
      <member refid="classidol_1_1OptimizerFactory_1a804f8415a57f2a2ae5c197139de2d236" prot="public" virt="non-virtual"><scope>idol::OptimizerFactory</scope><name>as</name></member>
      <member refid="classidol_1_1OptimizerFactory_1af42e193fdac6920f4dfda602a98bf4a1" prot="public" virt="pure-virtual"><scope>idol::OptimizerFactory</scope><name>clone</name></member>
      <member refid="classidol_1_1OptimizerFactory_1a8282a87bf2a07d6bf4d5f391632dc423" prot="public" virt="non-virtual"><scope>idol::OptimizerFactory</scope><name>is</name></member>
      <member refid="classidol_1_1OptimizerFactory_1a6363ef08653c866a17e474a1dc8c0f0a" prot="public" virt="pure-virtual"><scope>idol::OptimizerFactory</scope><name>operator()</name></member>
      <member refid="classidol_1_1OptimizerFactory_1aab1c822c36ac4c578bf451e544586c74" prot="public" virt="virtual"><scope>idol::OptimizerFactory</scope><name>~OptimizerFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
