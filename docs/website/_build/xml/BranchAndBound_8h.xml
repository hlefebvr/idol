<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="BranchAndBound_8h" kind="file" language="C++">
    <compoundname>BranchAndBound.h</compoundname>
    <includes local="no">memory</includes>
    <includes refid="OptimizerFactory_8h" local="yes">idol/general/optimizers/OptimizerFactory.h</includes>
    <includes refid="Optimizers__BranchAndBound_8h" local="yes">Optimizers_BranchAndBound.h</includes>
    <includes refid="BranchAndBoundCallbackFactory_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h</includes>
    <includes refid="BranchAndBoundCallback_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h</includes>
    <includes refid="CallbackAsBranchAndBoundCallback_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h</includes>
    <includes refid="CallbackFactory_8h" local="yes">idol/mixed-integer/optimizers/callbacks/CallbackFactory.h</includes>
    <includes refid="DefaultNodeInfo_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h</includes>
    <includes refid="branch-and-bound_2logs_2Factory_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/logs/Factory.h</includes>
    <includes refid="branch-and-bound_2logs_2Info_8h" local="yes">idol/mixed-integer/optimizers/branch-and-bound/logs/Info.h</includes>
    <includedby refid="solvers_8h" local="yes">/home/henri/Research/idol/lib/include/idol/solvers.h</includedby>
    <incdepgraph>
      <node id="32">
        <label>list</label>
      </node>
      <node id="4">
        <label>Optimizer.h</label>
        <link refid="Optimizer_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>idol/mixed-integer/modeling/models/Model.h</label>
        <link refid="Model_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h</label>
        <link refid="BranchAndBoundCallbackFactory_8h_source"/>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="13">
        <label>iomanip</label>
      </node>
      <node id="74">
        <label>idol/mixed-integer/optimizers/branch-and-bound/logs/Info.h</label>
        <link refid="branch-and-bound_2logs_2Info_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>limits</label>
      </node>
      <node id="52">
        <label>idol/mixed-integer/modeling/expressions/LinExpr.h</label>
        <link refid="LinExpr_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>idol/general/utils/Point.h</label>
        <link refid="Point_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>idol/general/utils/Pair.h</label>
        <link refid="Pair_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>idol/mixed-integer/optimizers/branch-and-bound/branching-rules/factories/BranchingRuleFactory.h</label>
        <link refid="BranchingRuleFactory_8h_source"/>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>idol/general/optimizers/OptimizerFactory.h</label>
        <link refid="OptimizerFactory_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>cassert</label>
      </node>
      <node id="66">
        <label>DefaultNodeUpdator.h</label>
        <link refid="DefaultNodeUpdator_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="14">
        <label>numeric</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="37">
        <label>impl_Annotation.h</label>
        <link refid="impl__Annotation_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>BranchingDecision.h</label>
        <link refid="BranchingDecision_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>idol/mixed-integer/optimizers/branch-and-bound/nodes/NodeUpdator.h</label>
        <link refid="NodeUpdator_8h_source"/>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/BranchAndBound.h</label>
        <link refid="BranchAndBound_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>idol/mixed-integer/optimizers/branch-and-bound/nodes/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>idol/general/numericals.h</label>
        <link refid="numericals_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>AffExpr.h</label>
        <link refid="AffExpr_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>fstream</label>
      </node>
      <node id="19">
        <label>ostream</label>
      </node>
      <node id="57">
        <label>idol/mixed-integer/modeling/expressions/QuadExpr.h</label>
        <link refid="QuadExpr_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>idol/mixed-integer/modeling/variables/VarVersion.h</label>
        <link refid="VarVersion_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>idol/mixed-integer/optimizers/callbacks/CallbackFactory.h</label>
        <link refid="CallbackFactory_8h_source"/>
      </node>
      <node id="38">
        <label>any</label>
      </node>
      <node id="43">
        <label>idol/mixed-integer/optimizers/branch-and-bound/branching-rules/impls/BranchingRule.h</label>
        <link refid="BranchingRule_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>idol/mixed-integer/modeling/objects/Object.h</label>
        <link refid="Object_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h</label>
        <link refid="DefaultNodeInfo_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/factories/NodeSelectionRuleFactory.h</label>
        <link refid="NodeSelectionRuleFactory_8h_source"/>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="47">
        <label>idol/mixed-integer/optimizers/branch-and-bound/callbacks/AbstractBranchAndBoundCallbackI.h</label>
        <link refid="AbstractBranchAndBoundCallbackI_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>idol/mixed-integer/optimizers/branch-and-bound/node-selection-rules/impls/NodeSelectionRule.h</label>
        <link refid="NodeSelectionRule_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>vector</label>
      </node>
      <node id="71">
        <label>idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h</label>
        <link refid="BranchAndBoundCallback_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>streambuf</label>
      </node>
      <node id="21">
        <label>Optimizers_BranchAndBound.h</label>
        <link refid="Optimizers__BranchAndBound_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>idol/mixed-integer/modeling/constraints/TempCtr.h</label>
        <link refid="TempCtr_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>utility</label>
      </node>
      <node id="34">
        <label>array</label>
      </node>
      <node id="27">
        <label>SparseVector.h</label>
        <link refid="SparseVector_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>sstream</label>
      </node>
      <node id="24">
        <label>idol/general/utils/IteratorForward.h</label>
        <link refid="IteratorForward_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>idol/mixed-integer/modeling/Types.h</label>
        <link refid="Types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>idol/mixed-integer/modeling/annotations/Annotation.h</label>
        <link refid="Annotation_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>idol/general/optimizers/logs.h</label>
        <link refid="logs_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>idol/mixed-integer/optimizers/branch-and-bound/logs/Factory.h</label>
        <link refid="branch-and-bound_2logs_2Factory_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="55">
        <label>idol/mixed-integer/modeling/constraints/Ctr.h</label>
        <link refid="Ctr_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>idol/mixed-integer/modeling/objects/Version.h</label>
        <link refid="Version_8h_source"/>
      </node>
      <node id="40">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>Timer.h</label>
        <link refid="Timer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>idol/mixed-integer/modeling/constraints/CtrVersion.h</label>
        <link refid="CtrVersion_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>idol/general/optimizers/Algorithm.h</label>
        <link refid="Algorithm_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>idol/general/utils/exceptions/Exception.h</label>
        <link refid="Exception_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>idol/mixed-integer/optimizers/branch-and-bound/nodes/NodeSet.h</label>
        <link refid="NodeSet_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>idol/general/utils/Vector.h</label>
        <link refid="Vector_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>idol/mixed-integer/modeling/constraints/SOSCtr.h</label>
        <link refid="SOSCtr_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>CallbackAsBranchAndBoundCallback.h</label>
        <link refid="CallbackAsBranchAndBoundCallback_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ObjectId.h</label>
        <link refid="ObjectId_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>idol/mixed-integer/modeling/constraints/QCtr.h</label>
        <link refid="QCtr_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>idol/mixed-integer/optimizers/callbacks/Callback.h</label>
        <link refid="Callback_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>idol/mixed-integer/modeling/variables/Var.h</label>
        <link refid="Var_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="59">
        <label>idol/general/utils/LimitedWidthStream.h</label>
        <link refid="LimitedWidthStream_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>idol/general/utils/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>idol/general/utils/Map.h</label>
        <link refid="Map_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/henri/Research/idol/lib/include/idol/solvers.h</label>
        <link refid="solvers_8h_source"/>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/BranchAndBound.h</label>
        <link refid="BranchAndBound_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classidol_1_1BranchAndBound" prot="public">idol::BranchAndBound</innerclass>
    <innernamespace refid="namespaceidol">idol</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>henri<sp/>on<sp/>21/03/23.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IDOL_BRANCHANDBOUND_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDOL_BRANCHANDBOUND_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/general/optimizers/OptimizerFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Optimizers_BranchAndBound.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallbackFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/callbacks/BranchAndBoundCallback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/callbacks/CallbackAsBranchAndBoundCallback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/callbacks/CallbackFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/nodes/DefaultNodeInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/logs/Factory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/mixed-integer/optimizers/branch-and-bound/logs/Info.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">idol<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BranchAndBound;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">ol::DefaultNodeInfo&gt;</highlight></codeline>
<codeline lineno="29" refid="classidol_1_1BranchAndBound" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" kindref="compound">OptimizerFactoryWithDefaultParameters</ref>&lt;BranchAndBound&lt;NodeT&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;OptimizerFactory&gt;<sp/>m_relaxation_optimizer_factory;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;BranchingRuleFactory&lt;NodeT&gt;&gt;<sp/>m_branching_rule_factory;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;NodeSelectionRuleFactory&lt;NodeT&gt;&gt;<sp/>m_node_selection_rule_factory;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Logs::BranchAndBound::Factory&lt;NodeT&gt;&gt;<sp/>m_logger_factory;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;std::unique_ptr&lt;BranchAndBoundCallbackFactory&lt;NodeT&gt;&gt;&gt;<sp/>m_callbacks;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_subtree_depth;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;unsigned<sp/>int&gt;<sp/>m_log_frequency;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classidol_1_1BranchAndBound_1aa42256409107a9c2909a0a85b3862a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ReturnT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound_1aa42256409107a9c2909a0a85b3862a08" kindref="member">only_if_has_Strategy</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::pair&lt;typename<sp/>T::template<sp/>Strategy&lt;NodeT&gt;,<sp/>ReturnT&gt;::second_type;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classidol_1_1BranchAndBound_1a96fec5e9e6f278c51ec788b317321616" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound_1a96fec5e9e6f278c51ec788b317321616" kindref="member">BranchAndBound</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound_1a96fec5e9e6f278c51ec788b317321616" kindref="member">BranchAndBound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&amp;<sp/>t_rhs);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeT&gt;</ref>&amp;<sp/><ref refid="classidol_1_1BranchAndBound_1a8ece634603121d7f538e0a5a5e47312b" kindref="member">with_node_optimizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_node_optimizer);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_node_optimizer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_node_optimizer);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeT&gt;</ref>&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_node_optimizer);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeT&gt;</ref>&amp;<sp/><ref refid="classidol_1_1BranchAndBound_1a4da44c69626f3a6e6273b29af12d62dd" kindref="member">with_branching_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchingRuleFactory" kindref="compound">BranchingRuleFactory&lt;NodeT&gt;</ref>&amp;<sp/>t_branching_rule);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>BranchingRuleFactoryT&gt;</highlight></codeline>
<codeline lineno="112" refid="classidol_1_1BranchAndBound_1a6f26fc42ea22b19b0995416db72e45bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound_1aa42256409107a9c2909a0a85b3862a08" kindref="member">only_if_has_Strategy&lt;BranchAndBound&lt;NodeT&gt;</ref>&amp;,<sp/>BranchingRuleFactoryT&gt;<sp/><ref refid="classidol_1_1BranchAndBound_1a6f26fc42ea22b19b0995416db72e45bf" kindref="member">with_branching_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BranchingRuleFactoryT&amp;<sp/>t_branching_rule);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeT&gt;</ref>&amp;<sp/><ref refid="classidol_1_1BranchAndBound_1a899d89528f5a06aa1fdc245d78b991dd" kindref="member">with_node_selection_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1NodeSelectionRuleFactory" kindref="compound">NodeSelectionRuleFactory&lt;NodeT&gt;</ref>&amp;<sp/>t_node_selection);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeSelectionRuleFactoryT&gt;</highlight></codeline>
<codeline lineno="143" refid="classidol_1_1BranchAndBound_1a3b795634a2b9739b7fd1a19918c2004f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound_1aa42256409107a9c2909a0a85b3862a08" kindref="member">only_if_has_Strategy&lt;BranchAndBound&lt;NodeT&gt;</ref>&amp;,<sp/>NodeSelectionRuleFactoryT&gt;<sp/><ref refid="classidol_1_1BranchAndBound_1a3b795634a2b9739b7fd1a19918c2004f" kindref="member">with_node_selection_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeSelectionRuleFactoryT&amp;<sp/>t_node_selection_rule);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound_1a96fec5e9e6f278c51ec788b317321616" kindref="member">BranchAndBound</ref>(<ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&amp;<sp/>operator=(const<sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&amp;<sp/>operator=(<ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref><sp/>*operator()(const<sp/><ref refid="classidol_1_1Model" kindref="compound">Model</ref><sp/>&amp;t_model)<sp/>const<sp/>override;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref><sp/>*<ref refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" kindref="member">clone</ref>()<sp/>const<sp/>override;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&lt;NodeT&gt;&amp;<sp/><ref refid="classidol_1_1BranchAndBound_1aaa45a4815818ee36fa0838223a09c1b6" kindref="member">with_subtree_depth</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_depth);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&lt;NodeT&gt;&amp;<sp/>with_logger(const<sp/>Logs::<ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>::Factory&lt;NodeT&gt;&amp;<sp/>t_log_factory);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&lt;NodeT&gt;&amp;<sp/><ref refid="classidol_1_1BranchAndBound_1a946aaee3c50f86c76c45e245dcf77148" kindref="member">add_callback</ref>(const<sp/><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">BranchAndBoundCallbackFactory</ref>&lt;NodeT&gt;<sp/>&amp;<sp/>t_callback);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&lt;NodeT&gt;&amp;<sp/><ref refid="classidol_1_1BranchAndBound_1a946aaee3c50f86c76c45e245dcf77148" kindref="member">add_callback</ref>(const<sp/><ref refid="classidol_1_1CallbackFactory" kindref="compound">CallbackFactory</ref>&amp;<sp/>t_callback);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">template&lt;class<sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idol::<ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&lt;NodeT&gt;::set_node_optimizer(const<sp/>idol::<ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref><sp/>&amp;t_node_optimizer)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>m_relaxation_optimizer_factory.reset(t_node_optimizer.clone());</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;::with_logger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Logs_1_1BranchAndBound_1_1Factory" kindref="compound">idol::Logs::BranchAndBound::Factory&lt;NodeT&gt;</ref><sp/>&amp;t_log_factory)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_logger_factory)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Logs<sp/>have<sp/>already<sp/>been<sp/>configured.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>m_logger_factory.reset(t_log_factory.clone());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">idol::OptimizerFactory</ref><sp/>&amp;t_node_optimizer)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound_1a8ece634603121d7f538e0a5a5e47312b" kindref="member">with_node_optimizer</ref>(t_node_optimizer);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="234" refid="classidol_1_1BranchAndBound_1aa02f32f7120d917e8b843d0b280fcd2a" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound_1a946aaee3c50f86c76c45e245dcf77148" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::add_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1CallbackFactory" kindref="compound">CallbackFactory</ref><sp/>&amp;t_callback)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound_1a946aaee3c50f86c76c45e245dcf77148" kindref="member">add_callback</ref>(<ref refid="classidol_1_1CallbackAsBranchAndBoundCallback" kindref="compound">CallbackAsBranchAndBoundCallback&lt;NodeT&gt;</ref>(t_callback));</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="239" refid="classidol_1_1BranchAndBound_1a946aaee3c50f86c76c45e245dcf77148" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1BranchAndBound_1a946aaee3c50f86c76c45e245dcf77148" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::add_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBoundCallbackFactory" kindref="compound">BranchAndBoundCallbackFactory&lt;NodeT&gt;</ref><sp/>&amp;t_callback)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>m_callbacks.emplace_back(t_callback.clone());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="247" refid="classidol_1_1BranchAndBound_1aaa45a4815818ee36fa0838223a09c1b6" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1BranchAndBound_1aaa45a4815818ee36fa0838223a09c1b6" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::with_subtree_depth</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_depth)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_subtree_depth.has_value())<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>subtree<sp/>depth<sp/>has<sp/>already<sp/>been<sp/>given&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subtree_depth<sp/>=<sp/>t_depth;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeSelectionRuleFactoryT&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;::template</ref><sp/>only_if_has_Strategy&lt;idol::BranchAndBound&lt;NodeT&gt;&amp;,<sp/>NodeSelectionRuleFactoryT&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound_1a899d89528f5a06aa1fdc245d78b991dd" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::with_node_selection_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeSelectionRuleFactoryT<sp/>&amp;t_node_selection_rule)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound_1a899d89528f5a06aa1fdc245d78b991dd" kindref="member">with_node_selection_rule</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NodeSelectionRuleFactoryT::template<sp/>Strategy&lt;NodeT&gt;(t_node_selection_rule));</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="267" refid="classidol_1_1BranchAndBound_1a899d89528f5a06aa1fdc245d78b991dd" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound_1a899d89528f5a06aa1fdc245d78b991dd" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::with_node_selection_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1NodeSelectionRuleFactory" kindref="compound">NodeSelectionRuleFactory&lt;NodeT&gt;</ref><sp/>&amp;t_node_selection)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_node_selection_rule_factory)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>node<sp/>selection<sp/>rule<sp/>has<sp/>already<sp/>been<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>m_node_selection_rule_factory.reset(t_node_selection.clone());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>BranchingRuleFactoryT&gt;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;::template</ref><sp/>only_if_has_Strategy&lt;idol::BranchAndBound&lt;NodeT&gt;&amp;,<sp/>BranchingRuleFactoryT&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound_1a4da44c69626f3a6e6273b29af12d62dd" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::with_branching_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BranchingRuleFactoryT<sp/>&amp;t_branching_rule)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound_1a4da44c69626f3a6e6273b29af12d62dd" kindref="member">with_branching_rule</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BranchingRuleFactoryT::template<sp/>Strategy&lt;NodeT&gt;(t_branching_rule));</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="286" refid="classidol_1_1BranchAndBound_1a4da44c69626f3a6e6273b29af12d62dd" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1BranchAndBound_1a4da44c69626f3a6e6273b29af12d62dd" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::with_branching_rule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchingRuleFactory" kindref="compound">BranchingRuleFactory&lt;NodeT&gt;</ref><sp/>&amp;t_branching_rule)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_branching_rule_factory)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>branching<sp/>rule<sp/>has<sp/>already<sp/>been<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>m_branching_rule_factory.reset(t_branching_rule.clone());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="298" refid="classidol_1_1BranchAndBound_1a8ece634603121d7f538e0a5a5e47312b" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound" kindref="compound">idol::BranchAndBound&lt;NodeT&gt;</ref><sp/>&amp;<ref refid="classidol_1_1BranchAndBound_1a8ece634603121d7f538e0a5a5e47312b" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::with_node_optimizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref><sp/>&amp;t_node_optimizer)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_relaxation_optimizer_factory)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>node<sp/>solver<sp/>has<sp/>already<sp/>been<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>m_relaxation_optimizer_factory.reset(t_node_optimizer.<ref refid="classidol_1_1OptimizerFactory_1af42e193fdac6920f4dfda602a98bf4a1" kindref="member">clone</ref>());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="310" refid="classidol_1_1BranchAndBound_1a15e010f0ecbb6ddde4ec3fee723564f0" refkind="member"><highlight class="normal"><ref refid="classidol_1_1BranchAndBound_1a96fec5e9e6f278c51ec788b317321616" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::BranchAndBound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref><sp/>&amp;t_rhs)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" kindref="compound">OptimizerFactoryWithDefaultParameters</ref>&lt;<ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>&lt;NodeT&gt;&gt;(t_rhs),</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_relaxation_optimizer_factory(t_rhs.m_relaxation_optimizer_factory<sp/>?<sp/>t_rhs.m_relaxation_optimizer_factory-&gt;<ref refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" kindref="member">clone</ref>()<sp/>:<sp/>nullptr),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_branching_rule_factory(t_rhs.m_branching_rule_factory<sp/>?<sp/>t_rhs.m_branching_rule_factory-&gt;<ref refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" kindref="member">clone</ref>()<sp/>:<sp/>nullptr),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_node_selection_rule_factory(t_rhs.m_node_selection_rule_factory<sp/>?<sp/>t_rhs.m_node_selection_rule_factory-&gt;<ref refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" kindref="member">clone</ref>()<sp/>:<sp/>nullptr),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_subtree_depth(t_rhs.m_subtree_depth),</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger_factory(t_rhs.m_logger_factory<sp/>?<sp/>t_rhs.m_logger_factory-&gt;<ref refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" kindref="member">clone</ref>()<sp/>:<sp/>nullptr)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/>t_rhs.m_callbacks)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_callbacks.emplace_back(cb-&gt;clone());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="326" refid="classidol_1_1BranchAndBound_1af4f3c1a3e69cd034a733f9c544a0728b" refkind="member"><highlight class="normal"><ref refid="classidol_1_1Optimizer" kindref="compound">idol::Optimizer</ref><sp/>*<ref refid="classidol_1_1BranchAndBound_1af4f3c1a3e69cd034a733f9c544a0728b" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Model" kindref="compound">Model</ref><sp/>&amp;t_model)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_relaxation_optimizer_factory)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>node<sp/>solver<sp/>has<sp/>been<sp/>given,<sp/>please<sp/>call<sp/>BranchAndBound::with_node_optimizer<sp/>to<sp/>configure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_branching_rule_factory)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>branching<sp/>rule<sp/>has<sp/>been<sp/>given,<sp/>please<sp/>call<sp/>BranchAndBound::with_branching_rule<sp/>to<sp/>configure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_node_selection_rule_factory)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>node<sp/>selection<sp/>rule<sp/>has<sp/>been<sp/>given,<sp/>please<sp/>call<sp/>BranchAndBound::with_node_selection_rule<sp/>to<sp/>configure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Logs::BranchAndBound::Factory&lt;NodeT&gt;&gt;<sp/>default_logger_factory;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_logger_factory)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_logger_factory<sp/>=<sp/>std::make_unique&lt;Logs::BranchAndBound::Info&lt;NodeT&gt;&gt;();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Optimizers_1_1BranchAndBound" kindref="compound">Optimizers::BranchAndBound&lt;NodeT&gt;</ref>(t_model,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_relaxation_optimizer_factory,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_branching_rule_factory,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_node_selection_rule_factory,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBoundCallbackI" kindref="compound">BranchAndBoundCallbackI&lt;NodeT&gt;</ref>(),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger_factory<sp/>?<sp/>*m_logger_factory<sp/>:<sp/>*default_logger_factory);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;handle_default_parameters(result);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_subtree_depth.has_value())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;set_subtree_depth(m_subtree_depth.value());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cb<sp/>:<sp/>m_callbacks)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;add_callback(cb-&gt;operator()());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeT&gt;</highlight></codeline>
<codeline lineno="366" refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" refkind="member"><highlight class="normal"><ref refid="classidol_1_1OptimizerFactory" kindref="compound">idol::OptimizerFactory</ref><sp/>*<ref refid="classidol_1_1BranchAndBound_1a9aea0205e36cc09c10fe280c265d1215" kindref="member">idol::BranchAndBound&lt;NodeT&gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">idol<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NodeInfoT&gt;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeInfoT&gt;</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeInfoT&gt;</ref>&amp;<sp/>t_branch_and_bound,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_node_optimizer)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classidol_1_1BranchAndBound" kindref="compound">BranchAndBound&lt;NodeInfoT&gt;</ref><sp/>result(t_branch_and_bound);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>t_node_optimizer;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//IDOL_BRANCHANDBOUND_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/henri/Research/idol/lib/include/idol/mixed-integer/optimizers/branch-and-bound/BranchAndBound.h"/>
  </compounddef>
</doxygen>
