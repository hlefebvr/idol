<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut" kind="class" language="C++" prot="public">
    <compoundname>idol::Optimizers::Bilevel::BranchAndCut</compoundname>
    <basecompoundref refid="classidol_1_1Algorithm" prot="public" virt="non-virtual">idol::Algorithm</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5f14d33ea5fe8bbebc857ae767ab5f4a" prot="private" static="no" mutable="no">
        <type>const ::<ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">idol::Bilevel::Description</ref> &amp;</type>
        <definition>const ::idol::Bilevel::Description&amp; idol::Optimizers::Bilevel::BranchAndCut::m_description</definition>
        <argsstring></argsstring>
        <name>m_description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="17" column="40" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aa1788e94590717f5da7200ea3fe173b9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref> &gt;</type>
        <definition>std::unique_ptr&lt;OptimizerFactory&gt; idol::Optimizers::Bilevel::BranchAndCut::m_optimizer_for_sub_problems</definition>
        <argsstring></argsstring>
        <name>m_optimizer_for_sub_problems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="18" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad2b5922812aaef00ff6067532cf80ad3" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Model&gt; idol::Optimizers::Bilevel::BranchAndCut::m_hpr</definition>
        <argsstring></argsstring>
        <name>m_hpr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="19" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ae6d7971ce439f846c238e7c40b2bbad3" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Model&gt; idol::Optimizers::Bilevel::BranchAndCut::m_separation_problem</definition>
        <argsstring></argsstring>
        <name>m_separation_problem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="20" column="21" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5c228bda9f3cc5aebdad635f60f38b00" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>std::vector&lt;Var&gt; idol::Optimizers::Bilevel::BranchAndCut::m_linking_upper_variables</definition>
        <argsstring></argsstring>
        <name>m_linking_upper_variables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="21" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7407ecdc36492f041f87bfc32340672b" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>std::optional&lt;Var&gt; idol::Optimizers::Bilevel::BranchAndCut::m_pi</definition>
        <argsstring></argsstring>
        <name>m_pi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="22" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1abbeaffa1c10440794b7891848733c9ea" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>std::optional&lt;Var&gt; idol::Optimizers::Bilevel::BranchAndCut::m_counter</definition>
        <argsstring></argsstring>
        <name>m_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="23" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a13ebd323b84dba24cfced4c2c484d5f2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>std::vector&lt;Var&gt; idol::Optimizers::Bilevel::BranchAndCut::m_lambda</definition>
        <argsstring></argsstring>
        <name>m_lambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="24" column="17" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9d024a749427fd181e82e86ba722d293" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::check_value_function_is_well_posed</definition>
        <argsstring>()</argsstring>
        <name>check_value_function_is_well_posed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="26" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a2f87e3cb83e7e242e0b35fb8baeaaaf4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::check_assumptions</definition>
        <argsstring>()</argsstring>
        <name>check_assumptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="27" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a17ca5ff37e79f7c274a88a71813874b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::build_separation_problem</definition>
        <argsstring>()</argsstring>
        <name>build_separation_problem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="28" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a49685b5d2e500708dee2785c84034017" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; double, double, double, double &gt;</type>
        <definition>std::tuple&lt;double, double, double, double&gt; idol::Optimizers::Bilevel::BranchAndCut::compute_big_M</definition>
        <argsstring>(const Model &amp;t_model)</argsstring>
        <name>compute_big_M</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="29" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aa8a937bddb9cc215495944fb033a0382" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::build_hpr</definition>
        <argsstring>(double t_lambda_lb, double t_lambda_ub, double t_pi_lb, double t_pi_ub)</argsstring>
        <name>build_hpr</name>
        <param>
          <type>double</type>
          <declname>t_lambda_lb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_lambda_ub</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_pi_lb</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_pi_ub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="30" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ac3d239b732a0603bd4bef2ddc9b24c68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classidol_1_1GenerationPattern" kindref="compound">GenerationPattern</ref>&lt; <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &gt;</type>
        <definition>GenerationPattern&lt;Ctr&gt; idol::Optimizers::Bilevel::BranchAndCut::build_dantzig_wolfe_cut</definition>
        <argsstring>()</argsstring>
        <name>build_dantzig_wolfe_cut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="31" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad9690f086cc77818f6d3be58bb0c9698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idol::Optimizers::Bilevel::BranchAndCut::BranchAndCut</definition>
        <argsstring>(const Model &amp;t_parent, const ::idol::Bilevel::Description &amp;t_description, const OptimizerFactory &amp;t_optimizer_for_sub_problems)</argsstring>
        <name>BranchAndCut</name>
        <param>
          <type>const <ref refid="classidol_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>t_parent</declname>
        </param>
        <param>
          <type>const ::<ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">idol::Bilevel::Description</ref> &amp;</type>
          <declname>t_description</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref> &amp;</type>
          <declname>t_optimizer_for_sub_problems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ab4574c2498943eede93aacb63eb551cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string idol::Optimizers::Bilevel::BranchAndCut::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1f208d4de2375b957812c36009a9a900">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="39" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad2ec2a4b74c0ef6dd1439e268b986f7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Bilevel::BranchAndCut::get_var_primal</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_primal</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a4067491b572c01dbd56944809c2ee26f">get_var_primal</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="40" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7bdd659258201f91071024802c16e934" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Bilevel::BranchAndCut::get_var_reduced_cost</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_reduced_cost</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a251f4d7d32c83135d3997d72d1ed719c">get_var_reduced_cost</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="41" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad499ebece37668988519f08c09ecf63c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Bilevel::BranchAndCut::get_var_ray</definition>
        <argsstring>(const Var &amp;t_var) const override</argsstring>
        <name>get_var_ray</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ad21a943630920c4e618b7f7450d2668b">get_var_ray</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="42" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a66e165a36e292e1f5692b0a659945243" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Bilevel::BranchAndCut::get_ctr_dual</definition>
        <argsstring>(const Ctr &amp;t_ctr) const override</argsstring>
        <name>get_ctr_dual</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a146aa552ab6c5442d7ca49d29d806427">get_ctr_dual</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="43" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a6597dd773b2b80c820d83a5c7c05d912" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Optimizers::Bilevel::BranchAndCut::get_ctr_farkas</definition>
        <argsstring>(const Ctr &amp;t_ctr) const override</argsstring>
        <name>get_ctr_farkas</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae0cf7244a71914ddbb08ba8e0baba9ca">get_ctr_farkas</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="44" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ac263a7107f75c682fcc50c14656b69cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Optimizers::Bilevel::BranchAndCut::get_n_solutions</definition>
        <argsstring>() const override</argsstring>
        <name>get_n_solutions</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a0e98fd1255617e98e988ee41ca896e71">get_n_solutions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="45" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9d43646d9ea70ca068eae26104e69ce5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::Optimizers::Bilevel::BranchAndCut::get_solution_index</definition>
        <argsstring>() const override</argsstring>
        <name>get_solution_index</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a4d4eb6b7c7885ecdfbae4c87da8d0661">get_solution_index</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="46" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1aca1da2a76fe7439c2e5d990860ef4e0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SolutionStatus</type>
        <definition>SolutionStatus idol::Algorithm::get_status</definition>
        <argsstring>() const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aba3f84c3dcd1f69e91c85606ef893b16">get_status</reimplements>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a04c88c2a639c94b2414f05ddf3d2b0f5">get_status</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1ad969dfe9ec5de34e8ba8ffdda7dcb389">get_status</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="30" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1ae7e31752554b7d0ec5f77aed4e0bc46c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SolutionReason</type>
        <definition>SolutionReason idol::Algorithm::get_reason</definition>
        <argsstring>() const override</argsstring>
        <name>get_reason</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afceabfe55118b54e898d766914186e77">get_reason</reimplements>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a1440a2af083785e62ccf349c7ba7a423">get_reason</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1afd1e761c1b12d90c6ff8a64d4c076a39">get_reason</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="31" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a0f622ce8c74e2207050de31504c34ada" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Algorithm::get_best_obj</definition>
        <argsstring>() const override</argsstring>
        <name>get_best_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a3ddcd68d96101c4df494693cf883337c">get_best_obj</reimplements>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a0cfecf2430a2446ecbbac554cb8f9aba">get_best_obj</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1a2c3b5d6558ad1177087354484c093cf4">get_best_obj</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="32" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a4e6c0365b139516387e991f8e798e65e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Algorithm::get_best_bound</definition>
        <argsstring>() const override</argsstring>
        <name>get_best_bound</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5eec9cc5da973fc5db74b4b6fb5ecd61">get_best_bound</reimplements>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1AffineDecisionRule_1a86c0533a9433708ab0ddda1ce1f34bb3">get_best_bound</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Deterministic_1aabad8904383ae9f91221c2f374150afb">get_best_bound</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="33" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a424a643bf34fdc305e5e14c32c60ebde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Algorithm::get_relative_gap</definition>
        <argsstring>() const override</argsstring>
        <name>get_relative_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a17d096d345b47194e85cc210351f45d5">get_relative_gap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="34" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1ad65545801432ff973e15a47da2cb230e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double idol::Algorithm::get_absolute_gap</definition>
        <argsstring>() const override</argsstring>
        <name>get_absolute_gap</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a266eddfc1b3aa4ee9a9231ecdf568337">get_absolute_gap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="35" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const ::<ref refid="classidol_1_1Model" kindref="compound">idol::Model</ref> &amp;</type>
        <definition>virtual const ::idol::Model&amp; idol::impl::Optimizer::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="110" column="34" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_logs</definition>
        <argsstring>() const</argsstring>
        <name>get_param_logs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="138" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a990981b38cd7f9338ab12ab383061861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_logs</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_logs</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1af2ba152cf0597c5a727fd8679ede40c5">set_param_logs</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a529ca155adff98d7422a8ce24d752ff1">set_param_logs</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="140" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_time_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_time_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="142" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab21a570955c865a255914bb1627053bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_time_limit</definition>
        <argsstring>(double t_time_limit)</argsstring>
        <name>set_param_time_limit</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a264054fd0e97f9c83eef48e430cdc8b3">set_param_time_limit</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ab9dae3fb489153a964c3b9e5c493cd44">set_param_time_limit</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_time_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="144" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_thread_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_thread_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="146" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_threads</definition>
        <argsstring>(unsigned int t_threads)</argsstring>
        <name>set_param_threads</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aab93f37ed1935bb910e960f8f154a624">set_param_threads</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>t_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="148" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_obj_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_obj_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="150" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5babaec019d640cd7828b5ef213ec335" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_best_obj_stop</definition>
        <argsstring>(double t_best_obj_stop)</argsstring>
        <name>set_param_best_obj_stop</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1ad3e1a184a67679e3dd031661b693f2b0">set_param_best_obj_stop</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a4b56aa363f7563f0ca8a56c4e53374b9">set_param_best_obj_stop</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_best_obj_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="152" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_param_best_bound_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_param_best_bound_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="154" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab60bc3d2dd159d5f061b997771c91887" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_best_bound_stop</definition>
        <argsstring>(double t_best_bound_stop)</argsstring>
        <name>set_param_best_bound_stop</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a8e12c71d452ae482bfafb4e5939b5d0f">set_param_best_bound_stop</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a06cec1a335cecefa10d91365eccfc012">set_param_best_bound_stop</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_best_bound_stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="156" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_relative_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_relative_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="158" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_mip_relative_gap</definition>
        <argsstring>(double t_tol_mip_relative_gap)</argsstring>
        <name>set_tol_mip_relative_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a88280645ce1379a569f5c4ab9647c6cd">set_tol_mip_relative_gap</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_mip_relative_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="160" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_mip_absolute_gap</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_mip_absolute_gap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="162" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_mip_absolute_gap</definition>
        <argsstring>(double t_mip_tol_absolute_gap)</argsstring>
        <name>set_tol_mip_absolute_gap</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a4abc0ef54ea1a7e181b776b996ed0257">set_tol_mip_absolute_gap</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_mip_tol_absolute_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="164" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_feasibility</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_feasibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="166" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_feasibility</definition>
        <argsstring>(double t_tol_feasibility)</argsstring>
        <name>set_tol_feasibility</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a3b03101cf613f63f222e9c6abe5402c6">set_tol_feasibility</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_feasibility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="168" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_optimality</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_optimality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="170" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_optimality</definition>
        <argsstring>(double t_tol_optimality)</argsstring>
        <name>set_tol_optimality</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1a1403ed7cb1cc90e9539227ae38f9e1d9">set_tol_optimality</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_optimality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="172" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_tol_integer</definition>
        <argsstring>() const</argsstring>
        <name>get_tol_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="174" column="13" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_tol_integer</definition>
        <argsstring>(double t_tol_integer)</argsstring>
        <name>set_tol_integer</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aee69b69800ee55fa4d11a3a8c4ce1e19">set_tol_integer</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_tol_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="176" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int idol::impl::Optimizer::get_param_iteration_limit</definition>
        <argsstring>() const</argsstring>
        <name>get_param_iteration_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="178" column="19" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::set_param_iteration_limit</definition>
        <argsstring>(unsigned int t_iteration_limit)</argsstring>
        <name>set_param_iteration_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>t_iteration_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="180" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_presolve</definition>
        <argsstring>() const</argsstring>
        <name>get_param_presolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="182" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ac673045c5d062878f2b75f3b09711f00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_presolve</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_presolve</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1GLPK_1a68257d803dcde8606946909894eab118">set_param_presolve</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1aeee8716b23e81312cb98f3592b16a686">set_param_presolve</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="184" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::get_param_infeasible_or_unbounded_info</definition>
        <argsstring>() const</argsstring>
        <name>get_param_infeasible_or_unbounded_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="186" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::set_param_infeasible_or_unbounded_info</definition>
        <argsstring>(bool t_value)</argsstring>
        <name>set_param_infeasible_or_unbounded_info</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Gurobi_1ad74b099bb65667a81d117cef470058e1">set_param_infeasible_or_unbounded_info</reimplementedby>
        <param>
          <type>bool</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="188" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classidol_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>const Timer&amp; idol::impl::Optimizer::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="190" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double idol::impl::Optimizer::get_remaining_time</definition>
        <argsstring>() const</argsstring>
        <name>get_remaining_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="192" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is_terminated</definition>
        <argsstring>() const</argsstring>
        <name>is_terminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="194" column="11" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a4468720781d9278f1e2d6628a3a00e7b">terminate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="196" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>()</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="198" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; idol::impl::Optimizer::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="206" column="24" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool idol::impl::Optimizer::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="214" column="22" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="214" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1acdbf359299a7b41bfe225ae1626ef8c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::add</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ac5e35eec35d2dea0b90fcabd30485179">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="49" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1adf827f2b34b3af075cc5b43064fb6784" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::add</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae1266859ae2679d14d22bb7449dbbe8b">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="50" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a57a45e051de6bda14c2814cb7cacbea6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::add</definition>
        <argsstring>(const QCtr &amp;t_ctr) override</argsstring>
        <name>add</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1afa9e27c1db69ebe4688fd4ba37ba3121">add</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a0ac58ea2342bb5b556d5f473bef58403" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::remove</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a922c443d01523ee75f16f8cba99ee159">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a85fbb34adf6e7870ec37811343cc767c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::remove</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a5c021fd9b686acbb6d3b8ee38c7eff9c">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1af538ce058576f37573cccff977368e14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::remove</definition>
        <argsstring>(const QCtr &amp;t_ctr) override</argsstring>
        <name>remove</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8f30740f64bd1bac13b7de206e781c7b">remove</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1QCtr" kindref="compound">QCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9973381b51311328526e2762834dd6f3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a96d15823685c0e6d2966ef35b26a9503">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="55" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aad4dda0bc32b96c114918205fd5ea7c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::write</definition>
        <argsstring>(const std::string &amp;t_name) override</argsstring>
        <name>write</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a799b0b5d874b3558c48e4d1cef6013a8">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a940dce952c6cd8607929a43c3b7d6f98" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::hook_optimize</definition>
        <argsstring>() override</argsstring>
        <name>hook_optimize</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aac4fef8007f641e8226be51f92075fde">hook_optimize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a51936f18e61f6dedb355e78ef2801ad8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::set_solution_index</definition>
        <argsstring>(unsigned int t_index) override</argsstring>
        <name>set_solution_index</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a9ad3e14177821752eb86c58195f1df46">set_solution_index</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>t_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a2207fcee68b096d6408d37a9b345c1d4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_obj_sense</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_sense</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a25a53345053496a7fadd9648df49d254">update_obj_sense</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5a7b5bc196222c825225a145fb0f2e06" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_obj</definition>
        <argsstring>() override</argsstring>
        <name>update_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ab0f43a11a4c92dbd420df4083f074fd5">update_obj</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="60" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7fb9d515f920391cef2485b67a20a811" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_rhs</definition>
        <argsstring>() override</argsstring>
        <name>update_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a1cbf5571c1dec27a41a6e9f0e19db124">update_rhs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a967e3ff95e1a845e6f81f60e354bda4a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_obj_constant</definition>
        <argsstring>() override</argsstring>
        <name>update_obj_constant</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a649970fd70f822ff3565118b23503a18">update_obj_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5424fe1dac1c428aab66ecd4689af479" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_mat_coeff</definition>
        <argsstring>(const Ctr &amp;t_ctr, const Var &amp;t_var) override</argsstring>
        <name>update_mat_coeff</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbbeaecd791d91037912dbea1cc3abe4">update_mat_coeff</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ae2514181a4b0cb79592b4183a1b68ceb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_ctr_type</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a052484a0897b8994517805c284b12cb6">update_ctr_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a34efda3b8cb1b113fd10a36961a41501" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_ctr_rhs</definition>
        <argsstring>(const Ctr &amp;t_ctr) override</argsstring>
        <name>update_ctr_rhs</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1abbdd8996efcaf9e25066f38ceb6d1a94">update_ctr_rhs</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Ctr" kindref="compound">Ctr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a3feb68c9328439369a134ee3d09d2a94" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_var_type</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_type</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a06c4c149d5a16be2a7bf436e3c94cdc2">update_var_type</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aa520b53a0dcd69d833baffbb39c3af72" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_var_lb</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_lb</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aef3dabf3018202b60d9ae6254c481700">update_var_lb</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1abed4b53493bbe6e25882f5d0d033ff4f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_var_ub</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_ub</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1aa6384ec94a6006df19907e140b8e3f67">update_var_ub</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7298d7e39393a4c308c8388d645e02ca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idol::Optimizers::Bilevel::BranchAndCut::update_var_obj</definition>
        <argsstring>(const Var &amp;t_var) override</argsstring>
        <name>update_var_obj</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1ae226b270b4aafede630156e30f41fea7">update_var_obj</reimplements>
        <param>
          <type>const <ref refid="classidol_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>t_var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a7827fa271c95cd5bfd474af2a702c094" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void idol::Algorithm::build</definition>
        <argsstring>() override</argsstring>
        <name>build</name>
        <reimplements refid="classidol_1_1impl_1_1Optimizer_1a8b1cfad93e3eb77c214aa2ff343fcb64">build</reimplements>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a6db70f15ec2cb0c8c984c06439277119">build</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="21" column="10" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1afa4fa983d18213614037fa92484bf24c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Algorithm::set_status</definition>
        <argsstring>(SolutionStatus t_status)</argsstring>
        <name>set_status</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a2bbe7a8e0e19e8b5b58854644abca316">set_status</reimplementedby>
        <param>
          <type>SolutionStatus</type>
          <declname>t_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="23" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a82ae81a413801e3467a528d6723ef98b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Algorithm::set_reason</definition>
        <argsstring>(SolutionReason t_reason)</argsstring>
        <name>set_reason</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1aa5d39f44ee786a92f6e4e70010ba8cc3">set_reason</reimplementedby>
        <param>
          <type>SolutionReason</type>
          <declname>t_reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="24" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a1a093633b2534aaea279a13506e15b94" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Algorithm::set_best_bound</definition>
        <argsstring>(double t_value)</argsstring>
        <name>set_best_bound</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1abc95e0b9763d2184a1d2b2375f0856ba">set_best_bound</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="25" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1Algorithm_1a42b635afff87af2e867b53c66bf5bfc5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::Algorithm::set_best_obj</definition>
        <argsstring>(double t_value)</argsstring>
        <name>set_best_obj</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a29b5fea1ee24213bc1995546a3d8a874">set_best_obj</reimplementedby>
        <param>
          <type>double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" line="26" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Algorithm.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a86735e064591fb4f00c3499a4b51de87" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::add</definition>
        <argsstring>(const SOSCtr &amp;t_ctr)</argsstring>
        <name>add</name>
        <reimplementedby refid="classidol_1_1OptimizerWithLazyUpdates_1a486aca612e6750e004ac078a9dea0d43">add</reimplementedby>
        <reimplementedby refid="classidol_1_1OptimizerWithLazyUpdates_1a486aca612e6750e004ac078a9dea0d43">add</reimplementedby>
        <reimplementedby refid="classidol_1_1OptimizerWithLazyUpdates_1a486aca612e6750e004ac078a9dea0d43">add</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="57" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a29b91a6040358d614f50b592917baf39" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::remove</definition>
        <argsstring>(const SOSCtr &amp;t_ctr)</argsstring>
        <name>remove</name>
        <reimplementedby refid="classidol_1_1OptimizerWithLazyUpdates_1a0552e16fd81c78e261f7031cfeb20d92">remove</reimplementedby>
        <reimplementedby refid="classidol_1_1OptimizerWithLazyUpdates_1a0552e16fd81c78e261f7031cfeb20d92">remove</reimplementedby>
        <reimplementedby refid="classidol_1_1OptimizerWithLazyUpdates_1a0552e16fd81c78e261f7031cfeb20d92">remove</reimplementedby>
        <param>
          <type>const <ref refid="classidol_1_1SOSCtr" kindref="compound">SOSCtr</ref> &amp;</type>
          <declname>t_ctr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="64" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idol::impl::Optimizer::optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_before_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_before_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1a6011ffe600f70985dbb808dda523ac73">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a4956a2c6102aebf3a9484d0ff7f96e46">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1PADM_1a4a855c27efcffefc8f78fd16dc9fe7ad">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1Benders_1af06758e58c0c572bfa327c62b18913ab">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ColumnAndConstraintGeneration_1a4850843cd6b61588860a559650aac54d">hook_before_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1Robust_1_1ScenarioBasedKAdaptabilityProblemSolver_1aab8be367942c63dc38b8d9b1a8d62fac">hook_before_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="74" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idol::impl::Optimizer::hook_after_optimize</definition>
        <argsstring>()</argsstring>
        <name>hook_after_optimize</name>
        <reimplementedby refid="classidol_1_1Optimizers_1_1BranchAndBound_1ab5e0516fa7a86d515d196c48f62d4444">hook_after_optimize</reimplementedby>
        <reimplementedby refid="classidol_1_1Optimizers_1_1DantzigWolfeDecomposition_1a8678db892a87725f66c114c19443e07e">hook_after_optimize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" line="78" column="18" bodyfile="/home/henri/Research/idol/lib/include/idol/general/optimizers/Optimizer.h" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="2">
        <label>idol::Algorithm</label>
        <link refid="classidol_1_1Algorithm"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::Optimizers::Bilevel::BranchAndCut</label>
        <link refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>idol::impl::Optimizer</label>
        <link refid="classidol_1_1impl_1_1Optimizer"/>
      </node>
      <node id="2">
        <label>idol::Algorithm</label>
        <link refid="classidol_1_1Algorithm"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>idol::Optimizers::Bilevel::BranchAndCut</label>
        <link refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>idol::Optimizer</label>
        <link refid="classidol_1_1Optimizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" line="16" column="1" bodyfile="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/Optimizers_BranchAndCut.h" bodystart="16" bodyend="70"/>
    <listofallmembers>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1acdbf359299a7b41bfe225ae1626ef8c9" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>add</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1adf827f2b34b3af075cc5b43064fb6784" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>add</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a57a45e051de6bda14c2814cb7cacbea6" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>add</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a86735e064591fb4f00c3499a4b51de87" prot="protected" virt="virtual" ambiguityscope="idol::Algorithm::"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>add</name></member>
      <member refid="classidol_1_1Algorithm_1a3238d95678aae714ebc20e4df3a7c023" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>Algorithm</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad91c5c2c1bdac21e7d1db49afc37107c" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>as</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a9aa8fef64de4f65b5462442e506594d2" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>as</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad9690f086cc77818f6d3be58bb0c9698" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>BranchAndCut</name></member>
      <member refid="classidol_1_1Algorithm_1a7827fa271c95cd5bfd474af2a702c094" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>build</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ac3d239b732a0603bd4bef2ddc9b24c68" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>build_dantzig_wolfe_cut</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aa8a937bddb9cc215495944fb033a0382" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>build_hpr</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a17ca5ff37e79f7c274a88a71813874b3" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>build_separation_problem</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a2f87e3cb83e7e242e0b35fb8baeaaaf4" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>check_assumptions</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9d024a749427fd181e82e86ba722d293" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>check_value_function_is_well_posed</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a49685b5d2e500708dee2785c84034017" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>compute_big_M</name></member>
      <member refid="classidol_1_1Algorithm_1ad65545801432ff973e15a47da2cb230e" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_absolute_gap</name></member>
      <member refid="classidol_1_1Algorithm_1a4e6c0365b139516387e991f8e798e65e" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_best_bound</name></member>
      <member refid="classidol_1_1Algorithm_1a0f622ce8c74e2207050de31504c34ada" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_best_obj</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a66e165a36e292e1f5692b0a659945243" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_ctr_dual</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a6597dd773b2b80c820d83a5c7c05d912" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_ctr_farkas</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ac263a7107f75c682fcc50c14656b69cf" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_n_solutions</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af2cec35235bbf3a746d604fd998ad636" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_best_bound_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a513ef279419e11630421378aa83ca8a3" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a28959c3d0a53207028a4b6238604eb56" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ade78f725110a641cd46ac675769f3765" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_iteration_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acc87454b609268dc1ecf65a1ced765d2" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_logs</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ae453b0716b3c142104692873a0c1fe89" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a97f61564e390973a18874b8de4bd7cb5" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_thread_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a20be2e664e6a84bf404b39d768ff03e7" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_param_time_limit</name></member>
      <member refid="classidol_1_1Algorithm_1ae7e31752554b7d0ec5f77aed4e0bc46c" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_reason</name></member>
      <member refid="classidol_1_1Algorithm_1a424a643bf34fdc305e5e14c32c60ebde" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a1b6a136e9db30ed85a55f32c58663ed4" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_remaining_time</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9d43646d9ea70ca068eae26104e69ce5" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_solution_index</name></member>
      <member refid="classidol_1_1Algorithm_1aca1da2a76fe7439c2e5d990860ef4e0d" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_status</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5b48ff7b9c91cdfedfaa9e18afb3bde5" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a317360331767cc9d4edc94cce889e5f1" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a79a3832a54c597121788782f1d49ba8c" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab246bb155504651d93c91b2dc08da414" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a502d527b86eaa0a721e5b5bcc7dd482c" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_tol_optimality</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad2ec2a4b74c0ef6dd1439e268b986f7a" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_var_primal</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad499ebece37668988519f08c09ecf63c" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_var_ray</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7bdd659258201f91071024802c16e934" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>get_var_reduced_cost</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1aef37b30f99f5a244584039750d0ba140" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>hook_after_optimize</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a59c7ad8b4b2f9700649bbf008a7876ed" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>hook_before_optimize</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a940dce952c6cd8607929a43c3b7d6f98" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>hook_optimize</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0455b8664cabb2579d93607446004afe" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>is</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a237aecc646c59f56fe7e0d406912f81a" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>is_terminated</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1abbeaffa1c10440794b7891848733c9ea" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_counter</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5f14d33ea5fe8bbebc857ae767ab5f4a" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_description</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ad2b5922812aaef00ff6067532cf80ad3" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_hpr</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a13ebd323b84dba24cfced4c2c484d5f2" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_lambda</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5c228bda9f3cc5aebdad635f60f38b00" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_linking_upper_variables</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aa1788e94590717f5da7200ea3fe173b9" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_optimizer_for_sub_problems</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7407ecdc36492f041f87bfc32340672b" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_pi</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ae6d7971ce439f846c238e7c40b2bbad3" prot="private" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>m_separation_problem</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ab4574c2498943eede93aacb63eb551cd" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>name</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a23401d6f4b9166f7d941a696d4cef2e9" prot="protected" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>optimize</name></member>
      <member refid="classidol_1_1Optimizer_1a8793c25aaba434c6b7e9a85bcca48e16" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>Optimizer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a6e2887215b92e97a30a74f4aa53dd2f0" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>parent</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a0ac58ea2342bb5b556d5f473bef58403" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a85fbb34adf6e7870ec37811343cc767c" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>remove</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1af538ce058576f37573cccff977368e14" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>remove</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a29b91a6040358d614f50b592917baf39" prot="protected" virt="virtual" ambiguityscope="idol::Algorithm::"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>remove</name></member>
      <member refid="classidol_1_1Algorithm_1a1a093633b2534aaea279a13506e15b94" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_best_bound</name></member>
      <member refid="classidol_1_1Algorithm_1a42b635afff87af2e867b53c66bf5bfc5" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_best_obj</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab60bc3d2dd159d5f061b997771c91887" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_best_bound_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a5babaec019d640cd7828b5ef213ec335" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_best_obj_stop</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a8e0f2f3d560b3a54a9b06645b6668215" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_infeasible_or_unbounded_info</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a58af4d0f6c4fabd5f571b64138610779" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_iteration_limit</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a990981b38cd7f9338ab12ab383061861" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_logs</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ac673045c5d062878f2b75f3b09711f00" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_presolve</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1acfa8aa084e883e7a191e3da770d5daa4" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_threads</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab21a570955c865a255914bb1627053bb" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_param_time_limit</name></member>
      <member refid="classidol_1_1Algorithm_1a82ae81a413801e3467a528d6723ef98b" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_reason</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a51936f18e61f6dedb355e78ef2801ad8" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_solution_index</name></member>
      <member refid="classidol_1_1Algorithm_1afa4fa983d18213614037fa92484bf24c" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_status</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ad25478639b1ed1a258a7418da7ff6964" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_tol_feasibility</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ab91250466dd2bed6c8982a0d37189da8" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_tol_integer</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1af67921d0ce90e1d5412dff5e068bbc71" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_tol_mip_absolute_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a566eb822d1a0707d50359b3e50fccbdf" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_tol_mip_relative_gap</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1ababdcbe906c67c4cae465962608ca93a" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>set_tol_optimality</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a475c1533824aef4fb8f427bc6a45546b" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>terminate</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a0cafae2af239bb5b7701dc8f2bc72acd" prot="public" virt="non-virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>time</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a9973381b51311328526e2762834dd6f3" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a34efda3b8cb1b113fd10a36961a41501" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_ctr_rhs</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1ae2514181a4b0cb79592b4183a1b68ceb" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_ctr_type</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5424fe1dac1c428aab66ecd4689af479" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_mat_coeff</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a5a7b5bc196222c825225a145fb0f2e06" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_obj</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a967e3ff95e1a845e6f81f60e354bda4a" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_obj_constant</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a2207fcee68b096d6408d37a9b345c1d4" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_obj_sense</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7fb9d515f920391cef2485b67a20a811" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_rhs</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aa520b53a0dcd69d833baffbb39c3af72" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_var_lb</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a7298d7e39393a4c308c8388d645e02ca" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_var_obj</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1a3feb68c9328439369a134ee3d09d2a94" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_var_type</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1abed4b53493bbe6e25882f5d0d033ff4f" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>update_var_ub</name></member>
      <member refid="classidol_1_1Optimizers_1_1Bilevel_1_1BranchAndCut_1aad4dda0bc32b96c114918205fd5ea7c5" prot="protected" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>write</name></member>
      <member refid="classidol_1_1impl_1_1Optimizer_1a87f1a4dcd75963657f0577387bfa3dea" prot="public" virt="virtual"><scope>idol::Optimizers::Bilevel::BranchAndCut</scope><name>~Optimizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
