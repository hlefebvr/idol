<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="BranchAndCut_8h" kind="file" language="C++">
    <compoundname>BranchAndCut.h</compoundname>
    <includes refid="OptimizerFactory_8h" local="yes">idol/general/optimizers/OptimizerFactory.h</includes>
    <includes refid="BilevelOptimizerInterface_8h" local="yes">idol/bilevel/optimizers/BilevelOptimizerInterface.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Optimizer.h</label>
        <link refid="Optimizer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="12">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>idol/general/optimizers/OptimizerFactory.h</label>
        <link refid="OptimizerFactory_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdexcept</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="8">
        <label>idol/general/numericals.h</label>
        <link refid="numericals_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ostream</label>
      </node>
      <node id="20">
        <label>idol/bilevel/optimizers/BilevelOptimizerInterface.h</label>
        <link refid="BilevelOptimizerInterface_8h_source"/>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="14">
        <label>idol/mixed-integer/modeling/Types.h</label>
        <link refid="Types_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/BranchAndCut.h</label>
        <link refid="BranchAndCut_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>Timer.h</label>
        <link refid="Timer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>idol/general/utils/exceptions/Exception.h</label>
        <link refid="Exception_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>idol/general/utils/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classidol_1_1Bilevel_1_1BranchAndCut" prot="public">idol::Bilevel::BranchAndCut</innerclass>
    <innernamespace refid="namespaceidol">idol</innernamespace>
    <innernamespace refid="namespaceidol_1_1Bilevel">idol::Bilevel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>henri<sp/>on<sp/>11.04.25.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IDOL_BILEVEL_BRANCHANDCUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDOL_BILEVEL_BRANCHANDCUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/general/optimizers/OptimizerFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;idol/bilevel/optimizers/BilevelOptimizerInterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">idol::Bilevel<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BranchAndCut;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classidol_1_1Bilevel_1_1BranchAndCut" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">idol::Bilevel::BranchAndCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactoryWithDefaultParameters" kindref="compound">OptimizerFactoryWithDefaultParameters</ref>&lt;BranchAndCut&gt;,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1OptimizerInterface" kindref="compound">Bilevel::OptimizerInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Bilevel::Description</ref>*<sp/>m_description<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;OptimizerFactory&gt;<sp/>m_optimizer_for_sub_problems;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Bilevel::Description</ref>&amp;<sp/>t_description);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;<sp/>t_src);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>(<ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;<sp/>operator=(<ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classidol_1_1Bilevel_1_1BranchAndCut_1a040e394c1771737949fa3660fe764c05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Optimizer" kindref="compound">Optimizer</ref><sp/>*<ref refid="classidol_1_1Bilevel_1_1BranchAndCut_1a040e394c1771737949fa3660fe764c05" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Model" kindref="compound">Model</ref><sp/>&amp;t_model)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">BranchAndCut</ref>&amp;<sp/>with_sub_problem_optimizer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1OptimizerFactory" kindref="compound">OptimizerFactory</ref>&amp;<sp/>t_optimizer);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_bilevel_description(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classidol_1_1Bilevel_1_1Description" kindref="compound">Description</ref><sp/>&amp;t_bilevel_description)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classidol_1_1Bilevel_1_1BranchAndCut_1adc1a19d5b0396af1ea60cac82b8b8016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classidol_1_1Bilevel_1_1BranchAndCut" kindref="compound">Bilevel::BranchAndCut</ref><sp/>*<ref refid="classidol_1_1Bilevel_1_1BranchAndCut_1adc1a19d5b0396af1ea60cac82b8b8016" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//IDOL_BILEVEL_BRANCHANDCUT_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/henri/Research/idol/lib/include/idol/bilevel/optimizers/BranchAndCut/BranchAndCut.h"/>
  </compounddef>
</doxygen>
